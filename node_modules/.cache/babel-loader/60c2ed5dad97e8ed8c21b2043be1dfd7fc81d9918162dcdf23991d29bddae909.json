{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\profile\\\\UserMemes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport api from '../../services/api';\nimport { useParams } from 'react-router-dom';\nimport MemeCard from '../MemeCard';\n\n// Animações\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.03); }\n  100% { transform: scale(1); }\n`;\n\n// Estilos premium\nconst MemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  padding: 20px;\n  animation: ${fadeIn} 0.5s ease-out;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  }\n`;\n_c = MemeGrid;\nconst MemeThumbnailContainer = styled.div`\n  position: relative;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  aspect-ratio: 1;\n  background: #f8f8f8;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n    animation: ${pulse} 1.5s infinite;\n  }\n`;\n_c2 = MemeThumbnailContainer;\nconst MemeThumbnail = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  \n  img, video {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.3s;\n  }\n\n  &:hover img, &:hover video {\n    transform: scale(1.05);\n  }\n`;\n_c3 = MemeThumbnail;\nconst MemeCaption = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 12px;\n  background: linear-gradient(to top, rgba(0,0,0,0.7), transparent);\n  color: white;\n  font-size: 0.9rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n_c4 = MemeCaption;\nconst UserMemes = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserMemes = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await api.get(`/users/${userId}/memes`);\n        setMemes(data);\n      } catch (err) {\n        setError('Falha ao carregar memes');\n        console.error('Erro ao buscar memes:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUserMemes();\n  }, [userId]);\n  const buildUrl = url => {\n    if (!url) return '';\n    if (url.startsWith('http')) return url;\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center',\n      color: '#666',\n      fontSize: '1.1rem'\n    },\n    children: \"Carregando memes...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center',\n      color: '#ff3b30',\n      fontSize: '1.1rem'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n  if (memes.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '40px',\n      textAlign: 'center',\n      color: '#888',\n      fontSize: '1.1rem'\n    },\n    children: \"Nenhum meme encontrado\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MemeGrid, {\n    children: memes.map(meme => /*#__PURE__*/_jsxDEV(MemeThumbnailContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MemeThumbnail, {\n        children: meme.mediaType === 'video' ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: buildUrl(meme.mediaUrl),\n          muted: true,\n          loop: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: buildUrl(meme.mediaUrl),\n          alt: meme.caption || 'Meme',\n          onError: e => {\n            e.target.src = 'https://placehold.co/600x600?text=Imagem+não+carregada';\n            e.target.onerror = null;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), meme.caption && /*#__PURE__*/_jsxDEV(MemeCaption, {\n        children: meme.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, meme._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(UserMemes, \"0rOS5UHb6S01qu9oZgKgYmkIqv4=\", false, function () {\n  return [useParams];\n});\n_c5 = UserMemes;\nexport default UserMemes;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"MemeGrid\");\n$RefreshReg$(_c2, \"MemeThumbnailContainer\");\n$RefreshReg$(_c3, \"MemeThumbnail\");\n$RefreshReg$(_c4, \"MemeCaption\");\n$RefreshReg$(_c5, \"UserMemes\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","api","useParams","MemeCard","jsxDEV","_jsxDEV","fadeIn","pulse","MemeGrid","div","_c","MemeThumbnailContainer","_c2","MemeThumbnail","_c3","MemeCaption","_c4","UserMemes","_s","userId","memes","setMemes","loading","setLoading","error","setError","fetchUserMemes","data","get","err","console","buildUrl","url","startsWith","process","env","REACT_APP_API_URL","style","padding","textAlign","color","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","meme","mediaType","src","mediaUrl","muted","loop","playsInline","alt","caption","onError","e","target","onerror","_id","_c5","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/profile/UserMemes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport api from '../../services/api';\r\nimport { useParams } from 'react-router-dom';\r\nimport MemeCard from '../MemeCard';\r\n\r\n// Animações\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n`;\r\n\r\nconst pulse = keyframes`\r\n  0% { transform: scale(1); }\r\n  50% { transform: scale(1.03); }\r\n  100% { transform: scale(1); }\r\n`;\r\n\r\n// Estilos premium\r\nconst MemeGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  padding: 20px;\r\n  animation: ${fadeIn} 0.5s ease-out;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  }\r\n`;\r\n\r\nconst MemeThumbnailContainer = styled.div`\r\n  position: relative;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  aspect-ratio: 1;\r\n  background: #f8f8f8;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n    animation: ${pulse} 1.5s infinite;\r\n  }\r\n`;\r\n\r\nconst MemeThumbnail = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  \r\n  img, video {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.3s;\r\n  }\r\n\r\n  &:hover img, &:hover video {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst MemeCaption = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  padding: 12px;\r\n  background: linear-gradient(to top, rgba(0,0,0,0.7), transparent);\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst UserMemes = () => {\r\n  const { userId } = useParams();\r\n  const [memes, setMemes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserMemes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const { data } = await api.get(`/users/${userId}/memes`);\r\n        setMemes(data);\r\n      } catch (err) {\r\n        setError('Falha ao carregar memes');\r\n        console.error('Erro ao buscar memes:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserMemes();\r\n  }, [userId]);\r\n\r\n  const buildUrl = (url) => {\r\n    if (!url) return '';\r\n    if (url.startsWith('http')) return url;\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\r\n  };\r\n\r\n  if (loading) return (\r\n    <div style={{ \r\n      padding: '40px', \r\n      textAlign: 'center', \r\n      color: '#666',\r\n      fontSize: '1.1rem'\r\n    }}>\r\n      Carregando memes...\r\n    </div>\r\n  );\r\n\r\n  if (error) return (\r\n    <div style={{ \r\n      padding: '40px', \r\n      textAlign: 'center', \r\n      color: '#ff3b30',\r\n      fontSize: '1.1rem'\r\n    }}>\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  if (memes.length === 0) return (\r\n    <div style={{ \r\n      padding: '40px', \r\n      textAlign: 'center', \r\n      color: '#888',\r\n      fontSize: '1.1rem'\r\n    }}>\r\n      Nenhum meme encontrado\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <MemeGrid>\r\n      {memes.map(meme => (\r\n        <MemeThumbnailContainer key={meme._id}>\r\n          <MemeThumbnail>\r\n            {meme.mediaType === 'video' ? (\r\n              <video \r\n                src={buildUrl(meme.mediaUrl)}\r\n                muted\r\n                loop\r\n                playsInline\r\n              />\r\n            ) : (\r\n              <img \r\n                src={buildUrl(meme.mediaUrl)} \r\n                alt={meme.caption || 'Meme'} \r\n                onError={(e) => {\r\n                  e.target.src = 'https://placehold.co/600x600?text=Imagem+não+carregada';\r\n                  e.target.onerror = null;\r\n                }}\r\n              />\r\n            )}\r\n          </MemeThumbnail>\r\n          {meme.caption && (\r\n            <MemeCaption>\r\n              {meme.caption}\r\n            </MemeCaption>\r\n          )}\r\n        </MemeThumbnailContainer>\r\n      ))}\r\n    </MemeGrid>\r\n  );\r\n};\r\n\r\nexport default UserMemes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}