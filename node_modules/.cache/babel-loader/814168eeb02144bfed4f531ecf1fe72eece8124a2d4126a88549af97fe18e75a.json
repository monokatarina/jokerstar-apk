{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\CommentSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiSend, FiCornerDownLeft } from 'react-icons/fi';\nimport { FiThumbsUp, FiThumbsDown } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentContainer = styled.div`\n  padding: 16px;\n  border-top: 1px solid #f0f0f0;\n`;\n_c = CommentContainer;\nconst CommentList = styled.div`\n  max-height: 300px;\n  overflow-y: auto;\n  margin-bottom: 16px;\n`;\n_c2 = CommentList;\nconst CommentItem = styled.div`\n  display: flex;\n  margin-bottom: 12px;\n`;\n_c3 = CommentItem;\nconst CommentAvatar = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  margin-right: 12px;\n  object-fit: cover;\n`;\n_c4 = CommentAvatar;\nconst CommentContent = styled.div`\n  flex: 1;\n`;\n_c5 = CommentContent;\nconst CommentUser = styled.div`\n  font-weight: 600;\n  font-size: 0.9rem;\n`;\n_c6 = CommentUser;\nconst CommentText = styled.p`\n  margin: 4px 0 0;\n  font-size: 0.9rem;\n`;\n_c7 = CommentText;\nconst CommentForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 16px;\n`;\n_c8 = CommentForm;\nconst CommentInput = styled.input`\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid #ddd;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  outline: none;\n\n  &:focus {\n    border-color: #ff4500;\n  }\n`;\n_c9 = CommentInput;\nconst SubmitButton = styled.button`\n  background: #ff4500;\n  color: white;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  margin-left: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n_c10 = SubmitButton;\nconst ReplyButton = styled.button`\n  background: none;\n  border: none;\n  color: #666;\n  font-size: 0.8rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  margin-top: 4px;\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n_c11 = ReplyButton;\nconst ReplyForm = styled.form`\n  display: flex;\n  margin-top: 8px;\n  padding-left: 12px;\n  border-left: 2px solid #eee;\n`;\n_c12 = ReplyForm;\nconst ReactionButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 8px;\n`;\nconst ReactionButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  background: none;\n  border: none;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.8rem;\n  \n  &:hover {\n    color: #ff4500;\n  }\n`;\nconst handleCommentReaction = async (commentId, reaction) => {\n  try {\n    const response = await api.post(`/memes/${memeId}/comments/${commentId}/reaction`, {\n      reaction\n    });\n    setComments(prev => prev.map(comment => {\n      if (comment._id === commentId) {\n        return {\n          ...comment,\n          likes: response.data.likes,\n          dislikes: response.data.dislikes,\n          userReaction: response.data.userReaction\n        };\n      }\n      return comment;\n    }));\n  } catch (error) {\n    console.error('Erro ao reagir:', error);\n  }\n};\nconst handleReplyReaction = async (commentId, replyId, reaction) => {\n  try {\n    const response = await api.post(`/memes/${memeId}/comments/${commentId}/replies/${replyId}/reaction`, {\n      reaction\n    });\n    setComments(prev => prev.map(comment => {\n      if (comment._id === commentId) {\n        const updatedReplies = comment.replies.map(reply => {\n          if (reply._id === replyId) {\n            return {\n              ...reply,\n              likes: response.data.likes,\n              dislikes: response.data.dislikes,\n              userReaction: response.data.userReaction\n            };\n          }\n          return reply;\n        });\n        return {\n          ...comment,\n          replies: updatedReplies\n        };\n      }\n      return comment;\n    }));\n  } catch (error) {\n    console.error('Erro ao reagir:', error);\n  }\n};\nconst CommentSection = ({\n  memeId,\n  onCommentSubmit\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await api.get(`/memes/${memeId}/comments`);\n        setComments(response.data.comments);\n      } catch (error) {\n        console.error('Erro ao buscar coment치rios:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [memeId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!commentText.trim()) return;\n    try {\n      await onCommentSubmit(commentText);\n      setCommentText('');\n      // Atualiza a lista de coment치rios\n      const response = await api.get(`/memes/${memeId}/comments`);\n      setComments(response.data.comments);\n    } catch (error) {\n      console.error('Erro ao enviar coment치rio:', error);\n    }\n  };\n  const handleReplySubmit = async (e, commentId) => {\n    e.preventDefault();\n    if (!replyText.trim()) return;\n    try {\n      const response = await api.post(`/memes/${memeId}/comments/${commentId}/replies`, {\n        text: replyText\n      });\n\n      // Atualiza a lista de coment치rios\n      const updatedComments = comments.map(comment => {\n        if (comment._id === commentId) {\n          return {\n            ...comment,\n            replies: [...comment.replies, response.data.reply]\n          };\n        }\n        return comment;\n      });\n      setComments(updatedComments);\n      setReplyText('');\n      setReplyingTo(null);\n    } catch (error) {\n      console.error('Erro ao enviar resposta:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CommentList, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Carregando coment\\xE1rios...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Nenhum coment\\xE1rio ainda. Seja o primeiro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this) : comments.map(comment => {\n        var _comment$user$profile, _comment$replies;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CommentItem, {\n            children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n              src: ((_comment$user$profile = comment.user.profile) === null || _comment$user$profile === void 0 ? void 0 : _comment$user$profile.avatar) || 'https://i.pravatar.cc/150?img=3',\n              alt: comment.user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n              children: [/*#__PURE__*/_jsxDEV(CommentUser, {\n                children: [\"@\", comment.user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), user && /*#__PURE__*/_jsxDEV(ReplyButton, {\n                onClick: () => setReplyingTo(replyingTo === comment._id ? null : comment._id),\n                children: [/*#__PURE__*/_jsxDEV(FiCornerDownLeft, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), \"Responder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), (_comment$replies = comment.replies) === null || _comment$replies === void 0 ? void 0 : _comment$replies.map(reply => {\n            var _reply$user$profile;\n            return /*#__PURE__*/_jsxDEV(CommentItem, {\n              style: {\n                marginLeft: '32px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n                src: ((_reply$user$profile = reply.user.profile) === null || _reply$user$profile === void 0 ? void 0 : _reply$user$profile.avatar) || 'https://i.pravatar.cc/150?img=3',\n                alt: reply.user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n                children: [/*#__PURE__*/_jsxDEV(CommentUser, {\n                  children: [\"@\", reply.user.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n                  children: reply.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, reply._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this);\n          }), replyingTo === comment._id && /*#__PURE__*/_jsxDEV(ReplyForm, {\n            onSubmit: e => handleReplySubmit(e, comment._id),\n            children: [/*#__PURE__*/_jsxDEV(CommentInput, {\n              type: \"text\",\n              value: replyText,\n              onChange: e => setReplyText(e.target.value),\n              placeholder: \"Escreva uma resposta...\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(FiSend, {\n                size: 18\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(CommentForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(CommentInput, {\n        type: \"text\",\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        placeholder: \"Adicione um coment\\xE1rio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(FiSend, {\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 7\n  }, this);\n};\n_s(CommentSection, \"thb2Bo4ay1KKRzluCZDSIDfYUcE=\", false, function () {\n  return [useAuth];\n});\n_c13 = CommentSection;\nexport default CommentSection;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"CommentContainer\");\n$RefreshReg$(_c2, \"CommentList\");\n$RefreshReg$(_c3, \"CommentItem\");\n$RefreshReg$(_c4, \"CommentAvatar\");\n$RefreshReg$(_c5, \"CommentContent\");\n$RefreshReg$(_c6, \"CommentUser\");\n$RefreshReg$(_c7, \"CommentText\");\n$RefreshReg$(_c8, \"CommentForm\");\n$RefreshReg$(_c9, \"CommentInput\");\n$RefreshReg$(_c10, \"SubmitButton\");\n$RefreshReg$(_c11, \"ReplyButton\");\n$RefreshReg$(_c12, \"ReplyForm\");\n$RefreshReg$(_c13, \"CommentSection\");","map":{"version":3,"names":["React","useState","useEffect","styled","api","useAuth","FiSend","FiCornerDownLeft","FiThumbsUp","FiThumbsDown","jsxDEV","_jsxDEV","CommentContainer","div","_c","CommentList","_c2","CommentItem","_c3","CommentAvatar","img","_c4","CommentContent","_c5","CommentUser","_c6","CommentText","p","_c7","CommentForm","form","_c8","CommentInput","input","_c9","SubmitButton","button","_c10","ReplyButton","_c11","ReplyForm","_c12","ReactionButtons","ReactionButton","props","$active","handleCommentReaction","commentId","reaction","response","post","memeId","setComments","prev","map","comment","_id","likes","data","dislikes","userReaction","error","console","handleReplyReaction","replyId","updatedReplies","replies","reply","CommentSection","onCommentSubmit","_s","user","comments","commentText","setCommentText","loading","setLoading","replyingTo","setReplyingTo","replyText","setReplyText","fetchComments","get","handleSubmit","e","preventDefault","trim","handleReplySubmit","text","updatedComments","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_comment$user$profile","_comment$replies","Fragment","src","profile","avatar","alt","username","onClick","size","_reply$user$profile","style","marginLeft","onSubmit","type","value","onChange","target","placeholder","autoFocus","_c13","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/츼rea de Trabalho/ifunny-clone/client/src/components/CommentSection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { FiSend, FiCornerDownLeft } from 'react-icons/fi';\r\nimport { FiThumbsUp, FiThumbsDown } from 'react-icons/fi';\r\n\r\nconst CommentContainer = styled.div`\r\n  padding: 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst CommentList = styled.div`\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst CommentItem = styled.div`\r\n  display: flex;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst CommentAvatar = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  margin-right: 12px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst CommentContent = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst CommentUser = styled.div`\r\n  font-weight: 600;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst CommentText = styled.p`\r\n  margin: 4px 0 0;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst CommentForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n`;\r\n\r\nconst CommentInput = styled.input`\r\n  flex: 1;\r\n  padding: 10px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 20px;\r\n  font-size: 0.9rem;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background: #ff4500;\r\n  color: white;\r\n  border: none;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 50%;\r\n  margin-left: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ReplyButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #666;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  margin-top: 4px;\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst ReplyForm = styled.form`\r\n  display: flex;\r\n  margin-top: 8px;\r\n  padding-left: 12px;\r\n  border-left: 2px solid #eee;\r\n`;\r\n\r\nconst ReactionButtons = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst ReactionButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  \r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst handleCommentReaction = async (commentId, reaction) => {\r\n  try {\r\n    const response = await api.post(`/memes/${memeId}/comments/${commentId}/reaction`, { reaction });\r\n    \r\n    setComments(prev => prev.map(comment => {\r\n      if (comment._id === commentId) {\r\n        return {\r\n          ...comment,\r\n          likes: response.data.likes,\r\n          dislikes: response.data.dislikes,\r\n          userReaction: response.data.userReaction\r\n        };\r\n      }\r\n      return comment;\r\n    }));\r\n  } catch (error) {\r\n    console.error('Erro ao reagir:', error);\r\n  }\r\n};\r\n\r\nconst handleReplyReaction = async (commentId, replyId, reaction) => {\r\n  try {\r\n    const response = await api.post(\r\n      `/memes/${memeId}/comments/${commentId}/replies/${replyId}/reaction`, \r\n      { reaction }\r\n    );\r\n    \r\n    setComments(prev => prev.map(comment => {\r\n      if (comment._id === commentId) {\r\n        const updatedReplies = comment.replies.map(reply => {\r\n          if (reply._id === replyId) {\r\n            return {\r\n              ...reply,\r\n              likes: response.data.likes,\r\n              dislikes: response.data.dislikes,\r\n              userReaction: response.data.userReaction\r\n            };\r\n          }\r\n          return reply;\r\n        });\r\n        \r\n        return { ...comment, replies: updatedReplies };\r\n      }\r\n      return comment;\r\n    }));\r\n  } catch (error) {\r\n    console.error('Erro ao reagir:', error);\r\n  }\r\n};\r\n\r\nconst CommentSection = ({ memeId, onCommentSubmit }) => {\r\n    const { user } = useAuth();\r\n    const [comments, setComments] = useState([]);\r\n    const [commentText, setCommentText] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [replyingTo, setReplyingTo] = useState(null);\r\n    const [replyText, setReplyText] = useState('');\r\n  \r\n    useEffect(() => {\r\n      const fetchComments = async () => {\r\n        try {\r\n          const response = await api.get(`/memes/${memeId}/comments`);\r\n          setComments(response.data.comments);\r\n        } catch (error) {\r\n          console.error('Erro ao buscar coment치rios:', error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchComments();\r\n    }, [memeId]);\r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (!commentText.trim()) return;\r\n  \r\n      try {\r\n        await onCommentSubmit(commentText);\r\n        setCommentText('');\r\n        // Atualiza a lista de coment치rios\r\n        const response = await api.get(`/memes/${memeId}/comments`);\r\n        setComments(response.data.comments);\r\n      } catch (error) {\r\n        console.error('Erro ao enviar coment치rio:', error);\r\n      }\r\n    };\r\n  \r\n    const handleReplySubmit = async (e, commentId) => {\r\n      e.preventDefault();\r\n      if (!replyText.trim()) return;\r\n  \r\n      try {\r\n        const response = await api.post(`/memes/${memeId}/comments/${commentId}/replies`, { \r\n          text: replyText \r\n        });\r\n        \r\n        // Atualiza a lista de coment치rios\r\n        const updatedComments = comments.map(comment => {\r\n          if (comment._id === commentId) {\r\n            return {\r\n              ...comment,\r\n              replies: [...comment.replies, response.data.reply]\r\n            };\r\n          }\r\n          return comment;\r\n        });\r\n        \r\n        setComments(updatedComments);\r\n        setReplyText('');\r\n        setReplyingTo(null);\r\n      } catch (error) {\r\n        console.error('Erro ao enviar resposta:', error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <CommentContainer>\r\n      <CommentList>\r\n        {loading ? (\r\n          <div>Carregando coment치rios...</div>\r\n        ) : comments.length === 0 ? (\r\n          <div>Nenhum coment치rio ainda. Seja o primeiro!</div>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <React.Fragment key={comment._id}>\r\n              <CommentItem>\r\n                <CommentAvatar \r\n                  src={comment.user.profile?.avatar || 'https://i.pravatar.cc/150?img=3'} \r\n                  alt={comment.user.username}\r\n                />\r\n                <CommentContent>\r\n                  <CommentUser>@{comment.user.username}</CommentUser>\r\n                  <CommentText>{comment.text}</CommentText>\r\n                  \r\n                  {user && (\r\n                    <ReplyButton onClick={() => setReplyingTo(replyingTo === comment._id ? null : comment._id)}>\r\n                      <FiCornerDownLeft size={12} />\r\n                      Responder\r\n                    </ReplyButton>\r\n                  )}\r\n                </CommentContent>\r\n              </CommentItem>\r\n\r\n              {/* Lista de respostas */}\r\n              {comment.replies?.map(reply => (\r\n                <CommentItem key={reply._id} style={{ marginLeft: '32px' }}>\r\n                  <CommentAvatar \r\n                    src={reply.user.profile?.avatar || 'https://i.pravatar.cc/150?img=3'} \r\n                    alt={reply.user.username}\r\n                  />\r\n                  <CommentContent>\r\n                    <CommentUser>@{reply.user.username}</CommentUser>\r\n                    <CommentText>{reply.text}</CommentText>\r\n                  </CommentContent>\r\n                </CommentItem>\r\n              ))}\r\n\r\n              {/* Formul치rio de resposta */}\r\n              {replyingTo === comment._id && (\r\n                <ReplyForm onSubmit={(e) => handleReplySubmit(e, comment._id)}>\r\n                  <CommentInput\r\n                    type=\"text\"\r\n                    value={replyText}\r\n                    onChange={(e) => setReplyText(e.target.value)}\r\n                    placeholder=\"Escreva uma resposta...\"\r\n                    autoFocus\r\n                  />\r\n                  <SubmitButton type=\"submit\">\r\n                    <FiSend size={18} />\r\n                  </SubmitButton>\r\n                </ReplyForm>\r\n              )}\r\n            </React.Fragment>\r\n          ))\r\n        )}\r\n      </CommentList>\r\n\r\n      {user && (\r\n        <CommentForm onSubmit={handleSubmit}>\r\n          <CommentInput\r\n            type=\"text\"\r\n            value={commentText}\r\n            onChange={(e) => setCommentText(e.target.value)}\r\n            placeholder=\"Adicione um coment치rio...\"\r\n          />\r\n          <SubmitButton type=\"submit\">\r\n            <FiSend size={18} />\r\n          </SubmitButton>\r\n        </CommentForm>\r\n      )}\r\n    </CommentContainer>\r\n  );\r\n};\r\n\r\nexport default CommentSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}