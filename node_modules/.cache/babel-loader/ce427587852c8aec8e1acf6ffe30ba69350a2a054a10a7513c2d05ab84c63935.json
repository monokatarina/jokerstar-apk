{"ast":null,"code":"import React,{useState,useEffect}from'react';import api from'../services/api';import MemeCard from'../components/MemeCard';import{jsx as _jsx}from\"react/jsx-runtime\";const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchMemes=async()=>{try{const response=await api.get('/memes/hot');setMemes(response.data);}catch(error){console.error('Erro ao carregar memes:',error);}finally{setLoading(false);}};fetchMemes();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Carregando...\"});return/*#__PURE__*/_jsx(\"div\",{className:\"feed-container\",children:memes.map(meme=>/*#__PURE__*/_jsx(MemeCard,{meme:meme},meme._id))});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","api","MemeCard","jsx","_jsx","FeedPage","memes","setMemes","loading","setLoading","fetchMemes","response","get","data","error","console","children","className","map","meme","_id"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport MemeCard from '../components/MemeCard';\r\n\r\nconst FeedPage = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMemes = async () => {\r\n      try {\r\n        const response = await api.get('/memes/hot');\r\n        setMemes(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar memes:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMemes();\r\n  }, []);\r\n\r\n  if (loading) return <div>Carregando...</div>;\r\n\r\n  return (\r\n    <div className=\"feed-container\">\r\n      {memes.map(meme => (\r\n        <MemeCard key={meme._id} meme={meme} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACS,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACW,GAAG,CAAC,YAAY,CAAC,CAC5CL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,OAAS,CACRL,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,mBAAOJ,IAAA,QAAAY,QAAA,CAAK,eAAa,CAAK,CAAC,CAE5C,mBACEZ,IAAA,QAAKa,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAC5BV,KAAK,CAACY,GAAG,CAACC,IAAI,eACbf,IAAA,CAACF,QAAQ,EAAgBiB,IAAI,CAAEA,IAAK,EAArBA,IAAI,CAACC,GAAkB,CACvC,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}