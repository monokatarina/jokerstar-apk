{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\client2\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport { checkAuth, logout as apiLogout } from '../services/auth';\nimport api from '../services/api';\nimport { initSocket, disconnectSocket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [initialCheckDone, setInitialCheckDone] = useState(false);\n\n  /**\n   * Solicita permissão para notificações do navegador\n   * @returns {Promise<boolean>} Retorna true se a permissão foi concedida\n   */\n  const requestNotificationPermission = useCallback(async () => {\n    try {\n      if (!('Notification' in window)) {\n        console.warn('Este navegador não suporta notificações desktop');\n        return false;\n      }\n      if (Notification.permission === 'granted') {\n        return true;\n      }\n      if (Notification.permission !== 'denied') {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          console.log('Permissão para notificações concedida');\n          return true;\n        }\n      }\n      console.log('Permissão para notificações não concedida');\n      return false;\n    } catch (error) {\n      console.error('Erro ao solicitar permissão de notificações:', error);\n      return false;\n    }\n  }, []);\n\n  /**\n   * Verifica a autenticação do usuário\n   */\n  const verifyAuth = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      setInitialCheckDone(true);\n      return;\n    }\n    try {\n      var _response$user, _response$user$settin;\n      setLoading(true);\n      const response = await checkAuth();\n      setUser((response === null || response === void 0 ? void 0 : response.user) || null);\n\n      // Solicita permissão para notificações após verificar autenticação\n      if ((response === null || response === void 0 ? void 0 : (_response$user = response.user) === null || _response$user === void 0 ? void 0 : (_response$user$settin = _response$user.settings) === null || _response$user$settin === void 0 ? void 0 : _response$user$settin.notificationsEnabled) !== false) {\n        await requestNotificationPermission();\n      }\n    } catch (error) {\n      console.error('Falha na verificação de autenticação:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n      setInitialCheckDone(true);\n    }\n  }, [requestNotificationPermission]);\n\n  /**\n   * Realiza o login do usuário\n   */\n  const login = useCallback(async credentials => {\n    try {\n      var _response$user2, _response$user2$setti;\n      setLoading(true);\n      const response = await apiLogin(credentials);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n\n      // Solicita permissão para notificações se o usuário permitiu\n      if (((_response$user2 = response.user) === null || _response$user2 === void 0 ? void 0 : (_response$user2$setti = _response$user2.settings) === null || _response$user2$setti === void 0 ? void 0 : _response$user2$setti.notificationsEnabled) !== false) {\n        await requestNotificationPermission();\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [requestNotificationPermission]);\n\n  /**\n   * Realiza o logout do usuário\n   */\n  const logout = useCallback(async () => {\n    try {\n      await apiLogout();\n      localStorage.removeItem('token');\n      setUser(null);\n      disconnectSocket(); // Desconecta o socket ao fazer logout\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }, []);\n  /**\n   * Atualiza os dados do usuário\n   */\n  const updateUser = useCallback(async (updates, shouldRevalidate = true) => {\n    try {\n      // Atualização otimista\n      setUser(prev => ({\n        ...prev,\n        ...updates\n      }));\n      if (shouldRevalidate) {\n        await verifyAuth();\n      }\n    } catch (error) {\n      console.error('Falha ao atualizar usuário:', error);\n      throw error;\n    }\n  }, [verifyAuth]);\n\n  /**\n   * Atualiza o avatar do usuário\n   */\n  const updateAvatar = useCallback(async avatarFile => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', avatarFile);\n      const {\n        data\n      } = await api.put('/users/profile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      await updateUser(data);\n      return data;\n    } catch (error) {\n      console.error('Falha ao atualizar avatar:', error);\n      throw error;\n    }\n  }, [updateUser]);\n\n  /**\n   * Atualiza as preferências de notificação\n   */\n  const updateNotificationPreferences = useCallback(async enabled => {\n    try {\n      await api.patch('/users/settings', {\n        notificationsEnabled: enabled\n      });\n      await updateUser({\n        settings: {\n          ...user.settings,\n          notificationsEnabled: enabled\n        }\n      }, false);\n      if (enabled) {\n        await requestNotificationPermission();\n      }\n      return true;\n    } catch (error) {\n      console.error('Falha ao atualizar preferências:', error);\n      throw error;\n    }\n  }, [user, updateUser, requestNotificationPermission]);\n\n  // Verifica autenticação na inicialização\n  useEffect(() => {\n    verifyAuth();\n  }, [verifyAuth]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      initialCheckDone,\n      verifyAuth,\n      login,\n      logout,\n      updateUser,\n      updateAvatar,\n      updateNotificationPreferences,\n      requestNotificationPermission\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"1N2pduvcNUbf2Tc1fdLuR/uG0Rw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","checkAuth","logout","apiLogout","api","initSocket","disconnectSocket","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","initialCheckDone","setInitialCheckDone","requestNotificationPermission","window","console","warn","Notification","permission","requestPermission","log","error","verifyAuth","token","localStorage","getItem","_response$user","_response$user$settin","response","settings","notificationsEnabled","removeItem","login","credentials","_response$user2","_response$user2$setti","apiLogin","setItem","updateUser","updates","shouldRevalidate","prev","updateAvatar","avatarFile","formData","FormData","append","data","put","headers","updateNotificationPreferences","enabled","patch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport { checkAuth, logout as apiLogout } from '../services/auth';\nimport api from '../services/api';\nimport { initSocket, disconnectSocket } from '../services/socket';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [initialCheckDone, setInitialCheckDone] = useState(false);\n\n  /**\n   * Solicita permissão para notificações do navegador\n   * @returns {Promise<boolean>} Retorna true se a permissão foi concedida\n   */\n  const requestNotificationPermission = useCallback(async () => {\n    try {\n      if (!('Notification' in window)) {\n        console.warn('Este navegador não suporta notificações desktop');\n        return false;\n      }\n\n      if (Notification.permission === 'granted') {\n        return true;\n      }\n\n      if (Notification.permission !== 'denied') {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          console.log('Permissão para notificações concedida');\n          return true;\n        }\n      }\n\n      console.log('Permissão para notificações não concedida');\n      return false;\n    } catch (error) {\n      console.error('Erro ao solicitar permissão de notificações:', error);\n      return false;\n    }\n  }, []);\n\n  /**\n   * Verifica a autenticação do usuário\n   */\n  const verifyAuth = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      setInitialCheckDone(true);\n      return;\n    }\n  \n    try {\n      setLoading(true);\n      const response = await checkAuth();\n      setUser(response?.user || null);\n      \n      // Solicita permissão para notificações após verificar autenticação\n      if (response?.user?.settings?.notificationsEnabled !== false) {\n        await requestNotificationPermission();\n      }\n    } catch (error) {\n      console.error('Falha na verificação de autenticação:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n      setInitialCheckDone(true);\n    }\n  }, [requestNotificationPermission]);\n\n  /**\n   * Realiza o login do usuário\n   */\n  const login = useCallback(async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await apiLogin(credentials);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n      \n      // Solicita permissão para notificações se o usuário permitiu\n      if (response.user?.settings?.notificationsEnabled !== false) {\n        await requestNotificationPermission();\n      }\n      \n      return response;\n    } catch (error) {\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  }, [requestNotificationPermission]);\n\n  /**\n   * Realiza o logout do usuário\n   */\n  const logout = useCallback(async () => {\n    try {\n      await apiLogout();\n      localStorage.removeItem('token');\n      setUser(null);\n      disconnectSocket(); // Desconecta o socket ao fazer logout\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }, []);\n  /**\n   * Atualiza os dados do usuário\n   */\n  const updateUser = useCallback(async (updates, shouldRevalidate = true) => {\n    try {\n      // Atualização otimista\n      setUser(prev => ({ ...prev, ...updates }));\n      \n      if (shouldRevalidate) {\n        await verifyAuth();\n      }\n    } catch (error) {\n      console.error('Falha ao atualizar usuário:', error);\n      throw error;\n    }\n  }, [verifyAuth]);\n\n  /**\n   * Atualiza o avatar do usuário\n   */\n  const updateAvatar = useCallback(async (avatarFile) => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', avatarFile);\n      \n      const { data } = await api.put('/users/profile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      await updateUser(data);\n      return data;\n    } catch (error) {\n      console.error('Falha ao atualizar avatar:', error);\n      throw error;\n    }\n  }, [updateUser]);\n\n  /**\n   * Atualiza as preferências de notificação\n   */\n  const updateNotificationPreferences = useCallback(async (enabled) => {\n    try {\n      await api.patch('/users/settings', { notificationsEnabled: enabled });\n      await updateUser({ settings: { ...user.settings, notificationsEnabled: enabled } }, false);\n      \n      if (enabled) {\n        await requestNotificationPermission();\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Falha ao atualizar preferências:', error);\n      throw error;\n    }\n  }, [user, updateUser, requestNotificationPermission]);\n\n  // Verifica autenticação na inicialização\n  useEffect(() => {\n    verifyAuth();\n  }, [verifyAuth]);\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      loading,\n      initialCheckDone,\n      verifyAuth,\n      login,\n      logout,\n      updateUser,\n      updateAvatar,\n      updateNotificationPreferences,\n      requestNotificationPermission\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}