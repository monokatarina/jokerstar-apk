{"ast":null,"code":"// services/socket.js\nimport io from'socket.io-client';let socket;const API_URL=process.env.REACT_APP_API_URL||'https://api.jokesteronline.org';export const initSocket=()=>{const token=localStorage.getItem('token');if(!socket&&token){socket=io(API_URL,{auth:{token},transports:['websocket'],reconnectionAttempts:5,reconnectionDelay:1000});socket.on('connect',()=>{console.log('Connected to WebSocket');socket.emit('authenticate',token);});socket.on('disconnect',()=>{console.log('Disconnected from WebSocket');});socket.on('connect_error',err=>{console.error('Socket connection error:',err);});}};export const getSocket=()=>socket;export const listenForNotifications=callback=>{if(socket){socket.on('new-notification',callback);}};export const disconnectSocket=()=>{if(socket){socket.disconnect();socket=null;}};","map":{"version":3,"names":["io","socket","API_URL","process","env","REACT_APP_API_URL","initSocket","token","localStorage","getItem","auth","transports","reconnectionAttempts","reconnectionDelay","on","console","log","emit","err","error","getSocket","listenForNotifications","callback","disconnectSocket","disconnect"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/services/socket.js"],"sourcesContent":["// services/socket.js\r\nimport io from 'socket.io-client';\r\n\r\nlet socket;\r\nconst API_URL = process.env.REACT_APP_API_URL || 'https://api.jokesteronline.org';\r\n\r\nexport const initSocket = () => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (!socket && token) {\r\n    socket = io(API_URL, {\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket');\r\n      socket.emit('authenticate', token);\r\n    });\r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('Disconnected from WebSocket');\r\n    });\r\n\r\n    socket.on('connect_error', (err) => {\r\n      console.error('Socket connection error:', err);\r\n    });\r\n  }\r\n};\r\n\r\nexport const getSocket = () => socket;\r\n\r\nexport const listenForNotifications = (callback) => {\r\n  if (socket) {\r\n    socket.on('new-notification', callback);\r\n  }\r\n};\r\n\r\nexport const disconnectSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n    socket = null;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,EAAE,KAAM,kBAAkB,CAEjC,GAAI,CAAAC,MAAM,CACV,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,gCAAgC,CAEjF,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CAACR,MAAM,EAAIM,KAAK,CAAE,CACpBN,MAAM,CAAGD,EAAE,CAACE,OAAO,CAAE,CACnBQ,IAAI,CAAE,CAAEH,KAAM,CAAC,CACfI,UAAU,CAAE,CAAC,WAAW,CAAC,CACzBC,oBAAoB,CAAE,CAAC,CACvBC,iBAAiB,CAAE,IACrB,CAAC,CAAC,CAEFZ,MAAM,CAACa,EAAE,CAAC,SAAS,CAAE,IAAM,CACzBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACrCf,MAAM,CAACgB,IAAI,CAAC,cAAc,CAAEV,KAAK,CAAC,CACpC,CAAC,CAAC,CAEFN,MAAM,CAACa,EAAE,CAAC,YAAY,CAAE,IAAM,CAC5BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC5C,CAAC,CAAC,CAEFf,MAAM,CAACa,EAAE,CAAC,eAAe,CAAGI,GAAG,EAAK,CAClCH,OAAO,CAACI,KAAK,CAAC,0BAA0B,CAAED,GAAG,CAAC,CAChD,CAAC,CAAC,CACJ,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,SAAS,CAAGA,CAAA,GAAMnB,MAAM,CAErC,MAAO,MAAM,CAAAoB,sBAAsB,CAAIC,QAAQ,EAAK,CAClD,GAAIrB,MAAM,CAAE,CACVA,MAAM,CAACa,EAAE,CAAC,kBAAkB,CAAEQ,QAAQ,CAAC,CACzC,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CACpC,GAAItB,MAAM,CAAE,CACVA,MAAM,CAACuB,UAAU,CAAC,CAAC,CACnBvB,MAAM,CAAG,IAAI,CACf,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}