{"ast":null,"code":"// src/services/auth.js\nimport axios from 'axios';\nimport api from './api';\nconst API_URL = '/auth'; // Já estamos usando api.js que tem a baseUrl\n\n// Função para registro de usuário\nexport const register = async userData => {\n  try {\n    const {\n      data\n    } = await api.post(`${API_URL}/register`, userData);\n    return data;\n  } catch (error) {\n    console.error('[register] Erro:', error);\n    if (error.response && error.response.status === 409) {\n      const {\n        message,\n        conflicts\n      } = error.response.data;\n      throw {\n        type: 'CONFLICT',\n        message,\n        conflicts\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: 'Erro ao registrar usuário'\n    };\n  }\n};\n\n// Função para login de usuário\nexport const login = async credentials => {\n  try {\n    const {\n      data\n    } = await api.post(`${API_URL}/login`, credentials);\n    return data;\n  } catch (error) {\n    console.error('[login] Erro:', error);\n    if (error.response && error.response.status === 401) {\n      throw {\n        type: 'AUTH_ERROR',\n        message: 'Credenciais inválidas'\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: 'Erro ao fazer login'\n    };\n  }\n};\n\n// Função para verificar autenticação\nexport const checkAuth = async () => {\n  try {\n    const {\n      data\n    } = await api.get(`${API_URL}/check`);\n    return data;\n  } catch (error) {\n    console.error('[checkAuth] Erro:', error);\n    if (error.response && error.response.status === 401) {\n      throw {\n        type: 'AUTH_ERROR',\n        message: 'Sessão expirada'\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: 'Erro ao verificar autenticação'\n    };\n  }\n};\n\n// Função para logout de usuário\nexport const logout = async () => {\n  try {\n    localStorage.removeItem('token');\n    // Se no futuro quiser enviar algo para /auth/logout no backend, é aqui\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('[logout] Erro:', error);\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: 'Erro ao fazer logout'\n    };\n  }\n};","map":{"version":3,"names":["axios","api","API_URL","register","userData","data","post","error","console","response","status","message","conflicts","type","login","credentials","checkAuth","get","logout","localStorage","removeItem","success"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/services/auth.js"],"sourcesContent":["// src/services/auth.js\r\nimport axios from 'axios';\r\nimport api from './api';\r\n\r\nconst API_URL = '/auth'; // Já estamos usando api.js que tem a baseUrl\r\n\r\n// Função para registro de usuário\r\nexport const register = async (userData) => {\r\n  try {\r\n    const { data } = await api.post(`${API_URL}/register`, userData);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[register] Erro:', error);\r\n    if (error.response && error.response.status === 409) {\r\n      const { message, conflicts } = error.response.data;\r\n      throw { type: 'CONFLICT', message, conflicts };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao registrar usuário' };\r\n  }\r\n};\r\n\r\n// Função para login de usuário\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const { data } = await api.post(`${API_URL}/login`, credentials);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[login] Erro:', error);\r\n    if (error.response && error.response.status === 401) {\r\n      throw { type: 'AUTH_ERROR', message: 'Credenciais inválidas' };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao fazer login' };\r\n  }\r\n};\r\n\r\n// Função para verificar autenticação\r\nexport const checkAuth = async () => {\r\n  try {\r\n    const { data } = await api.get(`${API_URL}/check`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[checkAuth] Erro:', error);\r\n    if (error.response && error.response.status === 401) {\r\n      throw { type: 'AUTH_ERROR', message: 'Sessão expirada' };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao verificar autenticação' };\r\n  }\r\n};\r\n\r\n// Função para logout de usuário\r\nexport const logout = async () => {\r\n  try {\r\n    localStorage.removeItem('token');\r\n    // Se no futuro quiser enviar algo para /auth/logout no backend, é aqui\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('[logout] Erro:', error);\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao fazer logout' };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAEvB,MAAMC,OAAO,GAAG,OAAO,CAAC,CAAC;;AAEzB;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,GAAGJ,OAAO,WAAW,EAAEE,QAAQ,CAAC;IAChE,OAAOC,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,IAAIA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACnD,MAAM;QAAEC,OAAO;QAAEC;MAAU,CAAC,GAAGL,KAAK,CAACE,QAAQ,CAACJ,IAAI;MAClD,MAAM;QAAEQ,IAAI,EAAE,UAAU;QAAEF,OAAO;QAAEC;MAAU,CAAC;IAChD;IACA,MAAM;MAAEC,IAAI,EAAE,eAAe;MAAEF,OAAO,EAAE;IAA4B,CAAC;EACvE;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAM;MAAEV;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAEa,WAAW,CAAC;IAChE,OAAOV,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,IAAIA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACnD,MAAM;QAAEG,IAAI,EAAE,YAAY;QAAEF,OAAO,EAAE;MAAwB,CAAC;IAChE;IACA,MAAM;MAAEE,IAAI,EAAE,eAAe;MAAEF,OAAO,EAAE;IAAsB,CAAC;EACjE;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAM;MAAEX;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,GAAGf,OAAO,QAAQ,CAAC;IAClD,OAAOG,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,IAAIA,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACnD,MAAM;QAAEG,IAAI,EAAE,YAAY;QAAEF,OAAO,EAAE;MAAkB,CAAC;IAC1D;IACA,MAAM;MAAEE,IAAI,EAAE,eAAe;MAAEF,OAAO,EAAE;IAAiC,CAAC;EAC5E;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACFC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC;IACA,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAM;MAAEM,IAAI,EAAE,eAAe;MAAEF,OAAO,EAAE;IAAuB,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}