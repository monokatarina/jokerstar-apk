{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\pages\\\\UploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport MemeUpload from '../components/MemeUpload';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPageContainer = styled.div`\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: var(--card-bg);\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow);\n`;\n_c = UploadPageContainer;\nconst Title = styled.h2`\n  color: var(--text);\n  margin-bottom: 1.5rem;\n`;\n_c2 = Title;\nconst LoadingMessage = styled.div`\n  color: var(--text-light);\n  text-align: center;\n  padding: 1rem;\n`;\n_c3 = LoadingMessage;\nconst SuccessMessage = styled.div`\n  color: var(--success);\n  text-align: center;\n  padding: 1rem;\n  background: rgba(16, 185, 129, 0.1);\n  border-radius: var(--radius-sm);\n  margin: 1rem 0;\n`;\n_c4 = SuccessMessage;\nconst UploadPage = () => {\n  _s();\n  const {\n    user,\n    loading,\n    initialCheckDone\n  } = useAuth();\n  const {\n    theme\n  } = useTheme();\n  const navigate = useNavigate();\n  const [uploadComplete, setUploadComplete] = React.useState(false);\n  React.useEffect(() => {\n    if (initialCheckDone && !user && !loading) {\n      navigate('/login', {\n        state: {\n          from: '/upload'\n        }\n      });\n    }\n  }, [user, loading, initialCheckDone, navigate]);\n  const handleUploadSuccess = () => {\n    setUploadComplete(true);\n    setTimeout(() => navigate('/feed'), 2000);\n  };\n  if (loading || !initialCheckDone) {\n    return /*#__PURE__*/_jsxDEV(UploadPageContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingMessage, {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(UploadPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Criar Nova Postagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), uploadComplete ? /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      children: \"Postagem criada com sucesso! Redirecionando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MemeUpload, {\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"h9tMt3dbCYoViJCPjIQcyw+D1EE=\", false, function () {\n  return [useAuth, useTheme, useNavigate];\n});\n_c5 = UploadPage;\nexport default UploadPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"UploadPageContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"LoadingMessage\");\n$RefreshReg$(_c4, \"SuccessMessage\");\n$RefreshReg$(_c5, \"UploadPage\");","map":{"version":3,"names":["React","styled","MemeUpload","useNavigate","useAuth","useTheme","jsxDEV","_jsxDEV","UploadPageContainer","div","_c","Title","h2","_c2","LoadingMessage","_c3","SuccessMessage","_c4","UploadPage","_s","user","loading","initialCheckDone","theme","navigate","uploadComplete","setUploadComplete","useState","useEffect","state","from","handleUploadSuccess","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","_c5","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/pages/UploadPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MemeUpload from '../components/MemeUpload';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\n\r\nconst UploadPageContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background: var(--card-bg);\r\n  border-radius: var(--radius-lg);\r\n  box-shadow: var(--shadow);\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: var(--text);\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst LoadingMessage = styled.div`\r\n  color: var(--text-light);\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst SuccessMessage = styled.div`\r\n  color: var(--success);\r\n  text-align: center;\r\n  padding: 1rem;\r\n  background: rgba(16, 185, 129, 0.1);\r\n  border-radius: var(--radius-sm);\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst UploadPage = () => {\r\n  const { user, loading, initialCheckDone } = useAuth();\r\n  const { theme } = useTheme();\r\n  const navigate = useNavigate();\r\n  const [uploadComplete, setUploadComplete] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (initialCheckDone && !user && !loading) {\r\n      navigate('/login', { state: { from: '/upload' } });\r\n    }\r\n  }, [user, loading, initialCheckDone, navigate]);\r\n\r\n  const handleUploadSuccess = () => {\r\n    setUploadComplete(true);\r\n    setTimeout(() => navigate('/feed'), 2000);\r\n  };\r\n\r\n  if (loading || !initialCheckDone) {\r\n    return (\r\n      <UploadPageContainer>\r\n        <LoadingMessage>Carregando...</LoadingMessage>\r\n      </UploadPageContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UploadPageContainer>\r\n      <Title>Criar Nova Postagem</Title>\r\n      {uploadComplete ? (\r\n        <SuccessMessage>\r\n          Postagem criada com sucesso! Redirecionando...\r\n        </SuccessMessage>\r\n      ) : (\r\n        <MemeUpload onSuccess={handleUploadSuccess} />\r\n      )}\r\n    </UploadPageContainer>\r\n  );\r\n};\r\n\r\nexport default UploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}