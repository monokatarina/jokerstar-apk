{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiMessageSquare, FiShare2, FiHeart } from 'react-icons/fi';\nimport { FaHeart } from 'react-icons/fa';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport CommentSection from './CommentSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  overflow: hidden;\n`;\n_c = Card;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n`;\n_c2 = Header;\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 12px;\n  object-fit: cover;\n`;\n_c3 = Avatar;\nconst Username = styled.span`\n  font-weight: 600;\n  &:hover {\n    text-decoration: underline;\n    color: #ff4500;\n  }\n`;\n_c4 = Username;\nconst MediaContainer = styled.div`\n  width: 100%;\n  min-height: 300px;\n  background: #f5f5f5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  img, video {\n    max-width: 100%;\n    max-height: 500px;\n    display: block;\n    object-fit: contain;\n  }\n`;\n_c5 = MediaContainer;\nconst Caption = styled.p`\n  padding: 12px 16px;\n  margin: 0;\n`;\n_c6 = Caption;\nconst Tags = styled.div`\n  padding: 0 16px 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n_c7 = Tags;\nconst Tag = styled.span`\n  color: #ff4500;\n  font-size: 0.9rem;\n`;\n_c8 = Tag;\nconst Actions = styled.div`\n  display: flex;\n  padding: 8px 16px;\n  border-top: 1px solid #f0f0f0;\n`;\n_c9 = Actions;\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.9rem;\n  \n  svg {\n    margin-right: 6px;\n    font-size: 1.2rem;\n  }\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n_c10 = ActionButton;\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst MemeCard = ({\n  meme\n}) => {\n  _s();\n  var _meme$likes, _meme$comments, _meme$comments2, _user$profile, _meme$tags;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [isLiked, setIsLiked] = useState(false);\n  const [likeCount, setLikeCount] = useState(((_meme$likes = meme.likes) === null || _meme$likes === void 0 ? void 0 : _meme$likes.length) || 0);\n  const [showComments, setShowComments] = useState(false);\n  const [commentCount, setCommentCount] = useState((((_meme$comments = meme.comments) === null || _meme$comments === void 0 ? void 0 : _meme$comments.length) || 0) + (((_meme$comments2 = meme.comments) === null || _meme$comments2 === void 0 ? void 0 : _meme$comments2.reduce((acc, c) => {\n    var _c$replies;\n    return acc + (((_c$replies = c.replies) === null || _c$replies === void 0 ? void 0 : _c$replies.length) || 0);\n  }, 0)) || 0));\n  useEffect(() => {\n    var _meme$likes2;\n    if (user && meme.likes) {\n      setIsLiked(meme.likes.includes(user._id));\n    }\n    setLikeCount(((_meme$likes2 = meme.likes) === null || _meme$likes2 === void 0 ? void 0 : _meme$likes2.length) || 0);\n    setCommentCount(meme.commentCount || 0);\n  }, [meme, user]);\n  const handleLike = async () => {\n    if (!user) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/like`);\n      setIsLiked(response.data.isLiked);\n      setLikeCount(response.data.likeCount);\n    } catch (error) {\n      console.error('Erro ao curtir:', error);\n    }\n  };\n  const handleCommentSubmit = async text => {\n    try {\n      const response = await api.post(`/memes/${meme._id}/comments`, {\n        text\n      });\n\n      // Atualiza a contagem de comentários buscando novamente\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\n      const comments = await api.get(`/memes/${meme._id}/comments`);\n\n      // Calcula o total de comentários + respostas\n      const countReplies = commentsArray => {\n        return commentsArray.reduce((total, comment) => {\n          return total + 1 + (comment.replies ? countReplies(comment.replies) : 0);\n        }, 0);\n      };\n      setCommentCount(countReplies(comments.data));\n      setShowComments(true);\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao comentar:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: (_user$profile = user.profile) !== null && _user$profile !== void 0 && _user$profile.avatar ? user.profile.avatar.startsWith('http') ? user.profile.avatar : `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${user.profile.avatar}` : 'https://i.pravatar.cc/150?img=3',\n        alt: user.username,\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://i.pravatar.cc/150?img=3';\n          e.target.onerror = null; // Previne loop de erro\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Username, {\n        onClick: () => navigate(`/users/${meme.author._id}`),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"@\", meme.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaContainer, {\n      children: meme.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.mediaUrl.startsWith('http') ? meme.mediaUrl : `${API_BASE_URL}${meme.mediaUrl}`,\n        alt: meme.caption || 'Meme image',\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: meme.mediaUrl.startsWith('http') ? meme.mediaUrl : `${API_BASE_URL}${meme.mediaUrl}`,\n        controls: true,\n        crossOrigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), meme.caption && /*#__PURE__*/_jsxDEV(Caption, {\n      children: meme.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 24\n    }, this), ((_meme$tags = meme.tags) === null || _meme$tags === void 0 ? void 0 : _meme$tags.length) > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n      children: meme.tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"#\", tag]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleLike,\n        $active: isLiked,\n        children: [isLiked ? /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 36\n        }, this), \" \", likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => setShowComments(!showComments),\n        $active: showComments,\n        children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), \" \", commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [/*#__PURE__*/_jsxDEV(FiShare2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), \" Compartilhar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentSection, {\n      memeId: meme._id,\n      onCommentSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeCard, \"zvcleg9/Q4okvOZR1Id+tchGO7g=\", true, function () {\n  return [useAuth];\n});\n_c11 = MemeCard;\nexport default MemeCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Username\");\n$RefreshReg$(_c5, \"MediaContainer\");\n$RefreshReg$(_c6, \"Caption\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"Tag\");\n$RefreshReg$(_c9, \"Actions\");\n$RefreshReg$(_c10, \"ActionButton\");\n$RefreshReg$(_c11, \"MemeCard\");","map":{"version":3,"names":["React","useState","useEffect","styled","FiMessageSquare","FiShare2","FiHeart","FaHeart","api","useAuth","CommentSection","jsxDEV","_jsxDEV","Card","div","_c","Header","_c2","Avatar","img","_c3","Username","span","_c4","MediaContainer","_c5","Caption","p","_c6","Tags","_c7","Tag","_c8","Actions","_c9","ActionButton","button","props","$active","_c10","API_BASE_URL","process","env","REACT_APP_API_URL","MemeCard","meme","_s","_meme$likes","_meme$comments","_meme$comments2","_user$profile","_meme$tags","navigate","useNavigate","user","isLiked","setIsLiked","likeCount","setLikeCount","likes","length","showComments","setShowComments","commentCount","setCommentCount","comments","reduce","acc","c","_c$replies","replies","_meme$likes2","includes","_id","handleLike","response","post","data","error","console","handleCommentSubmit","text","updatedMeme","get","countReplies","commentsArray","total","comment","children","src","profile","avatar","startsWith","alt","username","crossOrigin","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","onClick","author","style","cursor","mediaType","mediaUrl","caption","controls","tags","map","tag","memeId","onCommentSubmit","_c11","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FiMessageSquare, FiShare2, FiHeart } from 'react-icons/fi';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport CommentSection from './CommentSection';\r\n\r\n\r\nconst Card = styled.div`\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 12px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-weight: 600;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst MediaContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  background: #f5f5f5;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  img, video {\r\n    max-width: 100%;\r\n    max-height: 500px;\r\n    display: block;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst Caption = styled.p`\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  padding: 0 16px 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  color: #ff4500;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  padding: 8px 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  \r\n  svg {\r\n    margin-right: 6px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\nconst MemeCard = ({ meme }) => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [likeCount, setLikeCount] = useState(meme.likes?.length || 0);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(\r\n    (meme.comments?.length || 0) + \r\n    (meme.comments?.reduce((acc, c) => acc + (c.replies?.length || 0), 0) || 0)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user && meme.likes) {\r\n      setIsLiked(meme.likes.includes(user._id));\r\n    }\r\n    setLikeCount(meme.likes?.length || 0);\r\n    setCommentCount(meme.commentCount || 0);\r\n  }, [meme, user]);\r\n\r\n  const handleLike = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/like`);\r\n      setIsLiked(response.data.isLiked);\r\n      setLikeCount(response.data.likeCount);\r\n    } catch (error) {\r\n      console.error('Erro ao curtir:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCommentSubmit = async (text) => {\r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/comments`, { text });\r\n      \r\n      // Atualiza a contagem de comentários buscando novamente\r\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\r\n      const comments = await api.get(`/memes/${meme._id}/comments`);\r\n      \r\n      // Calcula o total de comentários + respostas\r\n      const countReplies = (commentsArray) => {\r\n        return commentsArray.reduce((total, comment) => {\r\n          return total + 1 + (comment.replies ? countReplies(comment.replies) : 0);\r\n        }, 0);\r\n      };\r\n      \r\n      setCommentCount(countReplies(comments.data));\r\n      setShowComments(true);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erro ao comentar:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  return (\r\n    <Card>\r\n      <Header>\r\n        <Avatar \r\n          src={\r\n              user.profile?.avatar\r\n                ? user.profile.avatar.startsWith('http')\r\n                  ? user.profile.avatar\r\n                  : `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${user.profile.avatar}`\r\n                : 'https://i.pravatar.cc/150?img=3'\r\n            }\r\n            alt={user.username}\r\n            crossOrigin=\"anonymous\"\r\n            onError={(e) => {\r\n              e.target.src = 'https://i.pravatar.cc/150?img=3';\r\n              e.target.onerror = null; // Previne loop de erro\r\n            }}\r\n          />\r\n        <Username \r\n          onClick={() => navigate(`/users/${meme.author._id}`)}\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          @{meme.author.username}\r\n        </Username>\r\n      </Header>\r\n      \r\n      <MediaContainer>\r\n        {meme.mediaType === 'image' ? (\r\n          <img \r\n            src={meme.mediaUrl.startsWith('http') ? meme.mediaUrl : `${API_BASE_URL}${meme.mediaUrl}`}\r\n            alt={meme.caption || 'Meme image'}\r\n            crossOrigin=\"anonymous\"\r\n            onError={(e) => {\r\n              e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n              e.target.onerror = null;\r\n            }}\r\n          />\r\n        ) : (\r\n          <video \r\n            src={meme.mediaUrl.startsWith('http') ? meme.mediaUrl : `${API_BASE_URL}${meme.mediaUrl}`} \r\n            controls \r\n            crossOrigin=\"anonymous\"\r\n          />\r\n        )}\r\n      </MediaContainer>\r\n\r\n      {meme.caption && <Caption>{meme.caption}</Caption>}\r\n      \r\n      {meme.tags?.length > 0 && (\r\n        <Tags>\r\n          {meme.tags.map(tag => (\r\n            <Tag key={tag}>#{tag}</Tag>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n\r\n      <Actions>\r\n        <ActionButton \r\n          onClick={handleLike} \r\n          $active={isLiked}\r\n        >\r\n          {isLiked ? <FaHeart /> : <FiHeart />} {likeCount}\r\n        </ActionButton>\r\n        <ActionButton \r\n          onClick={() => setShowComments(!showComments)}\r\n          $active={showComments}\r\n        >\r\n          <FiMessageSquare /> {commentCount}\r\n        </ActionButton>\r\n        <ActionButton>\r\n          <FiShare2 /> Compartilhar\r\n        </ActionButton>\r\n      </Actions>\r\n\r\n      {showComments && (\r\n        <CommentSection \r\n          memeId={meme._id}\r\n          onCommentSubmit={handleCommentSubmit}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemeCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}