{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0px 4px 12px rgba(0,0,0,0.1);\n`;\n_c = Form;\nconst Input = styled.input`\n  padding: 0.75rem;\n  font-size: 1rem;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n`;\n_c2 = Input;\nconst TextArea = styled.textarea`\n  padding: 0.75rem;\n  font-size: 1rem;\n  border-radius: 8px;\n  border: 1px solid #ddd;\n  resize: vertical;\n`;\n_c3 = TextArea;\nconst Button = styled.button`\n  padding: 0.75rem;\n  background-color: #ff4500;\n  color: white;\n  font-size: 1.1rem;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background 0.3s;\n  \n  &:hover {\n    background-color: #e03d00;\n  }\n`;\n_c4 = Button;\nconst Preview = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n\n  img, video {\n    max-width: 100%;\n    max-height: 400px;\n    border-radius: 8px;\n  }\n`;\n_c5 = Preview;\nconst MemeUpload = ({\n  onSuccess\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [file, setFile] = useState(null);\n  const [caption, setCaption] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [preview, setPreview] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setPreview(URL.createObjectURL(selectedFile));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Selecione um arquivo para enviar.');\n      return;\n    }\n    if (!user) {\n      alert('Você precisa estar logado para enviar um meme.');\n      return;\n    }\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('media', file);\n    formData.append('caption', caption);\n    try {\n      const response = await api.post('/memes', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('[DEBUG] Upload sucesso:', response.data);\n      alert('Meme enviado com sucesso!');\n      setFile(null);\n      setCaption('');\n      setPreview(null);\n      fileInputRef.current.value = '';\n      if (onSuccess) {\n        onSuccess(); // Chama callback do UploadPage\n      }\n    } catch (error) {\n      console.error('[DEBUG] Erro no upload:', error);\n      alert('Erro ao enviar o meme. Tente novamente.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      accept: \"image/*,video/*\",\n      onChange: handleFileChange,\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      rows: \"3\",\n      placeholder: \"Escreva uma legenda (opcional)...\",\n      value: caption,\n      onChange: e => setCaption(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), preview && /*#__PURE__*/_jsxDEV(Preview, {\n      children: file.type.startsWith('image/') ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: preview,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: isUploading,\n      children: isUploading ? 'Enviando...' : 'Enviar Meme'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeUpload, \"a87WpBc3rEZ3ilc+WtniQp/Xte4=\", false, function () {\n  return [useAuth];\n});\n_c6 = MemeUpload;\nexport default MemeUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"TextArea\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"Preview\");\n$RefreshReg$(_c6, \"MemeUpload\");","map":{"version":3,"names":["React","useState","useRef","styled","api","useAuth","jsxDEV","_jsxDEV","Form","form","_c","Input","input","_c2","TextArea","textarea","_c3","Button","button","_c4","Preview","div","_c5","MemeUpload","onSuccess","_s","user","file","setFile","caption","setCaption","isUploading","setIsUploading","preview","setPreview","fileInputRef","handleFileChange","e","selectedFile","target","files","URL","createObjectURL","handleSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","console","log","data","current","value","error","onSubmit","children","type","accept","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","startsWith","src","alt","controls","disabled","_c6","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeUpload.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0px 4px 12px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  resize: vertical;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.75rem;\r\n  background-color: #ff4500;\r\n  color: white;\r\n  font-size: 1.1rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n  \r\n  &:hover {\r\n    background-color: #e03d00;\r\n  }\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1rem;\r\n\r\n  img, video {\r\n    max-width: 100%;\r\n    max-height: 400px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst MemeUpload = ({ onSuccess }) => {\r\n  const { user } = useAuth();\r\n  const [file, setFile] = useState(null);\r\n  const [caption, setCaption] = useState('');\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [preview, setPreview] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      setPreview(URL.createObjectURL(selectedFile));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      alert('Selecione um arquivo para enviar.');\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      alert('Você precisa estar logado para enviar um meme.');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('media', file);\r\n    formData.append('caption', caption);\r\n\r\n    try {\r\n      const response = await api.post('/memes', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      console.log('[DEBUG] Upload sucesso:', response.data);\r\n      alert('Meme enviado com sucesso!');\r\n      setFile(null);\r\n      setCaption('');\r\n      setPreview(null);\r\n      fileInputRef.current.value = '';\r\n\r\n      if (onSuccess) {\r\n        onSuccess(); // Chama callback do UploadPage\r\n      }\r\n    } catch (error) {\r\n      console.error('[DEBUG] Erro no upload:', error);\r\n      alert('Erro ao enviar o meme. Tente novamente.');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        type=\"file\"\r\n        accept=\"image/*,video/*\"\r\n        onChange={handleFileChange}\r\n        ref={fileInputRef}\r\n      />\r\n\r\n      <TextArea\r\n        rows=\"3\"\r\n        placeholder=\"Escreva uma legenda (opcional)...\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n\r\n      {preview && (\r\n        <Preview>\r\n          {file.type.startsWith('image/') ? (\r\n            <img src={preview} alt=\"Preview\" />\r\n          ) : (\r\n            <video src={preview} controls />\r\n          )}\r\n        </Preview>\r\n      )}\r\n\r\n      <Button type=\"submit\" disabled={isUploading}>\r\n        {isUploading ? 'Enviando...' : 'Enviar Meme'}\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default MemeUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}