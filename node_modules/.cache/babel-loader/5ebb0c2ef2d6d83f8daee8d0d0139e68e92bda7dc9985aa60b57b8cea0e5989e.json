{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\client2\\\\src\\\\components\\\\MemeThumbnail.jsx\";\n// Substitua o conteúdo do arquivo por:\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaPlay } from 'react-icons/fa';\nimport MemeOptions from './MemeOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThumbnailContainer = styled(Link)`\n  display: block;\n  border-radius: 8px;\n  overflow: hidden;\n  position: relative;\n  aspect-ratio: 1;\n  background: #f5f5f5;\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  }\n`;\n_c = ThumbnailContainer;\nconst ThumbnailImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s;\n`;\n_c2 = ThumbnailImage;\nconst VideoOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.3s;\n  \n  ${ThumbnailContainer}:hover & {\n    opacity: 1;\n  }\n`;\n_c3 = VideoOverlay;\nconst PlayIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  background: rgba(255, 69, 0, 0.9);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n_c4 = PlayIcon;\nconst RepostBadge = styled.div`\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  background: rgba(0,0,0,0.7);\n  color: white;\n  padding: 3px 6px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  z-index: 1;\n`;\n_c5 = RepostBadge;\nconst MemeThumbnail = ({\n  meme,\n  isOwner,\n  onDelete\n}) => {\n  const getMediaUrl = () => {\n    if (!meme.mediaUrl) return 'https://placehold.co/600x400?text=Imagem+não+carregada';\n    if (meme.mediaUrl.startsWith('http')) return meme.mediaUrl;\n    return `${process.env.REACT_APP_API_URL || 'https://api.jokesteronline.org'}${meme.mediaUrl}`;\n  };\n  return /*#__PURE__*/_jsxDEV(ThumbnailContainer, {\n    to: `/memes/${meme._id}`,\n    children: [isOwner && /*#__PURE__*/_jsxDEV(MemeOptions, {\n      memeId: meme._id,\n      onDelete: onDelete,\n      onClick: e => e.preventDefault() // Previne navegação ao clicar no menu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThumbnailImage, {\n      src: getMediaUrl(),\n      alt: meme.caption || 'Meme thumbnail',\n      crossOrigin: \"anonymous\",\n      onError: e => {\n        e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n        e.target.onerror = null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), meme.mediaType === 'video' && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n      children: /*#__PURE__*/_jsxDEV(PlayIcon, {\n        children: /*#__PURE__*/_jsxDEV(FaPlay, {\n          size: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), meme.isRepost && /*#__PURE__*/_jsxDEV(RepostBadge, {\n      children: \"Repost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c6 = MemeThumbnail;\nexport default MemeThumbnail;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ThumbnailContainer\");\n$RefreshReg$(_c2, \"ThumbnailImage\");\n$RefreshReg$(_c3, \"VideoOverlay\");\n$RefreshReg$(_c4, \"PlayIcon\");\n$RefreshReg$(_c5, \"RepostBadge\");\n$RefreshReg$(_c6, \"MemeThumbnail\");","map":{"version":3,"names":["styled","Link","FaPlay","MemeOptions","jsxDEV","_jsxDEV","ThumbnailContainer","_c","ThumbnailImage","img","_c2","VideoOverlay","div","_c3","PlayIcon","_c4","RepostBadge","_c5","MemeThumbnail","meme","isOwner","onDelete","getMediaUrl","mediaUrl","startsWith","process","env","REACT_APP_API_URL","to","_id","children","memeId","onClick","e","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","caption","crossOrigin","onError","target","onerror","mediaType","size","isRepost","_c6","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/components/MemeThumbnail.jsx"],"sourcesContent":["// Substitua o conteúdo do arquivo por:\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaPlay } from 'react-icons/fa';\nimport MemeOptions from './MemeOptions';\n\nconst ThumbnailContainer = styled(Link)`\n  display: block;\n  border-radius: 8px;\n  overflow: hidden;\n  position: relative;\n  aspect-ratio: 1;\n  background: #f5f5f5;\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  }\n`;\n\nconst ThumbnailImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s;\n`;\n\nconst VideoOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.3s;\n  \n  ${ThumbnailContainer}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst PlayIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  background: rgba(255, 69, 0, 0.9);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n\nconst RepostBadge = styled.div`\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  background: rgba(0,0,0,0.7);\n  color: white;\n  padding: 3px 6px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  z-index: 1;\n`;\n\nconst MemeThumbnail = ({ meme, isOwner, onDelete }) => {\n  const getMediaUrl = () => {\n    if (!meme.mediaUrl) return 'https://placehold.co/600x400?text=Imagem+não+carregada';\n    if (meme.mediaUrl.startsWith('http')) return meme.mediaUrl;\n    return `${process.env.REACT_APP_API_URL || 'https://api.jokesteronline.org'}${meme.mediaUrl}`;\n  };\n\n  return (\n    <ThumbnailContainer to={`/memes/${meme._id}`}>\n      {isOwner && (\n        <MemeOptions \n          memeId={meme._id} \n          onDelete={onDelete}\n          onClick={(e) => e.preventDefault()} // Previne navegação ao clicar no menu\n        />\n      )}\n      \n      <ThumbnailImage \n        src={getMediaUrl()}\n        alt={meme.caption || 'Meme thumbnail'}\n        crossOrigin=\"anonymous\"\n        onError={(e) => {\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n          e.target.onerror = null;\n        }}\n      />\n      \n      {meme.mediaType === 'video' && (\n        <VideoOverlay>\n          <PlayIcon>\n            <FaPlay size={14} />\n          </PlayIcon>\n        </VideoOverlay>\n      )}\n      \n      {meme.isRepost && (\n        <RepostBadge>Repost</RepostBadge>\n      )}\n    </ThumbnailContainer>\n  );\n};\n\nexport default MemeThumbnail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}