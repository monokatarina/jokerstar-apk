{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import UploadButton from'../components/UploadButton';import useInfiniteScroll from'../hooks/useInfiniteScroll';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: var(--background);\n`;const FeedHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;const FeedTitle=styled.h1`\n  font-size: 24px;\n  color: var(--text);\n`;const RefreshButton=styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;const RepostButton=styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;const EmptyFeed=styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow);\n  color: var(--text);\n`;const LoadingIndicator=styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;const ErrorMessage=styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: var(--radius-md);\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;const Filters=styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;const FilterButton=styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: var(--radius-lg);\n  border: none;\n  background: ${_ref=>{let{$active}=_ref;return $active?'var(--primary)':'var(--card-bg)';}};\n  color: ${_ref2=>{let{$active}=_ref2;return $active?'var(--text-inverse)':'var(--text)';}};\n  cursor: pointer;\n  transition: var(--transition);\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n\n  &:hover {\n    background: ${_ref3=>{let{$active}=_ref3;return $active?'var(--primary-hover)':'var(--border-light)';}};\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;const LoadingMoreIndicator=styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;const TrendingPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[loadingMore,setLoadingMore]=useState(false);const[error,setError]=useState(null);const[filter,setFilter]=useState('all');const[page,setPage]=useState(1);const[hasMore,setHasMore]=useState(true);const{user,logout}=useAuth();const navigate=useNavigate();const fetchTrendingMemes=useCallback(async function(){let pageNum=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let isRefreshing=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{var _response$data,_response$data2;if(pageNum===1)setLoading(true);else setLoadingMore(true);setError(null);const response=await api.get(`/feed/trending?page=${pageNum}&limit=10`);// Verificação robusta da estrutura de resposta\nconst receivedData=((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.data)||((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.items)||response.data||[];const memesArray=Array.isArray(receivedData)?receivedData:[];if(isRefreshing){setMemes(memesArray);}else{setMemes(prev=>pageNum===1?memesArray:[...prev,...memesArray]);}setHasMore(memesArray.length>=10);setPage(pageNum);}catch(error){var _error$response;console.error('Error fetching trending memes:',error);setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}// Garante que os estados de loading sejam resetados mesmo em caso de erro\nsetMemes([]);}finally{setLoading(false);setLoadingMore(false);}},[logout,navigate]);const handleLoadMore=useCallback(()=>{if(!loading&&!loadingMore&&hasMore){fetchTrendingMemes(page+1);}},[fetchTrendingMemes,hasMore,loading,loadingMore,page]);const[infiniteScrollRef]=useInfiniteScroll({loading,hasMore,onLoadMore:handleLoadMore});const handleRefresh=useCallback(()=>{fetchTrendingMemes(1,true);},[fetchTrendingMemes]);const handleRepost=async memeId=>{try{await api.post(`/memes/${memeId}/repost`);handleRefresh();// Atualiza a lista após repostar\n}catch(error){var _error$response2;console.error('Erro ao repostar:',error);setError('Erro ao repostar');if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){await logout();navigate('/login');}}};useEffect(()=>{fetchTrendingMemes();},[fetchTrendingMemes]);const filteredMemes=memes.filter(meme=>{if(filter==='all')return true;if(filter==='images')return meme.mediaType==='image';if(filter==='videos')return meme.mediaType==='video';return true;});if(loading&&page===1){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando memes em destaque...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(RefreshButton,{onClick:handleRefresh,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsxs(FeedContainer,{children:[/*#__PURE__*/_jsxs(FeedHeader,{children:[/*#__PURE__*/_jsx(FeedTitle,{children:\"Destaques - Os memes mais populares\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(UploadButton,{}),/*#__PURE__*/_jsxs(RefreshButton,{onClick:handleRefresh,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Atualizar\"]})]})]}),/*#__PURE__*/_jsxs(Filters,{children:[/*#__PURE__*/_jsx(FilterButton,{$active:filter==='all',onClick:()=>setFilter('all'),children:\"Todos\"}),/*#__PURE__*/_jsx(FilterButton,{$active:filter==='images',onClick:()=>setFilter('images'),children:\"Imagens\"}),/*#__PURE__*/_jsx(FilterButton,{$active:filter==='videos',onClick:()=>setFilter('videos'),children:\"V\\xEDdeos\"})]}),filteredMemes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme em destaque encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Que tal criar o primeiro?\"}),/*#__PURE__*/_jsx(UploadButton,{style:{marginTop:'20px'}})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"feed-list\",children:[filteredMemes.map((meme,index)=>{var _meme$author;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'24px'},ref:index===filteredMemes.length-1?infiniteScrollRef:null,children:[/*#__PURE__*/_jsx(MemeCard,{meme:meme}),user&&user._id!==((_meme$author=meme.author)===null||_meme$author===void 0?void 0:_meme$author._id)&&/*#__PURE__*/_jsxs(RepostButton,{onClick:()=>handleRepost(meme._id),children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDD01\"}),\" Repostar (\",meme.repostCount||0,\")\"]})]},`${meme._id}-${index}`);}),loadingMore&&/*#__PURE__*/_jsxs(LoadingMoreIndicator,{children:[/*#__PURE__*/_jsx(FiRefreshCw,{className:\"spin\"}),\" Carregando mais memes...\"]}),!hasMore&&filteredMemes.length>0&&/*#__PURE__*/_jsx(LoadingMoreIndicator,{children:\"Voc\\xEA chegou ao fim dos memes em destaque!\"})]})]});};export default TrendingPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","api","MemeCard","useNavigate","useAuth","FiRefreshCw","UploadButton","useInfiniteScroll","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedHeader","FeedTitle","h1","RefreshButton","button","RepostButton","EmptyFeed","LoadingIndicator","ErrorMessage","Filters","FilterButton","_ref","$active","_ref2","_ref3","LoadingMoreIndicator","TrendingPage","memes","setMemes","loading","setLoading","loadingMore","setLoadingMore","error","setError","filter","setFilter","page","setPage","hasMore","setHasMore","user","logout","navigate","fetchTrendingMemes","pageNum","arguments","length","undefined","isRefreshing","_response$data","_response$data2","response","get","receivedData","data","items","memesArray","Array","isArray","prev","_error$response","console","status","handleLoadMore","infiniteScrollRef","onLoadMore","handleRefresh","handleRepost","memeId","post","_error$response2","filteredMemes","meme","mediaType","children","onClick","style","marginTop","className","map","index","_meme$author","marginBottom","ref","_id","author","repostCount"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/pages/TrendingPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport UploadButton from '../components/UploadButton';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\n\nconst FeedContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: var(--background);\n`;\n\nconst FeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FeedTitle = styled.h1`\n  font-size: 24px;\n  color: var(--text);\n`;\n\nconst RefreshButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst RepostButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst EmptyFeed = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow);\n  color: var(--text);\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: var(--radius-md);\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: var(--radius-lg);\n  border: none;\n  background: ${({ $active }) => $active ? 'var(--primary)' : 'var(--card-bg)'};\n  color: ${({ $active }) => $active ? 'var(--text-inverse)' : 'var(--text)'};\n  cursor: pointer;\n  transition: var(--transition);\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n\n  &:hover {\n    background: ${({ $active }) => $active ? 'var(--primary-hover)' : 'var(--border-light)'};\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst LoadingMoreIndicator = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;\n\nconst TrendingPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchTrendingMemes = useCallback(async (pageNum = 1, isRefreshing = false) => {\n    try {\n      if (pageNum === 1) setLoading(true);\n      else setLoadingMore(true);\n      \n      setError(null);\n      const response = await api.get(`/feed/trending?page=${pageNum}&limit=10`);\n      \n      // Verificação robusta da estrutura de resposta\n      const receivedData = response.data?.data || response.data?.items || response.data || [];\n      const memesArray = Array.isArray(receivedData) ? receivedData : [];\n      \n      if (isRefreshing) {\n        setMemes(memesArray);\n      } else {\n        setMemes(prev => pageNum === 1 ? memesArray : [...prev, ...memesArray]);\n      }\n      \n      setHasMore(memesArray.length >= 10);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error fetching trending memes:', error);\n      setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n      // Garante que os estados de loading sejam resetados mesmo em caso de erro\n      setMemes([]);\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  }, [logout, navigate]);\n  const handleLoadMore = useCallback(() => {\n    if (!loading && !loadingMore && hasMore) {\n      fetchTrendingMemes(page + 1);\n    }\n  }, [fetchTrendingMemes, hasMore, loading, loadingMore, page]);\n\n  const [infiniteScrollRef] = useInfiniteScroll({\n    loading,\n    hasMore,\n    onLoadMore: handleLoadMore,\n  });\n\n  const handleRefresh = useCallback(() => {\n    fetchTrendingMemes(1, true);\n  }, [fetchTrendingMemes]);\n\n  const handleRepost = async (memeId) => {\n    try {\n      await api.post(`/memes/${memeId}/repost`);\n      handleRefresh(); // Atualiza a lista após repostar\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n      setError('Erro ao repostar');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTrendingMemes();\n  }, [fetchTrendingMemes]);\n\n  const filteredMemes = memes.filter(meme => {\n    if (filter === 'all') return true;\n    if (filter === 'images') return meme.mediaType === 'image';\n    if (filter === 'videos') return meme.mediaType === 'video';\n    return true;\n  });\n\n  if (loading && page === 1) {\n    return (\n      <FeedContainer>\n        <LoadingIndicator>Carregando memes em destaque...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer>\n        <ErrorMessage>\n          {error}\n          <RefreshButton onClick={handleRefresh}>\n            <FiRefreshCw /> Tentar novamente\n          </RefreshButton>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer>\n      <FeedHeader>\n        <FeedTitle>Destaques - Os memes mais populares</FeedTitle>\n        <div>\n          <UploadButton />\n          <RefreshButton onClick={handleRefresh}>\n            <FiRefreshCw /> Atualizar\n          </RefreshButton>\n        </div>\n      </FeedHeader>\n\n      <Filters>\n        <FilterButton \n          $active={filter === 'all'}\n          onClick={() => setFilter('all')}\n        >\n          Todos\n        </FilterButton>\n        <FilterButton \n          $active={filter === 'images'}\n          onClick={() => setFilter('images')}\n        >\n          Imagens\n        </FilterButton>\n        <FilterButton \n          $active={filter === 'videos'}\n          onClick={() => setFilter('videos')}\n        >\n          Vídeos\n        </FilterButton>\n      </Filters>\n      \n      {filteredMemes.length === 0 ? (\n        <EmptyFeed>\n          <h3>Nenhum meme em destaque encontrado</h3>\n          <p>Que tal criar o primeiro?</p>\n          <UploadButton style={{ marginTop: '20px' }} />\n        </EmptyFeed>\n      ) : (\n        <div className=\"feed-list\">\n          {filteredMemes.map((meme, index) => (\n            <div \n              key={`${meme._id}-${index}`} \n              style={{ marginBottom: '24px' }}\n              ref={index === filteredMemes.length - 1 ? infiniteScrollRef : null}\n            >\n              <MemeCard meme={meme} />\n              {user && user._id !== meme.author?._id && (\n                <RepostButton onClick={() => handleRepost(meme._id)}>\n                  <span>🔁</span> Repostar ({meme.repostCount || 0})\n                </RepostButton>\n              )}\n            </div>\n          ))}\n          \n          {loadingMore && (\n            <LoadingMoreIndicator>\n              <FiRefreshCw className=\"spin\" /> Carregando mais memes...\n            </LoadingMoreIndicator>\n          )}\n          \n          {!hasMore && filteredMemes.length > 0 && (\n            <LoadingMoreIndicator>\n              Você chegou ao fim dos memes em destaque!\n            </LoadingMoreIndicator>\n          )}\n        </div>\n      )}\n    </FeedContainer>\n  );\n};\n\nexport default TrendingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}