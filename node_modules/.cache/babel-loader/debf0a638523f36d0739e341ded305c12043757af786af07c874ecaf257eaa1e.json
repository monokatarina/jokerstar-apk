{"ast":null,"code":"// src/services/auth.js\nimport axios from'axios';import api from'./api';const API_URL='/auth';// Já estamos usando api.js que tem a baseUrl\n// Função para registro de usuário\nexport const register=async userData=>{try{const{data}=await api.post(`${API_URL}/register`,userData);return data;}catch(error){console.error('[register] Erro:',error);if(error.response&&error.response.status===409){const{message,conflicts}=error.response.data;throw{type:'CONFLICT',message,conflicts};}throw{type:'UNKNOWN_ERROR',message:'Erro ao registrar usuário'};}};// Função para login de usuário\nexport const login=async credentials=>{try{const{data}=await api.post(`${API_URL}/login`,credentials);return data;}catch(error){console.error('[login] Erro:',error);if(error.response&&error.response.status===401){throw{type:'AUTH_ERROR',message:'Credenciais inválidas'};}throw{type:'UNKNOWN_ERROR',message:'Erro ao fazer login'};}};// Função para verificar autenticação\nexport const checkAuth=async()=>{try{const{data}=await api.get(`${API_URL}/check`);return data;}catch(error){console.error('[checkAuth] Erro:',error);if(error.response&&error.response.status===401){throw{type:'AUTH_ERROR',message:'Sessão expirada'};}throw{type:'UNKNOWN_ERROR',message:'Erro ao verificar autenticação'};}};// Função para logout de usuário\nexport const logout=async()=>{try{localStorage.removeItem('token');// Se no futuro quiser enviar algo para /auth/logout no backend, é aqui\nreturn{success:true};}catch(error){console.error('[logout] Erro:',error);throw{type:'UNKNOWN_ERROR',message:'Erro ao fazer logout'};}};","map":{"version":3,"names":["axios","api","API_URL","register","userData","data","post","error","console","response","status","message","conflicts","type","login","credentials","checkAuth","get","logout","localStorage","removeItem","success"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/services/auth.js"],"sourcesContent":["// src/services/auth.js\r\nimport axios from 'axios';\r\nimport api from './api';\r\n\r\nconst API_URL = '/auth'; // Já estamos usando api.js que tem a baseUrl\r\n\r\n// Função para registro de usuário\r\nexport const register = async (userData) => {\r\n  try {\r\n    const { data } = await api.post(`${API_URL}/register`, userData);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[register] Erro:', error);\r\n    if (error.response && error.response.status === 409) {\r\n      const { message, conflicts } = error.response.data;\r\n      throw { type: 'CONFLICT', message, conflicts };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao registrar usuário' };\r\n  }\r\n};\r\n\r\n// Função para login de usuário\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const { data } = await api.post(`${API_URL}/login`, credentials);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[login] Erro:', error);\r\n    if (error.response && error.response.status === 401) {\r\n      throw { type: 'AUTH_ERROR', message: 'Credenciais inválidas' };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao fazer login' };\r\n  }\r\n};\r\n\r\n// Função para verificar autenticação\r\nexport const checkAuth = async () => {\r\n  try {\r\n    const { data } = await api.get(`${API_URL}/check`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[checkAuth] Erro:', error);\r\n    if (error.response && error.response.status === 401) {\r\n      throw { type: 'AUTH_ERROR', message: 'Sessão expirada' };\r\n    }\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao verificar autenticação' };\r\n  }\r\n};\r\n\r\n// Função para logout de usuário\r\nexport const logout = async () => {\r\n  try {\r\n    localStorage.removeItem('token');\r\n    // Se no futuro quiser enviar algo para /auth/logout no backend, é aqui\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('[logout] Erro:', error);\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao fazer logout' };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,OAAO,CAAG,OAAO,CAAE;AAEzB;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC1C,GAAI,CACF,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,GAAGJ,OAAO,WAAW,CAAEE,QAAQ,CAAC,CAChE,MAAO,CAAAC,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CACxC,GAAIA,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnD,KAAM,CAAEC,OAAO,CAAEC,SAAU,CAAC,CAAGL,KAAK,CAACE,QAAQ,CAACJ,IAAI,CAClD,KAAM,CAAEQ,IAAI,CAAE,UAAU,CAAEF,OAAO,CAAEC,SAAU,CAAC,CAChD,CACA,KAAM,CAAEC,IAAI,CAAE,eAAe,CAAEF,OAAO,CAAE,2BAA4B,CAAC,CACvE,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,KAAK,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC1C,GAAI,CACF,KAAM,CAAEV,IAAK,CAAC,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,CAAEa,WAAW,CAAC,CAChE,MAAO,CAAAV,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,GAAIA,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnD,KAAM,CAAEG,IAAI,CAAE,YAAY,CAAEF,OAAO,CAAE,uBAAwB,CAAC,CAChE,CACA,KAAM,CAAEE,IAAI,CAAE,eAAe,CAAEF,OAAO,CAAE,qBAAsB,CAAC,CACjE,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAK,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAEX,IAAK,CAAC,CAAG,KAAM,CAAAJ,GAAG,CAACgB,GAAG,CAAC,GAAGf,OAAO,QAAQ,CAAC,CAClD,MAAO,CAAAG,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAAC,CACzC,GAAIA,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnD,KAAM,CAAEG,IAAI,CAAE,YAAY,CAAEF,OAAO,CAAE,iBAAkB,CAAC,CAC1D,CACA,KAAM,CAAEE,IAAI,CAAE,eAAe,CAAEF,OAAO,CAAE,gCAAiC,CAAC,CAC5E,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,MAAM,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACFC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChC;AACA,MAAO,CAAEC,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOd,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,KAAM,CAAEM,IAAI,CAAE,eAAe,CAAEF,OAAO,CAAE,sBAAuB,CAAC,CAClE,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}