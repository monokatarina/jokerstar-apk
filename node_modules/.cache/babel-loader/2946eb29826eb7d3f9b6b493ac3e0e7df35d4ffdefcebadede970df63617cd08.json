{"ast":null,"code":"import{PushNotifications,LocalNotifications}from'@capacitor/push-notifications';import{Capacitor}from'@capacitor/core';export const initNotifications=async()=>{if(!Capacitor.isNativePlatform())return;// Solicita permissões\nlet permissionStatus=await PushNotifications.checkPermissions();if(permissionStatus.receive!=='granted'){permissionStatus=await PushNotifications.requestPermissions();if(permissionStatus.receive!=='granted'){throw new Error('Permissão negada para notificações');}}// Registra para push\nawait PushNotifications.register();// Configura listeners\nPushNotifications.addListener('registration',token=>{console.log('Push registration success, token:',token.value);// Envie este token para seu backend\napi.post('/notifications/register',{token:token.value});});PushNotifications.addListener('registrationError',error=>{console.error('Push registration error:',error);});PushNotifications.addListener('pushNotificationReceived',notification=>{console.log('Push received:',notification);showLocalNotification(notification);});// Configura notificações locais\nawait LocalNotifications.requestPermissions();};const showLocalNotification=async notification=>{await LocalNotifications.schedule({notifications:[{title:notification.title,body:notification.body,id:new Date().getTime(),extra:notification.data}]});};","map":{"version":3,"names":["PushNotifications","LocalNotifications","Capacitor","initNotifications","isNativePlatform","permissionStatus","checkPermissions","receive","requestPermissions","Error","register","addListener","token","console","log","value","api","post","error","notification","showLocalNotification","schedule","notifications","title","body","id","Date","getTime","extra","data"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/utils/notifications.js"],"sourcesContent":["import { PushNotifications, LocalNotifications } from '@capacitor/push-notifications';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nexport const initNotifications = async () => {\r\n  if (!Capacitor.isNativePlatform()) return;\r\n\r\n  // Solicita permissões\r\n  let permissionStatus = await PushNotifications.checkPermissions();\r\n  \r\n  if (permissionStatus.receive !== 'granted') {\r\n    permissionStatus = await PushNotifications.requestPermissions();\r\n    if (permissionStatus.receive !== 'granted') {\r\n      throw new Error('Permissão negada para notificações');\r\n    }\r\n  }\r\n\r\n  // Registra para push\r\n  await PushNotifications.register();\r\n\r\n  // Configura listeners\r\n  PushNotifications.addListener('registration', (token) => {\r\n    console.log('Push registration success, token:', token.value);\r\n    // Envie este token para seu backend\r\n    api.post('/notifications/register', { token: token.value });\r\n  });\r\n\r\n  PushNotifications.addListener('registrationError', (error) => {\r\n    console.error('Push registration error:', error);\r\n  });\r\n\r\n  PushNotifications.addListener('pushNotificationReceived', (notification) => {\r\n    console.log('Push received:', notification);\r\n    showLocalNotification(notification);\r\n  });\r\n\r\n  // Configura notificações locais\r\n  await LocalNotifications.requestPermissions();\r\n};\r\n\r\nconst showLocalNotification = async (notification) => {\r\n  await LocalNotifications.schedule({\r\n    notifications: [{\r\n      title: notification.title,\r\n      body: notification.body,\r\n      id: new Date().getTime(),\r\n      extra: notification.data\r\n    }]\r\n  });\r\n};"],"mappings":"AAAA,OAASA,iBAAiB,CAAEC,kBAAkB,KAAQ,+BAA+B,CACrF,OAASC,SAAS,KAAQ,iBAAiB,CAE3C,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CAACD,SAAS,CAACE,gBAAgB,CAAC,CAAC,CAAE,OAEnC;AACA,GAAI,CAAAC,gBAAgB,CAAG,KAAM,CAAAL,iBAAiB,CAACM,gBAAgB,CAAC,CAAC,CAEjE,GAAID,gBAAgB,CAACE,OAAO,GAAK,SAAS,CAAE,CAC1CF,gBAAgB,CAAG,KAAM,CAAAL,iBAAiB,CAACQ,kBAAkB,CAAC,CAAC,CAC/D,GAAIH,gBAAgB,CAACE,OAAO,GAAK,SAAS,CAAE,CAC1C,KAAM,IAAI,CAAAE,KAAK,CAAC,oCAAoC,CAAC,CACvD,CACF,CAEA;AACA,KAAM,CAAAT,iBAAiB,CAACU,QAAQ,CAAC,CAAC,CAElC;AACAV,iBAAiB,CAACW,WAAW,CAAC,cAAc,CAAGC,KAAK,EAAK,CACvDC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEF,KAAK,CAACG,KAAK,CAAC,CAC7D;AACAC,GAAG,CAACC,IAAI,CAAC,yBAAyB,CAAE,CAAEL,KAAK,CAAEA,KAAK,CAACG,KAAM,CAAC,CAAC,CAC7D,CAAC,CAAC,CAEFf,iBAAiB,CAACW,WAAW,CAAC,mBAAmB,CAAGO,KAAK,EAAK,CAC5DL,OAAO,CAACK,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAClD,CAAC,CAAC,CAEFlB,iBAAiB,CAACW,WAAW,CAAC,0BAA0B,CAAGQ,YAAY,EAAK,CAC1EN,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEK,YAAY,CAAC,CAC3CC,qBAAqB,CAACD,YAAY,CAAC,CACrC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAlB,kBAAkB,CAACO,kBAAkB,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAY,qBAAqB,CAAG,KAAO,CAAAD,YAAY,EAAK,CACpD,KAAM,CAAAlB,kBAAkB,CAACoB,QAAQ,CAAC,CAChCC,aAAa,CAAE,CAAC,CACdC,KAAK,CAAEJ,YAAY,CAACI,KAAK,CACzBC,IAAI,CAAEL,YAAY,CAACK,IAAI,CACvBC,EAAE,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CACxBC,KAAK,CAAET,YAAY,CAACU,IACtB,CAAC,CACH,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}