{"ast":null,"code":"// utils/renderMentions.js\nimport React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";export const renderMentions=(text,navigate)=>{if(!text)return null;const[mentionedUsers,setMentionedUsers]=useState([]);useEffect(()=>{const fetchUserIds=async()=>{const mentionRegex=/@([a-zA-Z0-9_]+)/g;const usernames=[...new Set((text.match(mentionRegex)||[]).map(match=>match.substring(1)))];if(usernames.length>0){try{const response=await api.post('/users/validate-mentions',{usernames:usernames});if(response.data.validUsers){setMentionedUsers(response.data.validUsers);}}catch(error){console.error('Erro ao buscar IDs de usuários:',error);}}};fetchUserIds();},[text]);return text.split(/(@\\w+)/g).map((part,i)=>{if(part.startsWith('@')){const username=part.substring(1);const user=mentionedUsers.find(user=>user.username===username);let profileUrl=`/users/${username}`;//  URL padrão: usa o nome de usuário (se o ID não for encontrado)\nif(user){profileUrl=`/users/${user._id}`;//  Se encontramos o usuário, usamos o ID!\n}return/*#__PURE__*/_jsx(\"span\",{className:\"mention\",style:{color:'var(--primary)',fontWeight:500,cursor:'pointer',padding:'0 2px',borderRadius:'3px',backgroundColor:'rgba(255, 69, 0, 0.1)'},onClick:e=>{e.stopPropagation();if(navigate){navigate(profileUrl);}},children:part},i);}return part;});};","map":{"version":3,"names":["React","useEffect","useState","useNavigate","api","jsx","_jsx","renderMentions","text","navigate","mentionedUsers","setMentionedUsers","fetchUserIds","mentionRegex","usernames","Set","match","map","substring","length","response","post","data","validUsers","error","console","split","part","i","startsWith","username","user","find","profileUrl","_id","className","style","color","fontWeight","cursor","padding","borderRadius","backgroundColor","onClick","e","stopPropagation","children"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/utils/renderMentions.js"],"sourcesContent":["// utils/renderMentions.js\r\n import React, { useEffect, useState } from 'react';\r\n import { useNavigate } from 'react-router-dom';\r\n import api from '../services/api';\r\n \r\n\r\n export const renderMentions = (text, navigate) => {\r\n  if (!text) return null;\r\n \r\n\r\n  const [mentionedUsers, setMentionedUsers] = useState([]);\r\n \r\n\r\n  useEffect(() => {\r\n    const fetchUserIds = async () => {\r\n      const mentionRegex = /@([a-zA-Z0-9_]+)/g;\r\n      const usernames = [...new Set((text.match(mentionRegex) || []).map(match => match.substring(1)))];\r\n \r\n\r\n      if (usernames.length > 0) {\r\n        try {\r\n          const response = await api.post('/users/validate-mentions', {\r\n            usernames: usernames\r\n          });\r\n          if (response.data.validUsers) {\r\n            setMentionedUsers(response.data.validUsers);\r\n          }\r\n        } catch (error) {\r\n          console.error('Erro ao buscar IDs de usuários:', error);\r\n        }\r\n      }\r\n    };\r\n \r\n\r\n    fetchUserIds();\r\n  }, [text]);\r\n \r\n\r\n  return text.split(/(@\\w+)/g).map((part, i) => {\r\n    if (part.startsWith('@')) {\r\n      const username = part.substring(1);\r\n      const user = mentionedUsers.find(user => user.username === username);\r\n      \r\n      let profileUrl = `/users/${username}`; //  URL padrão: usa o nome de usuário (se o ID não for encontrado)\r\n      if (user) {\r\n        profileUrl = `/users/${user._id}`; //  Se encontramos o usuário, usamos o ID!\r\n      }\r\n \r\n\r\n      return (\r\n        <span \r\n          key={i}\r\n          className=\"mention\"\r\n          style={{\r\n            color: 'var(--primary)',\r\n            fontWeight: 500,\r\n            cursor: 'pointer',\r\n            padding: '0 2px',\r\n            borderRadius: '3px',\r\n            backgroundColor: 'rgba(255, 69, 0, 0.1)'\r\n          }}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            if (navigate) {\r\n              navigate(profileUrl);\r\n            }\r\n          }}\r\n        >\r\n          {part}\r\n        </span>\r\n      );\r\n    }\r\n    return part;\r\n  });\r\n };"],"mappings":"AAAA;AACC,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGlC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAACC,IAAI,CAAEC,QAAQ,GAAK,CACjD,GAAI,CAACD,IAAI,CAAE,MAAO,KAAI,CAGtB,KAAM,CAACE,cAAc,CAAEC,iBAAiB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAGxDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAC,YAAY,CAAG,mBAAmB,CACxC,KAAM,CAAAC,SAAS,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAAC,CAACP,IAAI,CAACQ,KAAK,CAACH,YAAY,CAAC,EAAI,EAAE,EAAEI,GAAG,CAACD,KAAK,EAAIA,KAAK,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAGjG,GAAIJ,SAAS,CAACK,MAAM,CAAG,CAAC,CAAE,CACxB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,IAAI,CAAC,0BAA0B,CAAE,CAC1DP,SAAS,CAAEA,SACb,CAAC,CAAC,CACF,GAAIM,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAE,CAC5BZ,iBAAiB,CAACS,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC,CAC7C,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CACF,CAAC,CAGDZ,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAACJ,IAAI,CAAC,CAAC,CAGV,MAAO,CAAAA,IAAI,CAACkB,KAAK,CAAC,SAAS,CAAC,CAACT,GAAG,CAAC,CAACU,IAAI,CAAEC,CAAC,GAAK,CAC5C,GAAID,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,CAAE,CACxB,KAAM,CAAAC,QAAQ,CAAGH,IAAI,CAACT,SAAS,CAAC,CAAC,CAAC,CAClC,KAAM,CAAAa,IAAI,CAAGrB,cAAc,CAACsB,IAAI,CAACD,IAAI,EAAIA,IAAI,CAACD,QAAQ,GAAKA,QAAQ,CAAC,CAEpE,GAAI,CAAAG,UAAU,CAAG,UAAUH,QAAQ,EAAE,CAAE;AACvC,GAAIC,IAAI,CAAE,CACRE,UAAU,CAAG,UAAUF,IAAI,CAACG,GAAG,EAAE,CAAE;AACrC,CAGA,mBACE5B,IAAA,SAEE6B,SAAS,CAAC,SAAS,CACnBC,KAAK,CAAE,CACLC,KAAK,CAAE,gBAAgB,CACvBC,UAAU,CAAE,GAAG,CACfC,MAAM,CAAE,SAAS,CACjBC,OAAO,CAAE,OAAO,CAChBC,YAAY,CAAE,KAAK,CACnBC,eAAe,CAAE,uBACnB,CAAE,CACFC,OAAO,CAAGC,CAAC,EAAK,CACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CACnB,GAAIpC,QAAQ,CAAE,CACZA,QAAQ,CAACwB,UAAU,CAAC,CACtB,CACF,CAAE,CAAAa,QAAA,CAEDnB,IAAI,EAjBAC,CAkBD,CAAC,CAEX,CACA,MAAO,CAAAD,IAAI,CACb,CAAC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}