{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: var(--background);\n  position: relative;\n`;const FeedScrollContainer=styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n`;const MemeSlide=styled.div`\n  min-width: 100vw;\n  height: 100%;\n  scroll-snap-align: start;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 60px; /* Espaço para os controles */\n`;const ControlsContainer=styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n`;const ControlButton=styled.button`\n  background: none;\n  border: none;\n  color: white;\n  font-size: 24px;\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  span {\n    font-size: 12px;\n    margin-top: 4px;\n  }\n`;const ProgressIndicator=styled.div`\n  position: absolute;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 6px;\n  z-index: 10;\n`;const ProgressDot=styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props=>props.$active?'var(--primary)':'rgba(255,255,255,0.3)'};\n  transition: all 0.3s ease;\n`;const EmptyFeed=styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-light);\n  text-align: center;\n  padding: 20px;\n  \n  h3 {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    margin-bottom: 20px;\n  }\n`;const LoadingIndicator=styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  color: var(--text-light);\n`;const ErrorMessage=styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  color: var(--dislike-color);\n  text-align: center;\n  \n  button {\n    margin-top: 20px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 20px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[deletingMemeId,setDeletingMemeId]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const{user,logout}=useAuth();const navigate=useNavigate();const scrollRef=useRef(null);const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleMemeDeleted=deletedMemeId=>{setMemes(prevMemes=>prevMemes.filter(meme=>meme._id!==deletedMemeId));setDeletingMemeId(null);};const handleScroll=()=>{if(scrollRef.current){const scrollPosition=scrollRef.current.scrollLeft;const index=Math.round(scrollPosition/window.innerWidth);setCurrentIndex(index);}};const scrollToIndex=index=>{if(scrollRef.current){scrollRef.current.scrollTo({left:index*window.innerWidth,behavior:'smooth'});}};const handleNext=()=>{if(currentIndex<memes.length-1){scrollToIndex(currentIndex+1);}};const handlePrev=()=>{if(currentIndex>0){scrollToIndex(currentIndex-1);}};useEffect(()=>{const scrollContainer=scrollRef.current;if(scrollContainer){scrollContainer.addEventListener('scroll',handleScroll);return()=>scrollContainer.removeEventListener('scroll',handleScroll);}},[]);useEffect(()=>{fetchMemes();},[]);if(loading){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando memes...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsxs(FeedContainer,{children:[memes.length>0&&/*#__PURE__*/_jsx(ProgressIndicator,{children:memes.map((_,index)=>/*#__PURE__*/_jsx(ProgressDot,{$active:index===currentIndex,onClick:()=>scrollToIndex(index)},index))}),/*#__PURE__*/_jsx(FeedScrollContainer,{ref:scrollRef,children:memes.length===0?/*#__PURE__*/_jsx(MemeSlide,{children:/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhuma postagem encontrada\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Que tal criar a primeira?\"}),/*#__PURE__*/_jsx(UploadButton,{style:{marginTop:'20px'}})]})}):memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeSlide,{children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,onDelete:handleMemeDeleted,isDeleting:deletingMemeId===meme._id,onStartDelete:()=>setDeletingMemeId(meme._id),onCommentCountChange:newCount=>{setMemes(prevMemes=>prevMemes.map(m=>m._id===meme._id?{...m,commentCount:newCount}:m));},commentCount:meme.commentCount||0,isFullScreen:true})},meme._id))}),memes.length>0&&/*#__PURE__*/_jsxs(ControlsContainer,{children:[/*#__PURE__*/_jsxs(ControlButton,{onClick:handlePrev,disabled:currentIndex===0,children:[\"\\uD83D\\uDC48 \",/*#__PURE__*/_jsx(\"span\",{children:\"Anterior\"})]}),/*#__PURE__*/_jsxs(ControlButton,{onClick:()=>{var _currentMeme$author;const currentMeme=memes[currentIndex];if(user&&user._id!==((_currentMeme$author=currentMeme.author)===null||_currentMeme$author===void 0?void 0:_currentMeme$author._id)){api.post(`/memes/${currentMeme._id}/repost`);}},children:[\"\\uD83D\\uDD01 \",/*#__PURE__*/_jsx(\"span\",{children:\"Repostar\"})]}),/*#__PURE__*/_jsxs(ControlButton,{onClick:()=>{navigator.share({url:window.location.href,title:'Confira este meme!'}).catch(()=>{// Fallback para copiar link\nnavigator.clipboard.writeText(window.location.href);alert('Link copiado!');});},children:[\"\\uD83D\\uDCE4 \",/*#__PURE__*/_jsx(\"span\",{children:\"Compartilhar\"})]}),/*#__PURE__*/_jsxs(ControlButton,{onClick:()=>scrollToIndex(currentIndex+1),disabled:currentIndex===memes.length-1,children:[\"\\uD83D\\uDC49 \",/*#__PURE__*/_jsx(\"span\",{children:\"Pr\\xF3ximo\"})]})]})]});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","api","MemeCard","UploadButton","useNavigate","useAuth","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedScrollContainer","MemeSlide","ControlsContainer","ControlButton","button","ProgressIndicator","ProgressDot","props","$active","EmptyFeed","LoadingIndicator","ErrorMessage","FeedPage","memes","setMemes","loading","setLoading","error","setError","deletingMemeId","setDeletingMemeId","currentIndex","setCurrentIndex","user","logout","navigate","scrollRef","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleMemeDeleted","deletedMemeId","prevMemes","_id","handleScroll","current","scrollPosition","scrollLeft","index","Math","round","window","innerWidth","scrollToIndex","scrollTo","left","behavior","handleNext","length","handlePrev","scrollContainer","addEventListener","removeEventListener","children","onClick","map","_","ref","style","marginTop","onDelete","isDeleting","onStartDelete","onCommentCountChange","newCount","m","commentCount","isFullScreen","disabled","_currentMeme$author","currentMeme","author","post","navigator","share","url","location","href","title","catch","clipboard","writeText","alert"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport UploadButton from '../components/UploadButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background-color: var(--background);\n  position: relative;\n`;\n\nconst FeedScrollContainer = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n`;\n\nconst MemeSlide = styled.div`\n  min-width: 100vw;\n  height: 100%;\n  scroll-snap-align: start;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 60px; /* Espaço para os controles */\n`;\n\nconst ControlsContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n`;\n\nconst ControlButton = styled.button`\n  background: none;\n  border: none;\n  color: white;\n  font-size: 24px;\n  padding: 10px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  span {\n    font-size: 12px;\n    margin-top: 4px;\n  }\n`;\n\nconst ProgressIndicator = styled.div`\n  position: absolute;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 6px;\n  z-index: 10;\n`;\n\nconst ProgressDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props => props.$active ? 'var(--primary)' : 'rgba(255,255,255,0.3)'};\n  transition: all 0.3s ease;\n`;\n\nconst EmptyFeed = styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-light);\n  text-align: center;\n  padding: 20px;\n  \n  h3 {\n    font-size: 20px;\n    margin-bottom: 10px;\n  }\n  \n  p {\n    font-size: 16px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 18px;\n  color: var(--text-light);\n`;\n\nconst ErrorMessage = styled.div`\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  color: var(--dislike-color);\n  text-align: center;\n  \n  button {\n    margin-top: 20px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    border-radius: 20px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [deletingMemeId, setDeletingMemeId] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  const scrollRef = useRef(null);\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n      \n      const validMemes = Array.isArray(data?.data) \n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n      \n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prevMemes => prevMemes.filter(meme => meme._id !== deletedMemeId));\n    setDeletingMemeId(null);\n  };\n\n  const handleScroll = () => {\n    if (scrollRef.current) {\n      const scrollPosition = scrollRef.current.scrollLeft;\n      const index = Math.round(scrollPosition / window.innerWidth);\n      setCurrentIndex(index);\n    }\n  };\n\n  const scrollToIndex = (index) => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({\n        left: index * window.innerWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex < memes.length - 1) {\n      scrollToIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      scrollToIndex(currentIndex - 1);\n    }\n  };\n\n  useEffect(() => {\n    const scrollContainer = scrollRef.current;\n    if (scrollContainer) {\n      scrollContainer.addEventListener('scroll', handleScroll);\n      return () => scrollContainer.removeEventListener('scroll', handleScroll);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return (\n      <FeedContainer>\n        <LoadingIndicator>Carregando memes...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer>\n        <ErrorMessage>\n          {error}\n          <button onClick={fetchMemes}>\n            <FiRefreshCw /> Tentar novamente\n          </button>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer>\n      {memes.length > 0 && (\n        <ProgressIndicator>\n          {memes.map((_, index) => (\n            <ProgressDot \n              key={index} \n              $active={index === currentIndex}\n              onClick={() => scrollToIndex(index)}\n            />\n          ))}\n        </ProgressIndicator>\n      )}\n      \n      <FeedScrollContainer ref={scrollRef}>\n        {memes.length === 0 ? (\n          <MemeSlide>\n            <EmptyFeed>\n              <h3>Nenhuma postagem encontrada</h3>\n              <p>Que tal criar a primeira?</p>\n              <UploadButton style={{ marginTop: '20px' }} />\n            </EmptyFeed>\n          </MemeSlide>\n        ) : (\n          memes.map((meme, index) => (\n            <MemeSlide key={meme._id}>\n              <MemeCard \n                meme={meme}\n                onDelete={handleMemeDeleted}\n                isDeleting={deletingMemeId === meme._id}\n                onStartDelete={() => setDeletingMemeId(meme._id)}\n                onCommentCountChange={(newCount) => {\n                  setMemes(prevMemes => prevMemes.map(m => \n                    m._id === meme._id ? { ...m, commentCount: newCount } : m\n                  ))}}\n                commentCount={meme.commentCount || 0}\n                isFullScreen\n              />\n            </MemeSlide>\n          ))\n        )}\n      </FeedScrollContainer>\n\n      {memes.length > 0 && (\n        <ControlsContainer>\n          <ControlButton onClick={handlePrev} disabled={currentIndex === 0}>\n            👈 <span>Anterior</span>\n          </ControlButton>\n          <ControlButton onClick={() => {\n            const currentMeme = memes[currentIndex];\n            if (user && user._id !== currentMeme.author?._id) {\n              api.post(`/memes/${currentMeme._id}/repost`);\n            }\n          }}>\n            🔁 <span>Repostar</span>\n          </ControlButton>\n          <ControlButton onClick={() => {\n            navigator.share({\n              url: window.location.href,\n              title: 'Confira este meme!'\n            }).catch(() => {\n              // Fallback para copiar link\n              navigator.clipboard.writeText(window.location.href);\n              alert('Link copiado!');\n            });\n          }}>\n            📤 <span>Compartilhar</span>\n          </ControlButton>\n          <ControlButton onClick={() => scrollToIndex(currentIndex + 1)} disabled={currentIndex === memes.length - 1}>\n            👉 <span>Próximo</span>\n          </ControlButton>\n        </ControlsContainer>\n      )}\n    </FeedContainer>\n  );\n};\n\nexport default FeedPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}