{"ast":null,"code":"import React from'react';import styled from'styled-components';import MemeUpload from'../components/MemeUpload';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{useTheme}from'../styles/ThemeContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPageContainer=styled.div`\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: var(--card-bg);\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow);\n`;const Title=styled.h2`\n  color: var(--text);\n  margin-bottom: 1.5rem;\n`;const LoadingMessage=styled.div`\n  color: var(--text-light);\n  text-align: center;\n  padding: 1rem;\n`;const SuccessMessage=styled.div`\n  color: var(--success);\n  text-align: center;\n  padding: 1rem;\n  background: rgba(16, 185, 129, 0.1);\n  border-radius: var(--radius-sm);\n  margin: 1rem 0;\n`;const UploadPage=()=>{const{user,loading,initialCheckDone}=useAuth();const{theme}=useTheme();const navigate=useNavigate();const[uploadComplete,setUploadComplete]=React.useState(false);React.useEffect(()=>{if(initialCheckDone&&!user&&!loading){navigate('/login',{state:{from:'/upload'}});}},[user,loading,initialCheckDone,navigate]);const handleUploadSuccess=()=>{setUploadComplete(true);setTimeout(()=>navigate('/feed'),2000);};if(loading||!initialCheckDone){return/*#__PURE__*/_jsx(UploadPageContainer,{children:/*#__PURE__*/_jsx(LoadingMessage,{children:\"Carregando...\"})});}return/*#__PURE__*/_jsxs(UploadPageContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"Criar Nova Postagem\"}),uploadComplete?/*#__PURE__*/_jsx(SuccessMessage,{children:\"Postagem criada com sucesso! Redirecionando...\"}):/*#__PURE__*/_jsx(MemeUpload,{onSuccess:handleUploadSuccess})]});};export default UploadPage;","map":{"version":3,"names":["React","styled","MemeUpload","useNavigate","useAuth","useTheme","jsx","_jsx","jsxs","_jsxs","UploadPageContainer","div","Title","h2","LoadingMessage","SuccessMessage","UploadPage","user","loading","initialCheckDone","theme","navigate","uploadComplete","setUploadComplete","useState","useEffect","state","from","handleUploadSuccess","setTimeout","children","onSuccess"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny2/client/src/pages/UploadPage.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport MemeUpload from '../components/MemeUpload';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../styles/ThemeContext';\n\nconst UploadPageContainer = styled.div`\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: var(--card-bg);\n  border-radius: var(--radius-lg);\n  box-shadow: var(--shadow);\n`;\n\nconst Title = styled.h2`\n  color: var(--text);\n  margin-bottom: 1.5rem;\n`;\n\nconst LoadingMessage = styled.div`\n  color: var(--text-light);\n  text-align: center;\n  padding: 1rem;\n`;\n\nconst SuccessMessage = styled.div`\n  color: var(--success);\n  text-align: center;\n  padding: 1rem;\n  background: rgba(16, 185, 129, 0.1);\n  border-radius: var(--radius-sm);\n  margin: 1rem 0;\n`;\n\nconst UploadPage = () => {\n  const { user, loading, initialCheckDone } = useAuth();\n  const { theme } = useTheme();\n  const navigate = useNavigate();\n  const [uploadComplete, setUploadComplete] = React.useState(false);\n\n  React.useEffect(() => {\n    if (initialCheckDone && !user && !loading) {\n      navigate('/login', { state: { from: '/upload' } });\n    }\n  }, [user, loading, initialCheckDone, navigate]);\n\n  const handleUploadSuccess = () => {\n    setUploadComplete(true);\n    setTimeout(() => navigate('/feed'), 2000);\n  };\n\n  if (loading || !initialCheckDone) {\n    return (\n      <UploadPageContainer>\n        <LoadingMessage>Carregando...</LoadingMessage>\n      </UploadPageContainer>\n    );\n  }\n\n  return (\n    <UploadPageContainer>\n      <Title>Criar Nova Postagem</Title>\n      {uploadComplete ? (\n        <SuccessMessage>\n          Postagem criada com sucesso! Redirecionando...\n        </SuccessMessage>\n      ) : (\n        <MemeUpload onSuccess={handleUploadSuccess} />\n      )}\n    </UploadPageContainer>\n  );\n};\n\nexport default UploadPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,OAASC,QAAQ,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,mBAAmB,CAAGT,MAAM,CAACU,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGX,MAAM,CAACY,EAAE;AACvB;AACA;AACA,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGb,MAAM,CAACU,GAAG;AACjC;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,cAAc,CAAGd,MAAM,CAACU,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAK,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAEC,gBAAiB,CAAC,CAAGf,OAAO,CAAC,CAAC,CACrD,KAAM,CAAEgB,KAAM,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAC5B,KAAM,CAAAgB,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACmB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,KAAK,CAACwB,QAAQ,CAAC,KAAK,CAAC,CAEjExB,KAAK,CAACyB,SAAS,CAAC,IAAM,CACpB,GAAIN,gBAAgB,EAAI,CAACF,IAAI,EAAI,CAACC,OAAO,CAAE,CACzCG,QAAQ,CAAC,QAAQ,CAAE,CAAEK,KAAK,CAAE,CAAEC,IAAI,CAAE,SAAU,CAAE,CAAC,CAAC,CACpD,CACF,CAAC,CAAE,CAACV,IAAI,CAAEC,OAAO,CAAEC,gBAAgB,CAAEE,QAAQ,CAAC,CAAC,CAE/C,KAAM,CAAAO,mBAAmB,CAAGA,CAAA,GAAM,CAChCL,iBAAiB,CAAC,IAAI,CAAC,CACvBM,UAAU,CAAC,IAAMR,QAAQ,CAAC,OAAO,CAAC,CAAE,IAAI,CAAC,CAC3C,CAAC,CAED,GAAIH,OAAO,EAAI,CAACC,gBAAgB,CAAE,CAChC,mBACEZ,IAAA,CAACG,mBAAmB,EAAAoB,QAAA,cAClBvB,IAAA,CAACO,cAAc,EAAAgB,QAAA,CAAC,eAAa,CAAgB,CAAC,CAC3B,CAAC,CAE1B,CAEA,mBACErB,KAAA,CAACC,mBAAmB,EAAAoB,QAAA,eAClBvB,IAAA,CAACK,KAAK,EAAAkB,QAAA,CAAC,qBAAmB,CAAO,CAAC,CACjCR,cAAc,cACbf,IAAA,CAACQ,cAAc,EAAAe,QAAA,CAAC,gDAEhB,CAAgB,CAAC,cAEjBvB,IAAA,CAACL,UAAU,EAAC6B,SAAS,CAAEH,mBAAoB,CAAE,CAC9C,EACkB,CAAC,CAE1B,CAAC,CAED,cAAe,CAAAZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}