{"ast":null,"code":"import{useEffect,useRef,useState}from'react';const useInfiniteScroll=_ref=>{let{loading,hasMore,onLoadMore,threshold=100}=_ref;const[infiniteScrollRef,setInfiniteScrollRef]=useState(null);const observerRef=useRef();useEffect(()=>{if(loading||!hasMore)return;const observer=new IntersectionObserver(entries=>{const[entry]=entries;if(entry.isIntersecting){onLoadMore();}},{root:null,rootMargin:`${threshold}px`,threshold:0.1});if(infiniteScrollRef){observer.observe(infiniteScrollRef);}observerRef.current=observer;return()=>{if(observerRef.current){observerRef.current.disconnect();}};},[infiniteScrollRef,loading,hasMore,onLoadMore,threshold]);return[setInfiniteScrollRef];};export default useInfiniteScroll;","map":{"version":3,"names":["useEffect","useRef","useState","useInfiniteScroll","_ref","loading","hasMore","onLoadMore","threshold","infiniteScrollRef","setInfiniteScrollRef","observerRef","observer","IntersectionObserver","entries","entry","isIntersecting","root","rootMargin","observe","current","disconnect"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokerstar-apk/src/hooks/useInfiniteScroll.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nconst useInfiniteScroll = ({ loading, hasMore, onLoadMore, threshold = 100 }) => {\n  const [infiniteScrollRef, setInfiniteScrollRef] = useState(null);\n  const observerRef = useRef();\n\n  useEffect(() => {\n    if (loading || !hasMore) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const [entry] = entries;\n        if (entry.isIntersecting) {\n          onLoadMore();\n        }\n      },\n      {\n        root: null,\n        rootMargin: `${threshold}px`,\n        threshold: 0.1,\n      }\n    );\n\n    if (infiniteScrollRef) {\n      observer.observe(infiniteScrollRef);\n    }\n\n    observerRef.current = observer;\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [infiniteScrollRef, loading, hasMore, onLoadMore, threshold]);\n\n  return [setInfiniteScrollRef];\n};\n\nexport default useInfiniteScroll;"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAEnD,KAAM,CAAAC,iBAAiB,CAAGC,IAAA,EAAuD,IAAtD,CAAEC,OAAO,CAAEC,OAAO,CAAEC,UAAU,CAAEC,SAAS,CAAG,GAAI,CAAC,CAAAJ,IAAA,CAC1E,KAAM,CAACK,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAChE,KAAM,CAAAS,WAAW,CAAGV,MAAM,CAAC,CAAC,CAE5BD,SAAS,CAAC,IAAM,CACd,GAAIK,OAAO,EAAI,CAACC,OAAO,CAAE,OAEzB,KAAM,CAAAM,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACtCC,OAAO,EAAK,CACX,KAAM,CAACC,KAAK,CAAC,CAAGD,OAAO,CACvB,GAAIC,KAAK,CAACC,cAAc,CAAE,CACxBT,UAAU,CAAC,CAAC,CACd,CACF,CAAC,CACD,CACEU,IAAI,CAAE,IAAI,CACVC,UAAU,CAAE,GAAGV,SAAS,IAAI,CAC5BA,SAAS,CAAE,GACb,CACF,CAAC,CAED,GAAIC,iBAAiB,CAAE,CACrBG,QAAQ,CAACO,OAAO,CAACV,iBAAiB,CAAC,CACrC,CAEAE,WAAW,CAACS,OAAO,CAAGR,QAAQ,CAE9B,MAAO,IAAM,CACX,GAAID,WAAW,CAACS,OAAO,CAAE,CACvBT,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC,CAAC,CAClC,CACF,CAAC,CACH,CAAC,CAAE,CAACZ,iBAAiB,CAAEJ,OAAO,CAAEC,OAAO,CAAEC,UAAU,CAAEC,SAAS,CAAC,CAAC,CAEhE,MAAO,CAACE,oBAAoB,CAAC,CAC/B,CAAC,CAED,cAAe,CAAAP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}