{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n  -webkit-overflow-scrolling: touch;\n  background: #000;\n`;const MemeSlide=styled.div`\n  width: 100%;\n  height: 100vh;\n  scroll-snap-align: start;\n  position: relative;\n  background: #000;\n`;const ProgressIndicator=styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 8px;\n  z-index: 100;\n`;const ProgressDot=styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props=>props.$active?'#fff':'rgba(255,255,255,0.3)'};\n  transition: all 0.3s ease;\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const{user,logout}=useAuth();const navigate=useNavigate();const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleMemeDeleted=deletedMemeId=>{setMemes(prevMemes=>prevMemes.filter(meme=>meme._id!==deletedMemeId));};useEffect(()=>{fetchMemes();},[]);if(loading){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsxs(FeedContainer,{children:[/*#__PURE__*/_jsx(ProgressIndicator,{children:memes.map((_,index)=>/*#__PURE__*/_jsx(ProgressDot,{$active:currentIndex===index},index))}),memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeSlide,{children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,isFullScreen:true,onDelete:handleMemeDeleted,onScroll:direction=>{if(direction==='up'&&index>0)setCurrentIndex(index-1);if(direction==='down'&&index<memes.length-1)setCurrentIndex(index+1);}})},meme._id))]});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","styled","api","MemeCard","useAuth","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","MemeSlide","ProgressIndicator","ProgressDot","props","$active","FeedPage","memes","setMemes","loading","setLoading","error","setError","user","logout","navigate","useNavigate","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleMemeDeleted","deletedMemeId","prevMemes","_id","children","LoadingIndicator","ErrorMessage","onClick","map","_","index","currentIndex","isFullScreen","onDelete","onScroll","direction","setCurrentIndex","length"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n  -webkit-overflow-scrolling: touch;\n  background: #000;\n`;\n\nconst MemeSlide = styled.div`\n  width: 100%;\n  height: 100vh;\n  scroll-snap-align: start;\n  position: relative;\n  background: #000;\n`;\n\nconst ProgressIndicator = styled.div`\n  position: fixed;\n  top: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 8px;\n  z-index: 100;\n`;\n\nconst ProgressDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: ${props => props.$active ? '#fff' : 'rgba(255,255,255,0.3)'};\n  transition: all 0.3s ease;\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n      \n      const validMemes = Array.isArray(data?.data) \n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n      \n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prevMemes => prevMemes.filter(meme => meme._id !== deletedMemeId));\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return (\n      <FeedContainer>\n        <LoadingIndicator>Carregando...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer>\n        <ErrorMessage>\n          {error}\n          <button onClick={fetchMemes}>\n            <FiRefreshCw /> Tentar novamente\n          </button>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer>\n      <ProgressIndicator>\n        {memes.map((_, index) => (\n          <ProgressDot key={index} $active={currentIndex === index} />\n        ))}\n      </ProgressIndicator>\n\n      {memes.map((meme, index) => (\n        <MemeSlide key={meme._id}>\n          <MemeCard \n            meme={meme}\n            isFullScreen\n            onDelete={handleMemeDeleted}\n            onScroll={(direction) => {\n              if(direction === 'up' && index > 0) setCurrentIndex(index - 1);\n              if(direction === 'down' && index < memes.length - 1) setCurrentIndex(index + 1);\n            }}\n          />\n        </MemeSlide>\n      ))}\n    </FeedContainer>\n  );\n};\n\nexport default FeedPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}