{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const{logout}=useAuth();const navigate=useNavigate();useEffect(()=>{const fetchMemes=async()=>{try{const{data}=await api.get('/memes');setMemes(data);}catch(error){console.error('Erro ao carregar feed:',error);if(error.response&&error.response.status===401){// Se o token é inválido ou expirou, desloga e manda pro login\nawait logout();navigate('/login');}}finally{setLoading(false);}};fetchMemes();},[logout,navigate]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Carregando...\"});return/*#__PURE__*/_jsxs(FeedContainer,{children:[/*#__PURE__*/_jsx(UploadButton,{}),/*#__PURE__*/_jsx(\"div\",{className:\"feed-list\",children:memes.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Nenhuma postagem encontrada. Que tal criar a primeira?\"}):memes.map(meme=>/*#__PURE__*/_jsx(MemeCard,{meme:meme},meme._id))})]});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","styled","api","MemeCard","UploadButton","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedPage","memes","setMemes","loading","setLoading","logout","navigate","fetchMemes","data","get","error","console","response","status","children","className","length","map","meme","_id"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport api from '../services/api';\r\nimport MemeCard from '../components/MemeCard';\r\nimport UploadButton from '../components/UploadButton';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst FeedContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst FeedPage = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const { logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchMemes = async () => {\r\n      try {\r\n        const { data } = await api.get('/memes');\r\n        setMemes(data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar feed:', error);\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          // Se o token é inválido ou expirou, desloga e manda pro login\r\n          await logout();\r\n          navigate('/login');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMemes();\r\n  }, [logout, navigate]);\r\n\r\n  if (loading) return <div>Carregando...</div>;\r\n\r\n  return (\r\n    <FeedContainer>\r\n      <UploadButton />\r\n      \r\n      <div className=\"feed-list\">\r\n        {memes.length === 0 ? (\r\n          <p>Nenhuma postagem encontrada. Que tal criar a primeira?</p>\r\n        ) : (\r\n          memes.map(meme => (\r\n            <MemeCard key={meme._id} meme={meme} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </FeedContainer>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,aAAa,CAAGV,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAEmB,MAAO,CAAC,CAAGZ,OAAO,CAAC,CAAC,CAC5B,KAAM,CAAAa,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9BL,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAnB,GAAG,CAACoB,GAAG,CAAC,QAAQ,CAAC,CACxCP,QAAQ,CAACM,IAAI,CAAC,CAChB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAE9C,GAAIA,KAAK,CAACE,QAAQ,EAAIF,KAAK,CAACE,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CACnD;AACA,KAAM,CAAAR,MAAM,CAAC,CAAC,CACdC,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACF,MAAM,CAAEC,QAAQ,CAAC,CAAC,CAEtB,GAAIH,OAAO,CAAE,mBAAOR,IAAA,QAAAmB,QAAA,CAAK,eAAa,CAAK,CAAC,CAE5C,mBACEjB,KAAA,CAACC,aAAa,EAAAgB,QAAA,eACZnB,IAAA,CAACJ,YAAY,GAAE,CAAC,cAEhBI,IAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAD,QAAA,CACvBb,KAAK,CAACe,MAAM,GAAK,CAAC,cACjBrB,IAAA,MAAAmB,QAAA,CAAG,wDAAsD,CAAG,CAAC,CAE7Db,KAAK,CAACgB,GAAG,CAACC,IAAI,eACZvB,IAAA,CAACL,QAAQ,EAAgB4B,IAAI,CAAEA,IAAK,EAArBA,IAAI,CAACC,GAAkB,CACvC,CACF,CACE,CAAC,EACO,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}