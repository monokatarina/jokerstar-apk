{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  const location = useLocation(); // Captura a rota que o usuário tentou acessar\n  if (!initialCheckDone || loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verificando autentica\\xE7\\xE3o...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    console.warn('[PrivateRoute] Usuário não autenticado. Redirecionando para login...');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true,\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"zPafkKLdz6KrRvMe2id3iDpNU34=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","loading","location","initialCheckDone","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","console","warn","to","replace","state","from","_c","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/PrivateRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n  const location = useLocation(); // Captura a rota que o usuário tentou acessar\r\n  if (!initialCheckDone || loading) {\r\n    return <div>Carregando...</div>;\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div style={{ textAlign: 'center', marginTop: '50px' }}>\r\n        <h2>Verificando autenticação...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    console.warn('[PrivateRoute] Usuário não autenticado. Redirecionando para login...');\r\n    return <Navigate to=\"/login\" replace state={{ from: location }} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EACnC,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,IAAI,CAACU,gBAAgB,IAAIF,OAAO,EAAE;IAChC,oBAAOL,OAAA;MAAAE,QAAA,EAAK;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EACA,IAAIN,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKY,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAZ,QAAA,eACrDF,OAAA;QAAAE,QAAA,EAAI;MAA2B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;EAEA,IAAI,CAACP,IAAI,EAAE;IACTW,OAAO,CAACC,IAAI,CAAC,sEAAsE,CAAC;IACpF,oBAAOhB,OAAA,CAACJ,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEd;MAAS;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAOT,QAAQ;AACjB,CAAC;AAACC,EAAA,CApBIF,YAAY;EAAA,QACUH,OAAO,EAChBD,WAAW;AAAA;AAAAwB,EAAA,GAFxBpB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}