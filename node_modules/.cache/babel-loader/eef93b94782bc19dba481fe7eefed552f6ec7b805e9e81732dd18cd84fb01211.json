{"ast":null,"code":"/*! Capacitor: https://capacitorjs.com/ - MIT License */\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n  constructor(message, code, data) {\n    super(message);\n    this.message = message;\n    this.code = code;\n    this.data = data;\n  }\n}\nconst getPlatformId = win => {\n  var _a, _b;\n  if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n    return 'android';\n  } else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n    return 'ios';\n  } else {\n    return 'web';\n  }\n};\nconst createCapacitor = win => {\n  const capCustomPlatform = win.CapacitorCustomPlatform || null;\n  const cap = win.Capacitor || {};\n  const Plugins = cap.Plugins = cap.Plugins || {};\n  const getPlatform = () => {\n    return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);\n  };\n  const isNativePlatform = () => getPlatform() !== 'web';\n  const isPluginAvailable = pluginName => {\n    const plugin = registeredPlugins.get(pluginName);\n    if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n      // JS implementation available for the current platform.\n      return true;\n    }\n    if (getPluginHeader(pluginName)) {\n      // Native implementation available.\n      return true;\n    }\n    return false;\n  };\n  const getPluginHeader = pluginName => {\n    var _a;\n    return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName);\n  };\n  const handleError = err => win.console.error(err);\n  const registeredPlugins = new Map();\n  const registerPlugin = function (pluginName) {\n    let jsImplementations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const registeredPlugin = registeredPlugins.get(pluginName);\n    if (registeredPlugin) {\n      console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n      return registeredPlugin.proxy;\n    }\n    const platform = getPlatform();\n    const pluginHeader = getPluginHeader(pluginName);\n    let jsImplementation;\n    const loadPluginImplementation = async () => {\n      if (!jsImplementation && platform in jsImplementations) {\n        jsImplementation = typeof jsImplementations[platform] === 'function' ? jsImplementation = await jsImplementations[platform]() : jsImplementation = jsImplementations[platform];\n      } else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {\n        jsImplementation = typeof jsImplementations['web'] === 'function' ? jsImplementation = await jsImplementations['web']() : jsImplementation = jsImplementations['web'];\n      }\n      return jsImplementation;\n    };\n    const createPluginMethod = (impl, prop) => {\n      var _a, _b;\n      if (pluginHeader) {\n        const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n        if (methodHeader) {\n          if (methodHeader.rtype === 'promise') {\n            return options => cap.nativePromise(pluginName, prop.toString(), options);\n          } else {\n            return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n          }\n        } else if (impl) {\n          return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n        }\n      } else if (impl) {\n        return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n      } else {\n        throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n      }\n    };\n    const createPluginMethodWrapper = prop => {\n      let remove;\n      const wrapper = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        const p = loadPluginImplementation().then(impl => {\n          const fn = createPluginMethod(impl, prop);\n          if (fn) {\n            const p = fn(...args);\n            remove = p === null || p === void 0 ? void 0 : p.remove;\n            return p;\n          } else {\n            throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n          }\n        });\n        if (prop === 'addListener') {\n          p.remove = async () => remove();\n        }\n        return p;\n      };\n      // Some flair ✨\n      wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n      Object.defineProperty(wrapper, 'name', {\n        value: prop,\n        writable: false,\n        configurable: false\n      });\n      return wrapper;\n    };\n    const addListener = createPluginMethodWrapper('addListener');\n    const removeListener = createPluginMethodWrapper('removeListener');\n    const addListenerNative = (eventName, callback) => {\n      const call = addListener({\n        eventName\n      }, callback);\n      const remove = async () => {\n        const callbackId = await call;\n        removeListener({\n          eventName,\n          callbackId\n        }, callback);\n      };\n      const p = new Promise(resolve => call.then(() => resolve({\n        remove\n      })));\n      p.remove = async () => {\n        console.warn(`Using addListener() without 'await' is deprecated.`);\n        await remove();\n      };\n      return p;\n    };\n    const proxy = new Proxy({}, {\n      get(_, prop) {\n        switch (prop) {\n          // https://github.com/facebook/react/issues/20030\n          case '$$typeof':\n            return undefined;\n          case 'toJSON':\n            return () => ({});\n          case 'addListener':\n            return pluginHeader ? addListenerNative : addListener;\n          case 'removeListener':\n            return removeListener;\n          default:\n            return createPluginMethodWrapper(prop);\n        }\n      }\n    });\n    Plugins[pluginName] = proxy;\n    registeredPlugins.set(pluginName, {\n      name: pluginName,\n      proxy,\n      platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])])\n    });\n    return proxy;\n  };\n  // Add in convertFileSrc for web, it will already be available in native context\n  if (!cap.convertFileSrc) {\n    cap.convertFileSrc = filePath => filePath;\n  }\n  cap.getPlatform = getPlatform;\n  cap.handleError = handleError;\n  cap.isNativePlatform = isNativePlatform;\n  cap.isPluginAvailable = isPluginAvailable;\n  cap.registerPlugin = registerPlugin;\n  cap.Exception = CapacitorException;\n  cap.DEBUG = !!cap.DEBUG;\n  cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n  return cap;\n};\nconst initCapacitorGlobal = win => win.Capacitor = createCapacitor(win);\nconst Capacitor = /*#__PURE__*/initCapacitorGlobal(typeof globalThis !== 'undefined' ? globalThis : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {});\nconst registerPlugin = Capacitor.registerPlugin;\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n  constructor() {\n    this.listeners = {};\n    this.retainedEventArguments = {};\n    this.windowListeners = {};\n  }\n  addListener(eventName, listenerFunc) {\n    let firstListener = false;\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      this.listeners[eventName] = [];\n      firstListener = true;\n    }\n    this.listeners[eventName].push(listenerFunc);\n    // If we haven't added a window listener for this event and it requires one,\n    // go ahead and add it\n    const windowListener = this.windowListeners[eventName];\n    if (windowListener && !windowListener.registered) {\n      this.addWindowListener(windowListener);\n    }\n    if (firstListener) {\n      this.sendRetainedArgumentsForEvent(eventName);\n    }\n    const remove = async () => this.removeListener(eventName, listenerFunc);\n    const p = Promise.resolve({\n      remove\n    });\n    return p;\n  }\n  async removeAllListeners() {\n    this.listeners = {};\n    for (const listener in this.windowListeners) {\n      this.removeWindowListener(this.windowListeners[listener]);\n    }\n    this.windowListeners = {};\n  }\n  notifyListeners(eventName, data, retainUntilConsumed) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      if (retainUntilConsumed) {\n        let args = this.retainedEventArguments[eventName];\n        if (!args) {\n          args = [];\n        }\n        args.push(data);\n        this.retainedEventArguments[eventName] = args;\n      }\n      return;\n    }\n    listeners.forEach(listener => listener(data));\n  }\n  hasListeners(eventName) {\n    return !!this.listeners[eventName].length;\n  }\n  registerWindowListener(windowEventName, pluginEventName) {\n    this.windowListeners[pluginEventName] = {\n      registered: false,\n      windowEventName,\n      pluginEventName,\n      handler: event => {\n        this.notifyListeners(pluginEventName, event);\n      }\n    };\n  }\n  unimplemented() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not implemented';\n    return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n  }\n  unavailable() {\n    let msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not available';\n    return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n  }\n  async removeListener(eventName, listenerFunc) {\n    const listeners = this.listeners[eventName];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listenerFunc);\n    this.listeners[eventName].splice(index, 1);\n    // If there are no more listeners for this type of event,\n    // remove the window listener\n    if (!this.listeners[eventName].length) {\n      this.removeWindowListener(this.windowListeners[eventName]);\n    }\n  }\n  addWindowListener(handle) {\n    window.addEventListener(handle.windowEventName, handle.handler);\n    handle.registered = true;\n  }\n  removeWindowListener(handle) {\n    if (!handle) {\n      return;\n    }\n    window.removeEventListener(handle.windowEventName, handle.handler);\n    handle.registered = false;\n  }\n  sendRetainedArgumentsForEvent(eventName) {\n    const args = this.retainedEventArguments[eventName];\n    if (!args) {\n      return;\n    }\n    delete this.retainedEventArguments[eventName];\n    args.forEach(arg => {\n      this.notifyListeners(eventName, arg);\n    });\n  }\n}\nconst WebView = /*#__PURE__*/registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = str => encodeURIComponent(str).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = str => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nclass CapacitorCookiesPluginWeb extends WebPlugin {\n  async getCookies() {\n    const cookies = document.cookie;\n    const cookieMap = {};\n    cookies.split(';').forEach(cookie => {\n      if (cookie.length <= 0) return;\n      // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n      let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n      key = decode(key).trim();\n      value = decode(value).trim();\n      cookieMap[key] = value;\n    });\n    return cookieMap;\n  }\n  async setCookie(options) {\n    try {\n      // Safely Encoded Key/Value\n      const encodedKey = encode(options.key);\n      const encodedValue = encode(options.value);\n      // Clean & sanitize options\n      const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n      const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n      const domain = options.url != null && options.url.length > 0 ? `domain=${options.url}` : '';\n      document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}; ${domain};`;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async deleteCookie(options) {\n    try {\n      document.cookie = `${options.key}=; Max-Age=0`;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async clearCookies() {\n    try {\n      const cookies = document.cookie.split(';') || [];\n      for (const cookie of cookies) {\n        document.cookie = cookie.replace(/^ +/, '').replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n  async clearAllCookies() {\n    try {\n      await this.clearCookies();\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n}\nconst CapacitorCookies = registerPlugin('CapacitorCookies', {\n  web: () => new CapacitorCookiesPluginWeb()\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nconst readBlobAsBase64 = async blob => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => {\n    const base64String = reader.result;\n    // remove prefix \"data:application/pdf;base64,\"\n    resolve(base64String.indexOf(',') >= 0 ? base64String.split(',')[1] : base64String);\n  };\n  reader.onerror = error => reject(error);\n  reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = function () {\n  let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const originalKeys = Object.keys(headers);\n  const loweredKeys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n  const normalized = loweredKeys.reduce((acc, key, index) => {\n    acc[key] = headers[originalKeys[index]];\n    return acc;\n  }, {});\n  return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = function (params) {\n  let shouldEncode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!params) return null;\n  const output = Object.entries(params).reduce((accumulator, entry) => {\n    const [key, value] = entry;\n    let encodedValue;\n    let item;\n    if (Array.isArray(value)) {\n      item = '';\n      value.forEach(str => {\n        encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n        item += `${key}=${encodedValue}&`;\n      });\n      // last character will always be \"&\" so slice it off\n      item.slice(0, -1);\n    } else {\n      encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n      item = `${key}=${encodedValue}`;\n    }\n    return `${accumulator}&${item}`;\n  }, '');\n  // Remove initial \"&\" from the reduce\n  return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nconst buildRequestInit = function (options) {\n  let extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const output = Object.assign({\n    method: options.method || 'GET',\n    headers: options.headers\n  }, extra);\n  // Get the content-type\n  const headers = normalizeHttpHeaders(options.headers);\n  const type = headers['content-type'] || '';\n  // If body is already a string, then pass it through as-is.\n  if (typeof options.data === 'string') {\n    output.body = options.data;\n  }\n  // Build request initializers based off of content-type\n  else if (type.includes('application/x-www-form-urlencoded')) {\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(options.data || {})) {\n      params.set(key, value);\n    }\n    output.body = params.toString();\n  } else if (type.includes('multipart/form-data') || options.data instanceof FormData) {\n    const form = new FormData();\n    if (options.data instanceof FormData) {\n      options.data.forEach((value, key) => {\n        form.append(key, value);\n      });\n    } else {\n      for (const key of Object.keys(options.data)) {\n        form.append(key, options.data[key]);\n      }\n    }\n    output.body = form;\n    const headers = new Headers(output.headers);\n    headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n    output.headers = headers;\n  } else if (type.includes('application/json') || typeof options.data === 'object') {\n    output.body = JSON.stringify(options.data);\n  }\n  return output;\n};\n// WEB IMPLEMENTATION\nclass CapacitorHttpPluginWeb extends WebPlugin {\n  /**\n   * Perform an Http request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async request(options) {\n    const requestInit = buildRequestInit(options, options.webFetchExtra);\n    const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n    const url = urlParams ? `${options.url}?${urlParams}` : options.url;\n    const response = await fetch(url, requestInit);\n    const contentType = response.headers.get('content-type') || '';\n    // Default to 'text' responseType so no parsing happens\n    let {\n      responseType = 'text'\n    } = response.ok ? options : {};\n    // If the response content-type is json, force the response to be json\n    if (contentType.includes('application/json')) {\n      responseType = 'json';\n    }\n    let data;\n    let blob;\n    switch (responseType) {\n      case 'arraybuffer':\n      case 'blob':\n        blob = await response.blob();\n        data = await readBlobAsBase64(blob);\n        break;\n      case 'json':\n        data = await response.json();\n        break;\n      case 'document':\n      case 'text':\n      default:\n        data = await response.text();\n    }\n    // Convert fetch headers to Capacitor HttpHeaders\n    const headers = {};\n    response.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      data,\n      headers,\n      status: response.status,\n      url: response.url\n    };\n  }\n  /**\n   * Perform an Http GET request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async get(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'GET'\n    }));\n  }\n  /**\n   * Perform an Http POST request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async post(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'POST'\n    }));\n  }\n  /**\n   * Perform an Http PUT request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async put(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'PUT'\n    }));\n  }\n  /**\n   * Perform an Http PATCH request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async patch(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'PATCH'\n    }));\n  }\n  /**\n   * Perform an Http DELETE request given a set of options\n   * @param options Options to build the HTTP request\n   */\n  async delete(options) {\n    return this.request(Object.assign(Object.assign({}, options), {\n      method: 'DELETE'\n    }));\n  }\n}\nconst CapacitorHttp = registerPlugin('CapacitorHttp', {\n  web: () => new CapacitorHttpPluginWeb()\n});\n/******** END HTTP PLUGIN ********/\n\nexport { Capacitor, CapacitorCookies, CapacitorException, CapacitorHttp, ExceptionCode, WebPlugin, WebView, buildRequestInit, registerPlugin };","map":{"version":3,"names":["ExceptionCode","CapacitorException","Error","constructor","message","code","data","getPlatformId","win","_a","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","capCustomPlatform","CapacitorCustomPlatform","cap","Capacitor","Plugins","getPlatform","name","isNativePlatform","isPluginAvailable","pluginName","plugin","registeredPlugins","get","platforms","has","getPluginHeader","PluginHeaders","find","h","handleError","err","console","error","Map","registerPlugin","jsImplementations","arguments","length","undefined","registeredPlugin","warn","proxy","platform","pluginHeader","jsImplementation","loadPluginImplementation","createPluginMethod","impl","prop","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","bind","Unimplemented","createPluginMethodWrapper","remove","wrapper","_len","args","Array","_key","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","Promise","resolve","Proxy","_","set","Set","keys","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","initCapacitorGlobal","globalThis","self","window","global","WebPlugin","listeners","retainedEventArguments","windowListeners","listenerFunc","firstListener","push","windowListener","registered","addWindowListener","sendRetainedArgumentsForEvent","removeAllListeners","listener","removeWindowListener","notifyListeners","retainUntilConsumed","forEach","hasListeners","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","arg","WebView","encode","str","encodeURIComponent","replace","decodeURIComponent","escape","decode","CapacitorCookiesPluginWeb","getCookies","cookies","document","cookie","cookieMap","split","key","trim","setCookie","encodedKey","encodedValue","expires","path","domain","url","reject","deleteCookie","clearCookies","Date","toUTCString","clearAllCookies","CapacitorCookies","web","readBlobAsBase64","blob","reader","FileReader","onload","base64String","result","onerror","readAsDataURL","normalizeHttpHeaders","headers","originalKeys","loweredKeys","map","k","toLocaleLowerCase","normalized","reduce","acc","buildUrlParams","params","shouldEncode","output","entries","accumulator","entry","item","isArray","slice","substr","buildRequestInit","extra","assign","method","type","body","includes","URLSearchParams","FormData","form","append","Headers","delete","JSON","stringify","CapacitorHttpPluginWeb","request","requestInit","webFetchExtra","urlParams","shouldEncodeUrlParams","response","fetch","contentType","responseType","ok","json","text","status","post","put","patch","CapacitorHttp"],"sources":["C:\\Users\\drrod\\OneDrive\\Área de Trabalho\\jokerstar-apk\\node_modules\\@capacitor\\core\\build\\util.js","C:\\Users\\drrod\\OneDrive\\Área de Trabalho\\jokerstar-apk\\node_modules\\@capacitor\\core\\build\\runtime.js","C:\\Users\\drrod\\OneDrive\\Área de Trabalho\\jokerstar-apk\\node_modules\\@capacitor\\core\\build\\global.js","C:\\Users\\drrod\\OneDrive\\Área de Trabalho\\jokerstar-apk\\node_modules\\@capacitor\\core\\build\\web-plugin.js","C:\\Users\\drrod\\OneDrive\\Área de Trabalho\\jokerstar-apk\\node_modules\\@capacitor\\core\\build\\core-plugins.js"],"sourcesContent":["export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.data = data;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const getPlatform = () => {\n        return capCustomPlatform !== null ? capCustomPlatform.name : getPlatformId(win);\n    };\n    const isNativePlatform = () => getPlatform() !== 'web';\n    const isPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const getPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find((h) => h.name === pluginName); };\n    const handleError = (err) => win.console.error(err);\n    const registeredPlugins = new Map();\n    const registerPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null && !jsImplementation && 'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find((m) => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then((impl) => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise((resolve) => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([...Object.keys(jsImplementations), ...(pluginHeader ? [platform] : [])]),\n        });\n        return proxy;\n    };\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = (filePath) => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor() {\n        this.listeners = {};\n        this.retainedEventArguments = {};\n        this.windowListeners = {};\n    }\n    addListener(eventName, listenerFunc) {\n        let firstListener = false;\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n            firstListener = true;\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        if (firstListener) {\n            this.sendRetainedArgumentsForEvent(eventName);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data, retainUntilConsumed) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            if (retainUntilConsumed) {\n                let args = this.retainedEventArguments[eventName];\n                if (!args) {\n                    args = [];\n                }\n                args.push(data);\n                this.retainedEventArguments[eventName] = args;\n            }\n            return;\n        }\n        listeners.forEach((listener) => listener(data));\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: (event) => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n    sendRetainedArgumentsForEvent(eventName) {\n        const args = this.retainedEventArguments[eventName];\n        if (!args) {\n            return;\n        }\n        delete this.retainedEventArguments[eventName];\n        args.forEach((arg) => {\n            this.notifyListeners(eventName, arg);\n        });\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nimport { WebPlugin } from './web-plugin';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = (str) => encodeURIComponent(str)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = (str) => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nexport class CapacitorCookiesPluginWeb extends WebPlugin {\n    async getCookies() {\n        const cookies = document.cookie;\n        const cookieMap = {};\n        cookies.split(';').forEach((cookie) => {\n            if (cookie.length <= 0)\n                return;\n            // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n            let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n            key = decode(key).trim();\n            value = decode(value).trim();\n            cookieMap[key] = value;\n        });\n        return cookieMap;\n    }\n    async setCookie(options) {\n        try {\n            // Safely Encoded Key/Value\n            const encodedKey = encode(options.key);\n            const encodedValue = encode(options.value);\n            // Clean & sanitize options\n            const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n            const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n            const domain = options.url != null && options.url.length > 0 ? `domain=${options.url}` : '';\n            document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}; ${domain};`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async deleteCookie(options) {\n        try {\n            document.cookie = `${options.key}=; Max-Age=0`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearCookies() {\n        try {\n            const cookies = document.cookie.split(';') || [];\n            for (const cookie of cookies) {\n                document.cookie = cookie.replace(/^ +/, '').replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearAllCookies() {\n        try {\n            await this.clearCookies();\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\nexport const CapacitorCookies = registerPlugin('CapacitorCookies', {\n    web: () => new CapacitorCookiesPluginWeb(),\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nexport const readBlobAsBase64 = async (blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        const base64String = reader.result;\n        // remove prefix \"data:application/pdf;base64,\"\n        resolve(base64String.indexOf(',') >= 0 ? base64String.split(',')[1] : base64String);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = (headers = {}) => {\n    const originalKeys = Object.keys(headers);\n    const loweredKeys = Object.keys(headers).map((k) => k.toLocaleLowerCase());\n    const normalized = loweredKeys.reduce((acc, key, index) => {\n        acc[key] = headers[originalKeys[index]];\n        return acc;\n    }, {});\n    return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = (params, shouldEncode = true) => {\n    if (!params)\n        return null;\n    const output = Object.entries(params).reduce((accumulator, entry) => {\n        const [key, value] = entry;\n        let encodedValue;\n        let item;\n        if (Array.isArray(value)) {\n            item = '';\n            value.forEach((str) => {\n                encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n                item += `${key}=${encodedValue}&`;\n            });\n            // last character will always be \"&\" so slice it off\n            item.slice(0, -1);\n        }\n        else {\n            encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n            item = `${key}=${encodedValue}`;\n        }\n        return `${accumulator}&${item}`;\n    }, '');\n    // Remove initial \"&\" from the reduce\n    return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nexport const buildRequestInit = (options, extra = {}) => {\n    const output = Object.assign({ method: options.method || 'GET', headers: options.headers }, extra);\n    // Get the content-type\n    const headers = normalizeHttpHeaders(options.headers);\n    const type = headers['content-type'] || '';\n    // If body is already a string, then pass it through as-is.\n    if (typeof options.data === 'string') {\n        output.body = options.data;\n    }\n    // Build request initializers based off of content-type\n    else if (type.includes('application/x-www-form-urlencoded')) {\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(options.data || {})) {\n            params.set(key, value);\n        }\n        output.body = params.toString();\n    }\n    else if (type.includes('multipart/form-data') || options.data instanceof FormData) {\n        const form = new FormData();\n        if (options.data instanceof FormData) {\n            options.data.forEach((value, key) => {\n                form.append(key, value);\n            });\n        }\n        else {\n            for (const key of Object.keys(options.data)) {\n                form.append(key, options.data[key]);\n            }\n        }\n        output.body = form;\n        const headers = new Headers(output.headers);\n        headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n        output.headers = headers;\n    }\n    else if (type.includes('application/json') || typeof options.data === 'object') {\n        output.body = JSON.stringify(options.data);\n    }\n    return output;\n};\n// WEB IMPLEMENTATION\nexport class CapacitorHttpPluginWeb extends WebPlugin {\n    /**\n     * Perform an Http request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async request(options) {\n        const requestInit = buildRequestInit(options, options.webFetchExtra);\n        const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n        const url = urlParams ? `${options.url}?${urlParams}` : options.url;\n        const response = await fetch(url, requestInit);\n        const contentType = response.headers.get('content-type') || '';\n        // Default to 'text' responseType so no parsing happens\n        let { responseType = 'text' } = response.ok ? options : {};\n        // If the response content-type is json, force the response to be json\n        if (contentType.includes('application/json')) {\n            responseType = 'json';\n        }\n        let data;\n        let blob;\n        switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n                blob = await response.blob();\n                data = await readBlobAsBase64(blob);\n                break;\n            case 'json':\n                data = await response.json();\n                break;\n            case 'document':\n            case 'text':\n            default:\n                data = await response.text();\n        }\n        // Convert fetch headers to Capacitor HttpHeaders\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            data,\n            headers,\n            status: response.status,\n            url: response.url,\n        };\n    }\n    /**\n     * Perform an Http GET request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async get(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'GET' }));\n    }\n    /**\n     * Perform an Http POST request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async post(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'POST' }));\n    }\n    /**\n     * Perform an Http PUT request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async put(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PUT' }));\n    }\n    /**\n     * Perform an Http PATCH request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async patch(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PATCH' }));\n    }\n    /**\n     * Perform an Http DELETE request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async delete(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'DELETE' }));\n    }\n}\nexport const CapacitorHttp = registerPlugin('CapacitorHttp', {\n    web: () => new CapacitorHttpPluginWeb(),\n});\n/******** END HTTP PLUGIN ********/\n//# sourceMappingURL=core-plugins.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}