{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\profile\\\\UserMemes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes, css } from 'styled-components';\nimport { FiMessageSquare, FiRepeat } from 'react-icons/fi';\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport CommentSection from './CommentSection';\nimport { useNavigate, useParams } from 'react-router-dom';\n\n// Animações premium\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pulse = keyframes`\n  0% { transform: scale(1); opacity: 1; }\n  50% { transform: scale(1.1); opacity: 0.8; }\n  100% { transform: scale(1); opacity: 1; }\n`;\nconst float = keyframes`\n  0% { transform: translateY(0px); }\n  50% { transform: translateY(-5px); }\n  100% { transform: translateY(0px); }\n`;\nconst glow = keyframes`\n  0% { box-shadow: 0 0 5px rgba(255, 69, 0, 0.5); }\n  50% { box-shadow: 0 0 20px rgba(255, 69, 0, 0.8); }\n  100% { box-shadow: 0 0 5px rgba(255, 69, 0, 0.5); }\n`;\n\n// Estilos premium\nconst PremiumCard = styled.div`\n  background: #ffffff;\n  border-radius: 20px;\n  margin-bottom: 30px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  position: relative;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);\n  }\n\n  ${props => props.$isOwner && css`\n    border-left: 5px solid #ff4500;\n  `}\n`;\n_c = PremiumCard;\nconst PremiumHeader = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 18px 22px;\n  position: relative;\n`;\n_c2 = PremiumHeader;\nconst PremiumAvatar = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 15px;\n  background: ${props => props.$gradient || 'linear-gradient(135deg, #ff4500, #ff8c00)'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n  font-size: 1.2rem;\n  cursor: pointer;\n  transition: all 0.3s;\n  overflow: hidden;\n  border: 3px solid white;\n  box-shadow: 0 3px 10px rgba(0,0,0,0.1);\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n    animation: ${float} 2s ease-in-out infinite;\n  }\n`;\n_c3 = PremiumAvatar;\nconst PremiumUsername = styled.span`\n  font-weight: 700;\n  font-size: 1.1rem;\n  color: #333;\n  transition: all 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    color: #ff4500;\n    text-decoration: underline;\n  }\n`;\n_c4 = PremiumUsername;\nconst PremiumMediaContainer = styled.div`\n  width: 100%;\n  min-height: 350px;\n  background: linear-gradient(to bottom, #f9f9f9, #f0f0f0);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  \n  img, video {\n    max-width: 100%;\n    max-height: 550px;\n    display: block;\n    object-fit: contain;\n    border-radius: 5px;\n    transition: transform 0.3s;\n  }\n\n  &:hover img, &:hover video {\n    transform: scale(1.02);\n  }\n`;\n_c5 = PremiumMediaContainer;\nconst PremiumCaption = styled.p`\n  padding: 18px 22px;\n  margin: 0;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #444;\n  border-bottom: ${props => props.$hasTags ? '1px solid #f0f0f0' : 'none'};\n`;\n_c6 = PremiumCaption;\nconst PremiumTags = styled.div`\n  padding: 15px 22px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n_c7 = PremiumTags;\nconst PremiumTag = styled.span`\n  color: #ff4500;\n  font-size: 0.85rem;\n  background: rgba(255, 69, 0, 0.1);\n  padding: 6px 12px;\n  border-radius: 20px;\n  transition: all 0.2s;\n\n  &:hover {\n    background: rgba(255, 69, 0, 0.2);\n    transform: translateY(-2px);\n  }\n`;\n_c8 = PremiumTag;\nconst PremiumActions = styled.div`\n  display: flex;\n  padding: 12px 22px;\n  border-top: 1px solid #f0f0f0;\n  background: #fafafa;\n`;\n_c9 = PremiumActions;\nconst PremiumActionButton = styled.button`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin-right: 25px;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.95rem;\n  transition: all 0.2s;\n  position: relative;\n  \n  svg {\n    margin-right: 8px;\n    font-size: 1.4rem;\n    transition: all 0.2s;\n  }\n\n  .count {\n    font-weight: ${props => props.$active ? 'bold' : 'normal'};\n  }\n\n  &:hover {\n    color: #ff4500;\n    transform: translateY(-2px);\n\n    svg {\n      transform: scale(1.1);\n    }\n  }\n\n  ${props => props.$disabled && css`\n    opacity: 0.5;\n    pointer-events: none;\n  `}\n`;\n_c10 = PremiumActionButton;\nconst RepostBadge = styled.div`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  background: rgba(255, 69, 0, 0.9);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 12px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n\n  svg {\n    margin-right: 5px;\n  }\n`;\n_c11 = RepostBadge;\nconst MemeCard = ({\n  meme\n}) => {\n  _s();\n  var _meme$likes, _meme$repostedBy, _meme$author3, _meme$tags, _meme$tags2;\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const [reaction, setReaction] = useState(null);\n  const [likeCount, setLikeCount] = useState(((_meme$likes = meme.likes) === null || _meme$likes === void 0 ? void 0 : _meme$likes.length) || 0);\n  const [showComments, setShowComments] = useState(false);\n  const [commentCount, setCommentCount] = useState(meme.commentCount || 0);\n  const [isReposted, setIsReposted] = useState(false);\n  const [repostCount, setRepostCount] = useState(meme.repostCount || 0);\n  const [animateLike, setAnimateLike] = useState(false);\n  const [isOwner, setIsOwner] = useState(false);\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    var _meme$likes2;\n    const checkOwnership = () => {\n      setIsOwner(user && meme.author && user._id === meme.author._id);\n    };\n    const fetchUserMemes = async () => {\n      try {\n        if (userId) {\n          const {\n            data\n          } = await api.get(`/users/${userId}/memes?includeReposts=true`);\n          setMemes(data);\n        }\n      } catch (error) {\n        console.error('Error fetching user memes:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkOwnership();\n    fetchUserMemes();\n    if (user && meme.likes) {\n      setReaction(meme.likes.some(like => like.toString() === user._id) ? 'like' : null);\n    }\n    setLikeCount(((_meme$likes2 = meme.likes) === null || _meme$likes2 === void 0 ? void 0 : _meme$likes2.length) || 0);\n    setCommentCount(meme.commentCount || 0);\n    setRepostCount(meme.repostCount || 0);\n    checkIfReposted();\n  }, [meme, user, userId]);\n  const checkIfReposted = async () => {\n    try {\n      const response = await api.get(`/memes/${meme._id}/reposted-by-me`);\n      setIsReposted(response.data.isReposted);\n    } catch (error) {\n      console.error('Erro ao verificar repost:', error);\n    }\n  };\n  const handleReaction = async () => {\n    if (!user) return;\n    try {\n      if (reaction === 'like') {\n        await api.post(`/memes/${meme._id}/unlike`);\n        setReaction(null);\n        setLikeCount(prev => prev - 1);\n      } else {\n        await api.post(`/memes/${meme._id}/like`);\n        setReaction('like');\n        setLikeCount(prev => prev + 1);\n      }\n      setAnimateLike(true);\n      setTimeout(() => setAnimateLike(false), 600);\n    } catch (error) {\n      console.error('Erro ao curtir:', error);\n    }\n  };\n  const handleRepost = async () => {\n    if (!user || isOwner) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/repost`);\n      setIsReposted(response.data.isReposted);\n      setRepostCount(response.data.repostCount);\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n    }\n  };\n  const handleCommentSubmit = async text => {\n    try {\n      await api.post(`/memes/${meme._id}/comments`, {\n        text\n      });\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\n      setCommentCount(updatedMeme.data.commentCount || 0);\n      setShowComments(true);\n    } catch (error) {\n      console.error('Erro ao comentar:', error);\n      throw error;\n    }\n  };\n  const getAvatarContent = () => {\n    var _meme$author, _meme$author$profile, _meme$author2, _meme$author2$usernam;\n    if ((_meme$author = meme.author) !== null && _meme$author !== void 0 && (_meme$author$profile = _meme$author.profile) !== null && _meme$author$profile !== void 0 && _meme$author$profile.avatar) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.author.profile.avatar}`,\n        alt: meme.author.username,\n        onError: e => {\n          e.target.src = '';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 14\n      }, this);\n    }\n    return ((_meme$author2 = meme.author) === null || _meme$author2 === void 0 ? void 0 : (_meme$author2$usernam = _meme$author2.username) === null || _meme$author2$usernam === void 0 ? void 0 : _meme$author2$usernam.charAt(0).toUpperCase()) || 'U';\n  };\n  return /*#__PURE__*/_jsxDEV(PremiumCard, {\n    $isOwner: isOwner,\n    children: [meme.isRepost && /*#__PURE__*/_jsxDEV(RepostBadge, {\n      children: [/*#__PURE__*/_jsxDEV(FiRepeat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), \" Repostado por @\", ((_meme$repostedBy = meme.repostedBy) === null || _meme$repostedBy === void 0 ? void 0 : _meme$repostedBy.username) || 'usuário']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PremiumHeader, {\n      children: [/*#__PURE__*/_jsxDEV(PremiumAvatar, {\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        $gradient: isOwner ? 'linear-gradient(135deg, #ff4500, #ff8c00)' : 'linear-gradient(135deg, #4e54c8, #8f94fb)',\n        children: getAvatarContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PremiumUsername, {\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        children: [\"@\", ((_meme$author3 = meme.author) === null || _meme$author3 === void 0 ? void 0 : _meme$author3.username) || 'usuário desconhecido']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PremiumMediaContainer, {\n      children: meme.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`,\n        alt: meme.caption || 'Meme image',\n        onError: e => {\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), meme.caption && /*#__PURE__*/_jsxDEV(PremiumCaption, {\n      $hasTags: ((_meme$tags = meme.tags) === null || _meme$tags === void 0 ? void 0 : _meme$tags.length) > 0,\n      children: meme.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 24\n    }, this), ((_meme$tags2 = meme.tags) === null || _meme$tags2 === void 0 ? void 0 : _meme$tags2.length) > 0 && /*#__PURE__*/_jsxDEV(PremiumTags, {\n      children: meme.tags.map(tag => /*#__PURE__*/_jsxDEV(PremiumTag, {\n        children: [\"#\", tag]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PremiumActions, {\n      children: [/*#__PURE__*/_jsxDEV(PremiumActionButton, {\n        onClick: handleReaction,\n        $active: reaction === 'like',\n        style: {\n          animation: animateLike ? `${pulse} 0.6s ease` : 'none'\n        },\n        children: [reaction === 'like' ? /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(FaRegHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: likeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PremiumActionButton, {\n        onClick: () => setShowComments(!showComments),\n        $active: showComments,\n        children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: commentCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PremiumActionButton, {\n        onClick: handleRepost,\n        $active: isReposted,\n        $disabled: isOwner,\n        title: isOwner ? \"Você não pode repostar seu próprio meme\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(FiRepeat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"count\",\n          children: repostCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentSection, {\n      memeId: meme._id,\n      onCommentSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeCard, \"p1hBRLfg5DiyA4OdUtr0ckuUjlw=\", false, function () {\n  return [useNavigate, useParams, useAuth];\n});\n_c12 = MemeCard;\nexport default MemeCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"PremiumCard\");\n$RefreshReg$(_c2, \"PremiumHeader\");\n$RefreshReg$(_c3, \"PremiumAvatar\");\n$RefreshReg$(_c4, \"PremiumUsername\");\n$RefreshReg$(_c5, \"PremiumMediaContainer\");\n$RefreshReg$(_c6, \"PremiumCaption\");\n$RefreshReg$(_c7, \"PremiumTags\");\n$RefreshReg$(_c8, \"PremiumTag\");\n$RefreshReg$(_c9, \"PremiumActions\");\n$RefreshReg$(_c10, \"PremiumActionButton\");\n$RefreshReg$(_c11, \"RepostBadge\");\n$RefreshReg$(_c12, \"MemeCard\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","css","FiMessageSquare","FiRepeat","FaHeart","FaRegHeart","api","useAuth","CommentSection","useNavigate","useParams","jsxDEV","_jsxDEV","pulse","float","glow","PremiumCard","div","props","$isOwner","_c","PremiumHeader","_c2","PremiumAvatar","$gradient","_c3","PremiumUsername","span","_c4","PremiumMediaContainer","_c5","PremiumCaption","p","$hasTags","_c6","PremiumTags","_c7","PremiumTag","_c8","PremiumActions","_c9","PremiumActionButton","button","$active","$disabled","_c10","RepostBadge","_c11","MemeCard","meme","_s","_meme$likes","_meme$repostedBy","_meme$author3","_meme$tags","_meme$tags2","navigate","userId","user","reaction","setReaction","likeCount","setLikeCount","likes","length","showComments","setShowComments","commentCount","setCommentCount","isReposted","setIsReposted","repostCount","setRepostCount","animateLike","setAnimateLike","isOwner","setIsOwner","memes","setMemes","loading","setLoading","_meme$likes2","checkOwnership","author","_id","fetchUserMemes","data","get","error","console","some","like","toString","checkIfReposted","response","handleReaction","post","prev","setTimeout","handleRepost","handleCommentSubmit","text","updatedMeme","getAvatarContent","_meme$author","_meme$author$profile","_meme$author2","_meme$author2$usernam","profile","avatar","src","process","env","REACT_APP_API_URL","alt","username","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","children","isRepost","repostedBy","onClick","mediaType","mediaUrl","caption","controls","tags","map","tag","style","animation","className","title","memeId","onCommentSubmit","_c12","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/profile/UserMemes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport { FiMessageSquare, FiRepeat } from 'react-icons/fi';\r\nimport { FaHeart, FaRegHeart } from 'react-icons/fa';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport CommentSection from './CommentSection';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\n// Animações premium\r\nconst pulse = keyframes`\r\n  0% { transform: scale(1); opacity: 1; }\r\n  50% { transform: scale(1.1); opacity: 0.8; }\r\n  100% { transform: scale(1); opacity: 1; }\r\n`;\r\n\r\nconst float = keyframes`\r\n  0% { transform: translateY(0px); }\r\n  50% { transform: translateY(-5px); }\r\n  100% { transform: translateY(0px); }\r\n`;\r\n\r\nconst glow = keyframes`\r\n  0% { box-shadow: 0 0 5px rgba(255, 69, 0, 0.5); }\r\n  50% { box-shadow: 0 0 20px rgba(255, 69, 0, 0.8); }\r\n  100% { box-shadow: 0 0 5px rgba(255, 69, 0, 0.5); }\r\n`;\r\n\r\n// Estilos premium\r\nconst PremiumCard = styled.div`\r\n  background: #ffffff;\r\n  border-radius: 20px;\r\n  margin-bottom: 30px;\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);\r\n  overflow: hidden;\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  position: relative;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);\r\n  }\r\n\r\n  ${props => props.$isOwner && css`\r\n    border-left: 5px solid #ff4500;\r\n  `}\r\n`;\r\n\r\nconst PremiumHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 18px 22px;\r\n  position: relative;\r\n`;\r\n\r\nconst PremiumAvatar = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n  background: ${props => props.$gradient || 'linear-gradient(135deg, #ff4500, #ff8c00)'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  overflow: hidden;\r\n  border: 3px solid white;\r\n  box-shadow: 0 3px 10px rgba(0,0,0,0.1);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    animation: ${float} 2s ease-in-out infinite;\r\n  }\r\n`;\r\n\r\nconst PremiumUsername = styled.span`\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n  color: #333;\r\n  transition: all 0.2s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst PremiumMediaContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 350px;\r\n  background: linear-gradient(to bottom, #f9f9f9, #f0f0f0);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  img, video {\r\n    max-width: 100%;\r\n    max-height: 550px;\r\n    display: block;\r\n    object-fit: contain;\r\n    border-radius: 5px;\r\n    transition: transform 0.3s;\r\n  }\r\n\r\n  &:hover img, &:hover video {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst PremiumCaption = styled.p`\r\n  padding: 18px 22px;\r\n  margin: 0;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  color: #444;\r\n  border-bottom: ${props => props.$hasTags ? '1px solid #f0f0f0' : 'none'};\r\n`;\r\n\r\nconst PremiumTags = styled.div`\r\n  padding: 15px 22px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n`;\r\n\r\nconst PremiumTag = styled.span`\r\n  color: #ff4500;\r\n  font-size: 0.85rem;\r\n  background: rgba(255, 69, 0, 0.1);\r\n  padding: 6px 12px;\r\n  border-radius: 20px;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: rgba(255, 69, 0, 0.2);\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst PremiumActions = styled.div`\r\n  display: flex;\r\n  padding: 12px 22px;\r\n  border-top: 1px solid #f0f0f0;\r\n  background: #fafafa;\r\n`;\r\n\r\nconst PremiumActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 25px;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.95rem;\r\n  transition: all 0.2s;\r\n  position: relative;\r\n  \r\n  svg {\r\n    margin-right: 8px;\r\n    font-size: 1.4rem;\r\n    transition: all 0.2s;\r\n  }\r\n\r\n  .count {\r\n    font-weight: ${props => props.$active ? 'bold' : 'normal'};\r\n  }\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n    transform: translateY(-2px);\r\n\r\n    svg {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n  ${props => props.$disabled && css`\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  `}\r\n`;\r\n\r\nconst RepostBadge = styled.div`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  background: rgba(255, 69, 0, 0.9);\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1;\r\n\r\n  svg {\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n\r\nconst MemeCard = ({ meme }) => {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const { user } = useAuth();\r\n  const [reaction, setReaction] = useState(null);\r\n  const [likeCount, setLikeCount] = useState(meme.likes?.length || 0);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(meme.commentCount || 0);\r\n  const [isReposted, setIsReposted] = useState(false);\r\n  const [repostCount, setRepostCount] = useState(meme.repostCount || 0);\r\n  const [animateLike, setAnimateLike] = useState(false);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [memes, setMemes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkOwnership = () => {\r\n      setIsOwner(user && meme.author && user._id === meme.author._id);\r\n    };\r\n\r\n    const fetchUserMemes = async () => {\r\n      try {\r\n        if (userId) {\r\n          const { data } = await api.get(`/users/${userId}/memes?includeReposts=true`);\r\n          setMemes(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user memes:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkOwnership();\r\n    fetchUserMemes();\r\n\r\n    if (user && meme.likes) {\r\n      setReaction(meme.likes.some(like => like.toString() === user._id) ? 'like' : null);\r\n    }\r\n    setLikeCount(meme.likes?.length || 0);\r\n    setCommentCount(meme.commentCount || 0);\r\n    setRepostCount(meme.repostCount || 0);\r\n    checkIfReposted();\r\n  }, [meme, user, userId]);\r\n\r\n  const checkIfReposted = async () => {\r\n    try {\r\n      const response = await api.get(`/memes/${meme._id}/reposted-by-me`);\r\n      setIsReposted(response.data.isReposted);\r\n    } catch (error) {\r\n      console.error('Erro ao verificar repost:', error);\r\n    }\r\n  };\r\n\r\n  const handleReaction = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      if (reaction === 'like') {\r\n        await api.post(`/memes/${meme._id}/unlike`);\r\n        setReaction(null);\r\n        setLikeCount(prev => prev - 1);\r\n      } else {\r\n        await api.post(`/memes/${meme._id}/like`);\r\n        setReaction('like');\r\n        setLikeCount(prev => prev + 1);\r\n      }\r\n      setAnimateLike(true);\r\n      setTimeout(() => setAnimateLike(false), 600);\r\n    } catch (error) {\r\n      console.error('Erro ao curtir:', error);\r\n    }\r\n  };\r\n\r\n  const handleRepost = async () => {\r\n    if (!user || isOwner) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/repost`);\r\n      setIsReposted(response.data.isReposted);\r\n      setRepostCount(response.data.repostCount);\r\n    } catch (error) {\r\n      console.error('Erro ao repostar:', error);\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (text) => {\r\n    try {\r\n      await api.post(`/memes/${meme._id}/comments`, { text });\r\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\r\n      setCommentCount(updatedMeme.data.commentCount || 0);\r\n      setShowComments(true);\r\n    } catch (error) {\r\n      console.error('Erro ao comentar:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getAvatarContent = () => {\r\n    if (meme.author?.profile?.avatar) {\r\n      return <img src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.author.profile.avatar}`} \r\n             alt={meme.author.username} \r\n             onError={(e) => {\r\n               e.target.src = '';\r\n               e.target.onerror = null;\r\n             }} />;\r\n    }\r\n    return meme.author?.username?.charAt(0).toUpperCase() || 'U';\r\n  };\r\n\r\n  return (\r\n    <PremiumCard $isOwner={isOwner}>\r\n      {meme.isRepost && (\r\n        <RepostBadge>\r\n          <FiRepeat /> Repostado por @{meme.repostedBy?.username || 'usuário'}\r\n        </RepostBadge>\r\n      )}\r\n      \r\n      <PremiumHeader>\r\n        <PremiumAvatar \r\n          onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}\r\n          $gradient={isOwner ? 'linear-gradient(135deg, #ff4500, #ff8c00)' : 'linear-gradient(135deg, #4e54c8, #8f94fb)'}\r\n        >\r\n          {getAvatarContent()}\r\n        </PremiumAvatar>\r\n        <PremiumUsername onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}>\r\n          @{meme.author?.username || 'usuário desconhecido'}\r\n        </PremiumUsername>\r\n      </PremiumHeader>\r\n      \r\n      <PremiumMediaContainer>\r\n        {meme.mediaType === 'image' ? (\r\n          <img \r\n            src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`}\r\n            alt={meme.caption || 'Meme image'}\r\n            onError={(e) => {\r\n              e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n              e.target.onerror = null;\r\n            }}\r\n          />\r\n        ) : (\r\n          <video \r\n            src={`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`}\r\n            controls \r\n          />\r\n        )}\r\n      </PremiumMediaContainer>\r\n\r\n      {meme.caption && <PremiumCaption $hasTags={meme.tags?.length > 0}>{meme.caption}</PremiumCaption>}\r\n      \r\n      {meme.tags?.length > 0 && (\r\n        <PremiumTags>\r\n          {meme.tags.map(tag => (\r\n            <PremiumTag key={tag}>#{tag}</PremiumTag>\r\n          ))}\r\n        </PremiumTags>\r\n      )}\r\n\r\n      <PremiumActions>\r\n        <PremiumActionButton \r\n          onClick={handleReaction}\r\n          $active={reaction === 'like'}\r\n          style={{ animation: animateLike ? `${pulse} 0.6s ease` : 'none' }}\r\n        >\r\n          {reaction === 'like' ? <FaHeart /> : <FaRegHeart />}\r\n          <span className=\"count\">{likeCount}</span>\r\n        </PremiumActionButton>\r\n        \r\n        <PremiumActionButton \r\n          onClick={() => setShowComments(!showComments)}\r\n          $active={showComments}\r\n        >\r\n          <FiMessageSquare />\r\n          <span className=\"count\">{commentCount}</span>\r\n        </PremiumActionButton>\r\n        \r\n        <PremiumActionButton\r\n          onClick={handleRepost}\r\n          $active={isReposted}\r\n          $disabled={isOwner}\r\n          title={isOwner ? \"Você não pode repostar seu próprio meme\" : \"\"}\r\n        >\r\n          <FiRepeat />\r\n          <span className=\"count\">{repostCount}</span>\r\n        </PremiumActionButton>\r\n      </PremiumActions>\r\n\r\n      {showComments && (\r\n        <CommentSection \r\n          memeId={meme._id}\r\n          onCommentSubmit={handleCommentSubmit}\r\n        />\r\n      )}\r\n    </PremiumCard>\r\n  );\r\n};\r\n\r\nexport default MemeCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,IAAIC,SAAS,EAAEC,GAAG,QAAQ,mBAAmB;AAC1D,SAASC,eAAe,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1D,SAASC,OAAO,EAAEC,UAAU,QAAQ,gBAAgB;AACpD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGb,SAAS;AACvB;AACA;AACA;AACA,CAAC;AAED,MAAMc,KAAK,GAAGd,SAAS;AACvB;AACA;AACA;AACA,CAAC;AAED,MAAMe,IAAI,GAAGf,SAAS;AACtB;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMgB,WAAW,GAAGjB,MAAM,CAACkB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,KAAK,IAAIA,KAAK,CAACC,QAAQ,IAAIlB,GAAG;AAClC;AACA,GAAG;AACH,CAAC;AAACmB,EAAA,GAjBIJ,WAAW;AAmBjB,MAAMK,aAAa,GAAGtB,MAAM,CAACkB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,aAAa;AAOnB,MAAME,aAAa,GAAGxB,MAAM,CAACkB,GAAG;AAChC;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACM,SAAS,IAAI,2CAA2C;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBV,KAAK;AACtB;AACA,CAAC;AAACW,GAAA,GA5BIF,aAAa;AA8BnB,MAAMG,eAAe,GAAG3B,MAAM,CAAC4B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAXIF,eAAe;AAarB,MAAMG,qBAAqB,GAAG9B,MAAM,CAACkB,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GAtBID,qBAAqB;AAwB3B,MAAME,cAAc,GAAGhC,MAAM,CAACiC,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA,mBAAmBd,KAAK,IAAIA,KAAK,CAACe,QAAQ,GAAG,mBAAmB,GAAG,MAAM;AACzE,CAAC;AAACC,GAAA,GAPIH,cAAc;AASpB,MAAMI,WAAW,GAAGpC,MAAM,CAACkB,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GALID,WAAW;AAOjB,MAAME,UAAU,GAAGtC,MAAM,CAAC4B,IAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAZID,UAAU;AAchB,MAAME,cAAc,GAAGxC,MAAM,CAACkB,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GALID,cAAc;AAOpB,MAAME,mBAAmB,GAAG1C,MAAM,CAAC2C,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA,WAAWxB,KAAK,IAAIA,KAAK,CAACyB,OAAO,GAAG,SAAS,GAAG,MAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmBzB,KAAK,IAAIA,KAAK,CAACyB,OAAO,GAAG,MAAM,GAAG,QAAQ;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIzB,KAAK,IAAIA,KAAK,CAAC0B,SAAS,IAAI3C,GAAG;AACnC;AACA;AACA,GAAG;AACH,CAAC;AAAC4C,IAAA,GAnCIJ,mBAAmB;AAqCzB,MAAMK,WAAW,GAAG/C,MAAM,CAACkB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}