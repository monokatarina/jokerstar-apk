{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState(()=>{// Verifica se há preferência salva no localStorage\nconst savedTheme=localStorage.getItem('theme');// Define 'dark' como padrão, ignorando a preferência do sistema\nreturn savedTheme||'dark';});const toggleTheme=()=>{setTheme(prevTheme=>{const newTheme=prevTheme==='light'?'dark':'light';localStorage.setItem('theme',newTheme);return newTheme;});};// Aplica o tema ao body\nuseEffect(()=>{document.body.setAttribute('data-theme',theme);},[theme]);return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","toggleTheme","prevTheme","newTheme","setItem","document","body","setAttribute","Provider","value","useTheme","context","Error"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny2/client/src/styles/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState(() => {\n      // Verifica se há preferência salva no localStorage\n      const savedTheme = localStorage.getItem('theme');\n      // Define 'dark' como padrão, ignorando a preferência do sistema\n      return savedTheme || 'dark';\n    });\n\n  const toggleTheme = () => {\n    setTheme(prevTheme => {\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', newTheme);\n      return newTheme;\n    });\n  };\n\n  // Aplica o tema ao body\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n\nexport const useTheme = () => {\n    const context = useContext(ThemeContext);\n    if (!context) {\n      throw new Error('useTheme must be used within a ThemeProvider');\n    }\n    return context;\n  };"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACvC;AACA,KAAM,CAAAU,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD;AACA,MAAO,CAAAF,UAAU,EAAI,MAAM,CAC7B,CAAC,CAAC,CAEJ,KAAM,CAAAG,WAAW,CAAGA,CAAA,GAAM,CACxBJ,QAAQ,CAACK,SAAS,EAAI,CACpB,KAAM,CAAAC,QAAQ,CAAGD,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACzDH,YAAY,CAACK,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACvC,MAAO,CAAAA,QAAQ,CACjB,CAAC,CAAC,CACJ,CAAC,CAED;AACAd,SAAS,CAAC,IAAM,CACdgB,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,CAAEX,KAAK,CAAC,CACjD,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CAEX,mBACEL,IAAA,CAACC,YAAY,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEb,KAAK,CAAEK,WAAY,CAAE,CAAAN,QAAA,CAClDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAGD,MAAO,MAAM,CAAAe,QAAQ,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,OAAO,CAAGxB,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACmB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}