{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiMessageSquare, FiShare2, FiHeart } from 'react-icons/fi';\nimport { FaHeart } from 'react-icons/fa';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport CommentSection from './CommentSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  overflow: hidden;\n`;\n_c = Card;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n`;\n_c2 = Header;\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 12px;\n  object-fit: cover;\n`;\n_c3 = Avatar;\nconst Username = styled.span`\n  font-weight: 600;\n`;\n_c4 = Username;\nconst MediaContainer = styled.div`\n  img, video {\n    width: 100%;\n    display: block;\n  }\n`;\n_c5 = MediaContainer;\nconst Caption = styled.p`\n  padding: 12px 16px;\n  margin: 0;\n`;\n_c6 = Caption;\nconst Tags = styled.div`\n  padding: 0 16px 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n_c7 = Tags;\nconst Tag = styled.span`\n  color: #ff4500;\n  font-size: 0.9rem;\n`;\n_c8 = Tag;\nconst Actions = styled.div`\n  display: flex;\n  padding: 8px 16px;\n  border-top: 1px solid #f0f0f0;\n`;\n_c9 = Actions;\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.9rem;\n  \n  svg {\n    margin-right: 6px;\n    font-size: 1.2rem;\n  }\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n_c10 = ActionButton;\nconst MemeCard = ({\n  meme\n}) => {\n  _s();\n  var _meme$likes, _meme$comments, _meme$comments2, _meme$author$profile, _meme$tags;\n  const {\n    user\n  } = useAuth();\n  const [isLiked, setIsLiked] = useState(false);\n  const [likeCount, setLikeCount] = useState(((_meme$likes = meme.likes) === null || _meme$likes === void 0 ? void 0 : _meme$likes.length) || 0);\n  const [showComments, setShowComments] = useState(false);\n  const [commentCount, setCommentCount] = useState((((_meme$comments = meme.comments) === null || _meme$comments === void 0 ? void 0 : _meme$comments.length) || 0) + (((_meme$comments2 = meme.comments) === null || _meme$comments2 === void 0 ? void 0 : _meme$comments2.reduce((acc, c) => {\n    var _c$replies;\n    return acc + (((_c$replies = c.replies) === null || _c$replies === void 0 ? void 0 : _c$replies.length) || 0);\n  }, 0)) || 0));\n  useEffect(() => {\n    var _meme$likes2;\n    if (user && meme.likes) {\n      setIsLiked(meme.likes.includes(user._id));\n    }\n    setLikeCount(((_meme$likes2 = meme.likes) === null || _meme$likes2 === void 0 ? void 0 : _meme$likes2.length) || 0);\n    setCommentCount(meme.commentCount || 0);\n  }, [meme, user]);\n  const handleLike = async () => {\n    if (!user) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/like`);\n      setIsLiked(response.data.isLiked);\n      setLikeCount(response.data.likeCount);\n    } catch (error) {\n      console.error('Erro ao curtir:', error);\n    }\n  };\n  const handleCommentSubmit = async text => {\n    if (!user) {\n      alert('Você precisa estar logado para comentar');\n      return;\n    }\n    if (!text || text.trim() === '') {\n      alert('O comentário não pode estar vazio');\n      return;\n    }\n    try {\n      var _updatedMeme$data$com, _updatedMeme$data$com2;\n      await api.post(`/memes/${meme._id}/comments`, {\n        text\n      });\n\n      // Atualiza a contagem incluindo respostas\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\n      setCommentCount((((_updatedMeme$data$com = updatedMeme.data.comments) === null || _updatedMeme$data$com === void 0 ? void 0 : _updatedMeme$data$com.length) || 0) + (((_updatedMeme$data$com2 = updatedMeme.data.comments) === null || _updatedMeme$data$com2 === void 0 ? void 0 : _updatedMeme$data$com2.reduce((acc, c) => {\n        var _c$replies2;\n        return acc + (((_c$replies2 = c.replies) === null || _c$replies2 === void 0 ? void 0 : _c$replies2.length) || 0);\n      }, 0)) || 0));\n      setShowComments(true);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response3;\n      console.error('Erro ao comentar:', {\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message,\n        route: `/memes/${meme._id}/comments`\n      });\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 429) {\n        alert(error.response.data.message);\n      } else {\n        alert('Erro ao enviar comentário. Tente novamente.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: ((_meme$author$profile = meme.author.profile) === null || _meme$author$profile === void 0 ? void 0 : _meme$author$profile.avatar) || 'https://i.pravatar.cc/150?img=3',\n        alt: meme.author.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Username, {\n        children: [\"@\", meme.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaContainer, {\n      children: meme.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.mediaUrl,\n        alt: meme.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: meme.mediaUrl,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), meme.caption && /*#__PURE__*/_jsxDEV(Caption, {\n      children: meme.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 24\n    }, this), ((_meme$tags = meme.tags) === null || _meme$tags === void 0 ? void 0 : _meme$tags.length) > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n      children: meme.tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"#\", tag]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleLike,\n        $active: isLiked,\n        children: [isLiked ? /*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 36\n        }, this), \" \", likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => setShowComments(!showComments),\n        $active: showComments,\n        children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), \" \", commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [/*#__PURE__*/_jsxDEV(FiShare2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), \" Compartilhar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentSection, {\n      memeId: meme._id,\n      onCommentSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeCard, \"6ByUGP5NH/HrdpI63Rj3Eqll+zI=\", false, function () {\n  return [useAuth];\n});\n_c11 = MemeCard;\nexport default MemeCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Username\");\n$RefreshReg$(_c5, \"MediaContainer\");\n$RefreshReg$(_c6, \"Caption\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"Tag\");\n$RefreshReg$(_c9, \"Actions\");\n$RefreshReg$(_c10, \"ActionButton\");\n$RefreshReg$(_c11, \"MemeCard\");","map":{"version":3,"names":["React","useState","useEffect","styled","FiMessageSquare","FiShare2","FiHeart","FaHeart","api","useAuth","CommentSection","jsxDEV","_jsxDEV","Card","div","_c","Header","_c2","Avatar","img","_c3","Username","span","_c4","MediaContainer","_c5","Caption","p","_c6","Tags","_c7","Tag","_c8","Actions","_c9","ActionButton","button","props","$active","_c10","MemeCard","meme","_s","_meme$likes","_meme$comments","_meme$comments2","_meme$author$profile","_meme$tags","user","isLiked","setIsLiked","likeCount","setLikeCount","likes","length","showComments","setShowComments","commentCount","setCommentCount","comments","reduce","acc","c","_c$replies","replies","_meme$likes2","includes","_id","handleLike","response","post","data","error","console","handleCommentSubmit","text","alert","trim","_updatedMeme$data$com","_updatedMeme$data$com2","updatedMeme","get","_c$replies2","_error$response","_error$response2","_error$response2$data","_error$response3","status","message","route","children","src","author","profile","avatar","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","mediaType","mediaUrl","caption","controls","tags","map","tag","onClick","memeId","onCommentSubmit","_c11","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FiMessageSquare, FiShare2, FiHeart } from 'react-icons/fi';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport CommentSection from './CommentSection';\r\n\r\nconst Card = styled.div`\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 12px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MediaContainer = styled.div`\r\n  img, video {\r\n    width: 100%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Caption = styled.p`\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  padding: 0 16px 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  color: #ff4500;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  padding: 8px 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  \r\n  svg {\r\n    margin-right: 6px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst MemeCard = ({ meme }) => {\r\n  const { user } = useAuth();\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [likeCount, setLikeCount] = useState(meme.likes?.length || 0);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(\r\n    (meme.comments?.length || 0) + \r\n    (meme.comments?.reduce((acc, c) => acc + (c.replies?.length || 0), 0) || 0)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user && meme.likes) {\r\n      setIsLiked(meme.likes.includes(user._id));\r\n    }\r\n    setLikeCount(meme.likes?.length || 0);\r\n    setCommentCount(meme.commentCount || 0);\r\n  }, [meme, user]);\r\n\r\n  const handleLike = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/like`);\r\n      setIsLiked(response.data.isLiked);\r\n      setLikeCount(response.data.likeCount);\r\n    } catch (error) {\r\n      console.error('Erro ao curtir:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  const handleCommentSubmit = async (text) => {\r\n    if (!user) {\r\n      alert('Você precisa estar logado para comentar');\r\n      return;\r\n    }\r\n    \r\n    if (!text || text.trim() === '') {\r\n      alert('O comentário não pode estar vazio');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      await api.post(`/memes/${meme._id}/comments`, { text });\r\n      \r\n      // Atualiza a contagem incluindo respostas\r\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\r\n      setCommentCount(\r\n        (updatedMeme.data.comments?.length || 0) + \r\n        (updatedMeme.data.comments?.reduce((acc, c) => acc + (c.replies?.length || 0), 0) || 0\r\n      ));\r\n      setShowComments(true);\r\n    } catch (error) {\r\n      console.error('Erro ao comentar:', {\r\n        status: error.response?.status,\r\n        message: error.response?.data?.message || error.message,\r\n        route: `/memes/${meme._id}/comments`\r\n      });\r\n      \r\n      if (error.response?.status === 429) {\r\n        alert(error.response.data.message);\r\n      } else {\r\n        alert('Erro ao enviar comentário. Tente novamente.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Header>\r\n        <Avatar \r\n          src={meme.author.profile?.avatar || 'https://i.pravatar.cc/150?img=3'} \r\n          alt={meme.author.username}\r\n        />\r\n        <Username>@{meme.author.username}</Username>\r\n      </Header>\r\n      \r\n      <MediaContainer>\r\n        {meme.mediaType === 'image' ? (\r\n          <img src={meme.mediaUrl} alt={meme.caption} />\r\n        ) : (\r\n          <video src={meme.mediaUrl} controls />\r\n        )}\r\n      </MediaContainer>\r\n\r\n      {meme.caption && <Caption>{meme.caption}</Caption>}\r\n      \r\n      {meme.tags?.length > 0 && (\r\n        <Tags>\r\n          {meme.tags.map(tag => (\r\n            <Tag key={tag}>#{tag}</Tag>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n\r\n      <Actions>\r\n        <ActionButton \r\n          onClick={handleLike} \r\n          $active={isLiked}\r\n        >\r\n          {isLiked ? <FaHeart /> : <FiHeart />} {likeCount}\r\n        </ActionButton>\r\n        <ActionButton \r\n          onClick={() => setShowComments(!showComments)}\r\n          $active={showComments}\r\n        >\r\n          <FiMessageSquare /> {commentCount}\r\n        </ActionButton>\r\n        <ActionButton>\r\n          <FiShare2 /> Compartilhar\r\n        </ActionButton>\r\n      </Actions>\r\n\r\n      {showComments && (\r\n        <CommentSection \r\n          memeId={meme._id}\r\n          onCommentSubmit={handleCommentSubmit}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemeCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}