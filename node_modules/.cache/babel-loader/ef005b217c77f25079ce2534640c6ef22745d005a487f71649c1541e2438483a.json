{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nconst useInfiniteScroll = ({\n  loading,\n  hasMore,\n  onLoadMore,\n  threshold = 100\n}) => {\n  _s();\n  const [infiniteScrollRef, setInfiniteScrollRef] = useState(null);\n  const observerRef = useRef();\n  useEffect(() => {\n    if (loading || !hasMore) return;\n    const observer = new IntersectionObserver(entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting) {\n        onLoadMore();\n      }\n    }, {\n      root: null,\n      rootMargin: `${threshold}px`,\n      threshold: 0.1\n    });\n    if (infiniteScrollRef) {\n      observer.observe(infiniteScrollRef);\n    }\n    observerRef.current = observer;\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [infiniteScrollRef, loading, hasMore, onLoadMore, threshold]);\n  return [setInfiniteScrollRef];\n};\n_s(useInfiniteScroll, \"CkYm79oTcWZZOFIEYu8rdXiJMbw=\");\nexport default useInfiniteScroll;","map":{"version":3,"names":["useEffect","useRef","useState","useInfiniteScroll","loading","hasMore","onLoadMore","threshold","_s","infiniteScrollRef","setInfiniteScrollRef","observerRef","observer","IntersectionObserver","entries","entry","isIntersecting","root","rootMargin","observe","current","disconnect"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/hooks/useInfiniteScroll.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useInfiniteScroll = ({ loading, hasMore, onLoadMore, threshold = 100 }) => {\r\n  const [infiniteScrollRef, setInfiniteScrollRef] = useState(null);\r\n  const observerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (loading || !hasMore) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        const [entry] = entries;\r\n        if (entry.isIntersecting) {\r\n          onLoadMore();\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: `${threshold}px`,\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    if (infiniteScrollRef) {\r\n      observer.observe(infiniteScrollRef);\r\n    }\r\n\r\n    observerRef.current = observer;\r\n\r\n    return () => {\r\n      if (observerRef.current) {\r\n        observerRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [infiniteScrollRef, loading, hasMore, onLoadMore, threshold]);\r\n\r\n  return [setInfiniteScrollRef];\r\n};\r\n\r\nexport default useInfiniteScroll;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,UAAU;EAAEC,SAAS,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAMS,WAAW,GAAGV,MAAM,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,IAAII,OAAO,IAAI,CAACC,OAAO,EAAE;IAEzB,MAAMO,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,MAAM,CAACC,KAAK,CAAC,GAAGD,OAAO;MACvB,IAAIC,KAAK,CAACC,cAAc,EAAE;QACxBV,UAAU,CAAC,CAAC;MACd;IACF,CAAC,EACD;MACEW,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,GAAGX,SAAS,IAAI;MAC5BA,SAAS,EAAE;IACb,CACF,CAAC;IAED,IAAIE,iBAAiB,EAAE;MACrBG,QAAQ,CAACO,OAAO,CAACV,iBAAiB,CAAC;IACrC;IAEAE,WAAW,CAACS,OAAO,GAAGR,QAAQ;IAE9B,OAAO,MAAM;MACX,IAAID,WAAW,CAACS,OAAO,EAAE;QACvBT,WAAW,CAACS,OAAO,CAACC,UAAU,CAAC,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACZ,iBAAiB,EAAEL,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAEC,SAAS,CAAC,CAAC;EAEhE,OAAO,CAACG,oBAAoB,CAAC;AAC/B,CAAC;AAACF,EAAA,CAnCIL,iBAAiB;AAqCvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}