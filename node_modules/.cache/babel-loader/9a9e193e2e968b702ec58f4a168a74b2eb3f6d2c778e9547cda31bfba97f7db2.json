{"ast":null,"code":"import React from'react';import styled from'styled-components';import MemeUpload from'../components/MemeUpload';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UploadPageContainer=styled.div`\n  max-width: 800px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: #fff;\n  border-radius: 12px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n`;const UploadPage=()=>{const{user,loading,initialCheckDone}=useAuth();const navigate=useNavigate();const[uploadComplete,setUploadComplete]=React.useState(false);React.useEffect(()=>{if(initialCheckDone&&!user&&!loading){navigate('/login',{state:{from:'/upload'}});}},[user,loading,initialCheckDone,navigate]);const handleUploadSuccess=()=>{setUploadComplete(true);setTimeout(()=>navigate('/feed'),2000);};if(loading||!initialCheckDone){return/*#__PURE__*/_jsx(UploadPageContainer,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Carregando...\"})});}return/*#__PURE__*/_jsxs(UploadPageContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:'1.5rem'},children:\"Criar Nova Postagem\"}),uploadComplete?/*#__PURE__*/_jsx(\"div\",{style:{color:'green',textAlign:'center',padding:'1rem'},children:\"Postagem criada com sucesso! Redirecionando...\"}):/*#__PURE__*/_jsx(MemeUpload,{onSuccess:handleUploadSuccess})]});};export default UploadPage;","map":{"version":3,"names":["React","styled","MemeUpload","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","UploadPageContainer","div","UploadPage","user","loading","initialCheckDone","navigate","uploadComplete","setUploadComplete","useState","useEffect","state","from","handleUploadSuccess","setTimeout","children","style","marginBottom","color","textAlign","padding","onSuccess"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/pages/UploadPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MemeUpload from '../components/MemeUpload';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst UploadPageContainer = styled.div`\r\n  max-width: 800px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n`;\r\n\r\nconst UploadPage = () => {\r\n  const { user, loading, initialCheckDone } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [uploadComplete, setUploadComplete] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (initialCheckDone && !user && !loading) {\r\n      navigate('/login', { state: { from: '/upload' } });\r\n    }\r\n  }, [user, loading, initialCheckDone, navigate]);\r\n\r\n  const handleUploadSuccess = () => {\r\n    setUploadComplete(true);\r\n    setTimeout(() => navigate('/feed'), 2000);\r\n  };\r\n\r\n  if (loading || !initialCheckDone) {\r\n    return (\r\n      <UploadPageContainer>\r\n        <h2>Carregando...</h2>\r\n      </UploadPageContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UploadPageContainer>\r\n      <h2 style={{ marginBottom: '1.5rem' }}>Criar Nova Postagem</h2>\r\n      {uploadComplete ? (\r\n        <div style={{ color: 'green', textAlign: 'center', padding: '1rem' }}>\r\n          Postagem criada com sucesso! Redirecionando...\r\n        </div>\r\n      ) : (\r\n        <MemeUpload onSuccess={handleUploadSuccess} />\r\n      )}\r\n    </UploadPageContainer>\r\n  );\r\n};\r\n\r\nexport default UploadPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,mBAAmB,CAAGR,MAAM,CAACS,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAEC,gBAAiB,CAAC,CAAGV,OAAO,CAAC,CAAC,CACrD,KAAM,CAAAW,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACa,cAAc,CAAEC,iBAAiB,CAAC,CAAGjB,KAAK,CAACkB,QAAQ,CAAC,KAAK,CAAC,CAEjElB,KAAK,CAACmB,SAAS,CAAC,IAAM,CACpB,GAAIL,gBAAgB,EAAI,CAACF,IAAI,EAAI,CAACC,OAAO,CAAE,CACzCE,QAAQ,CAAC,QAAQ,CAAE,CAAEK,KAAK,CAAE,CAAEC,IAAI,CAAE,SAAU,CAAE,CAAC,CAAC,CACpD,CACF,CAAC,CAAE,CAACT,IAAI,CAAEC,OAAO,CAAEC,gBAAgB,CAAEC,QAAQ,CAAC,CAAC,CAE/C,KAAM,CAAAO,mBAAmB,CAAGA,CAAA,GAAM,CAChCL,iBAAiB,CAAC,IAAI,CAAC,CACvBM,UAAU,CAAC,IAAMR,QAAQ,CAAC,OAAO,CAAC,CAAE,IAAI,CAAC,CAC3C,CAAC,CAED,GAAIF,OAAO,EAAI,CAACC,gBAAgB,CAAE,CAChC,mBACER,IAAA,CAACG,mBAAmB,EAAAe,QAAA,cAClBlB,IAAA,OAAAkB,QAAA,CAAI,eAAa,CAAI,CAAC,CACH,CAAC,CAE1B,CAEA,mBACEhB,KAAA,CAACC,mBAAmB,EAAAe,QAAA,eAClBlB,IAAA,OAAImB,KAAK,CAAE,CAAEC,YAAY,CAAE,QAAS,CAAE,CAAAF,QAAA,CAAC,qBAAmB,CAAI,CAAC,CAC9DR,cAAc,cACbV,IAAA,QAAKmB,KAAK,CAAE,CAAEE,KAAK,CAAE,OAAO,CAAEC,SAAS,CAAE,QAAQ,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAL,QAAA,CAAC,gDAEtE,CAAK,CAAC,cAENlB,IAAA,CAACJ,UAAU,EAAC4B,SAAS,CAAER,mBAAoB,CAAE,CAC9C,EACkB,CAAC,CAE1B,CAAC,CAED,cAAe,CAAAX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}