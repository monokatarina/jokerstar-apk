{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  scroll-snap-type: y mandatory;\n  scroll-behavior: smooth;\n  overscroll-behavior-y: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  padding-top: calc(60px + env(safe-area-inset-top));\n`;const FeedGrid=styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;const MemeWrapper=styled.div`\n  width: 100%;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  scroll-snap-align: start;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  box-sizing: border-box;\n`;const StyledMemeCard=styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 600px;\n  max-height: 92%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  transform: ${_ref=>{let{isActive}=_ref;return isActive?'scale(1)':'scale(0.94)';}};\n  opacity: ${_ref2=>{let{isActive}=_ref2;return isActive?1:0.6;}};\n`;const EmptyFeed=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: start;\n  background: var(--card-bg);\n  padding: 16px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;const LoadingIndicator=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--text-light);\n  scroll-snap-align: start;\n`;const ErrorMessage=styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: start;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const feedContainerRef=useRef(null);const scrollTimeoutRef=useRef(null);const{logout}=useAuth();const navigate=useNavigate();const[commentOpen,setCommentOpen]=useState(false);const lastScrollPosition=useRef(0);const isScrollingRef=useRef(false);const[navbarVisible,setNavbarVisible]=useState(true);const navbarScrollTimeout=useRef(null);const handleNavbarVisibility=useCallback(()=>{var _feedContainerRef$cur;if(commentOpen)return;const currentScroll=((_feedContainerRef$cur=feedContainerRef.current)===null||_feedContainerRef$cur===void 0?void 0:_feedContainerRef$cur.scrollTop)||0;const scrollDirection=currentScroll>lastScrollPosition.current?'down':'up';const scrollDistance=Math.abs(currentScroll-lastScrollPosition.current);if(navbarScrollTimeout.current){clearTimeout(navbarScrollTimeout.current);}if(scrollDistance>5){if(scrollDirection==='down'&&currentScroll>60){setNavbarVisible(false);}else if(scrollDirection==='up'){setNavbarVisible(true);}}lastScrollPosition.current=currentScroll;navbarScrollTimeout.current=setTimeout(()=>{navbarScrollTimeout.current=null;},100);},[commentOpen]);const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleScroll=()=>{if(commentOpen)return;handleNavbarVisibility();if(scrollTimeoutRef.current){clearTimeout(scrollTimeoutRef.current);}isScrollingRef.current=true;scrollTimeoutRef.current=setTimeout(()=>{isScrollingRef.current=false;if(feedContainerRef.current){const container=feedContainerRef.current;const scrollTop=container.scrollTop;const containerHeight=container.offsetHeight;const index=Math.round(scrollTop/containerHeight);if(index!==currentIndex){setCurrentIndex(index);container.scrollTo({top:index*containerHeight,behavior:'smooth'});}}},150);};const handleMemeDeleted=deletedMemeId=>{var _memes$currentIndex;setMemes(prev=>prev.filter(meme=>meme._id!==deletedMemeId));if(((_memes$currentIndex=memes[currentIndex])===null||_memes$currentIndex===void 0?void 0:_memes$currentIndex._id)===deletedMemeId){const newIndex=Math.min(currentIndex,memes.length-2);setCurrentIndex(newIndex>=0?newIndex:0);}};useEffect(()=>{const container=feedContainerRef.current;if(container){container.addEventListener('scroll',handleScroll);return()=>container.removeEventListener('scroll',handleScroll);}},[currentIndex,commentOpen,handleNavbarVisibility]);useEffect(()=>{fetchMemes();},[]);useEffect(()=>{return()=>{setCommentOpen(false);};},[]);if(loading){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(FeedGrid,{children:memes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Seja o primeiro a compartilhar sua cria\\xE7\\xE3o!\"}),/*#__PURE__*/_jsx(UploadButton,{size:\"large\"})]}):memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeWrapper,{children:/*#__PURE__*/_jsx(StyledMemeCard,{isActive:index===currentIndex,children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,onDelete:handleMemeDeleted,onCommentCountChange:newCount=>{setMemes(prev=>prev.map(m=>m._id===meme._id?{...m,commentCount:newCount}:m));},isSquareView:false,isActive:index===currentIndex,setCommentOpen:setCommentOpen,navbarVisible:navbarVisible})})},meme._id))})});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","api","MemeCard","UploadButton","useNavigate","useAuth","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedGrid","MemeWrapper","StyledMemeCard","_ref","isActive","_ref2","EmptyFeed","LoadingIndicator","ErrorMessage","FeedPage","memes","setMemes","loading","setLoading","error","setError","currentIndex","setCurrentIndex","feedContainerRef","scrollTimeoutRef","logout","navigate","commentOpen","setCommentOpen","lastScrollPosition","isScrollingRef","navbarVisible","setNavbarVisible","navbarScrollTimeout","handleNavbarVisibility","_feedContainerRef$cur","currentScroll","current","scrollTop","scrollDirection","scrollDistance","Math","abs","clearTimeout","setTimeout","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleScroll","container","containerHeight","offsetHeight","index","round","scrollTo","top","behavior","handleMemeDeleted","deletedMemeId","_memes$currentIndex","prev","_id","newIndex","min","length","addEventListener","removeEventListener","ref","children","onClick","size","map","onDelete","onCommentCountChange","newCount","m","commentCount","isSquareView"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport UploadButton from '../components/UploadButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  scroll-snap-type: y mandatory;\n  scroll-behavior: smooth;\n  overscroll-behavior-y: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  padding-top: calc(60px + env(safe-area-inset-top));\n`;\n\nconst FeedGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst MemeWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  scroll-snap-align: start;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n  box-sizing: border-box;\n`;\n\nconst StyledMemeCard = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 600px;\n  max-height: 92%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  transform: ${({ isActive }) => isActive ? 'scale(1)' : 'scale(0.94)'};\n  opacity: ${({ isActive }) => isActive ? 1 : 0.6};\n`;\n\nconst EmptyFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: start;\n  background: var(--card-bg);\n  padding: 16px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--text-light);\n  scroll-snap-align: start;\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: start;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const feedContainerRef = useRef(null);\n  const scrollTimeoutRef = useRef(null);\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n  const [commentOpen, setCommentOpen] = useState(false);\n  const lastScrollPosition = useRef(0);\n  const isScrollingRef = useRef(false);\n  const [navbarVisible, setNavbarVisible] = useState(true);\n  const navbarScrollTimeout = useRef(null);\n\n  const handleNavbarVisibility = useCallback(() => {\n    if (commentOpen) return;\n\n    const currentScroll = feedContainerRef.current?.scrollTop || 0;\n    const scrollDirection = currentScroll > lastScrollPosition.current ? 'down' : 'up';\n    const scrollDistance = Math.abs(currentScroll - lastScrollPosition.current);\n\n    if (navbarScrollTimeout.current) {\n      clearTimeout(navbarScrollTimeout.current);\n    }\n\n    if (scrollDistance > 5) {\n      if (scrollDirection === 'down' && currentScroll > 60) {\n        setNavbarVisible(false);\n      } else if (scrollDirection === 'up') {\n        setNavbarVisible(true);\n      }\n    }\n\n    lastScrollPosition.current = currentScroll;\n    navbarScrollTimeout.current = setTimeout(() => {\n      navbarScrollTimeout.current = null;\n    }, 100);\n  }, [commentOpen]);\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n      const validMemes = Array.isArray(data?.data)\n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleScroll = () => {\n    if (commentOpen) return;\n\n    handleNavbarVisibility();\n\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n\n    isScrollingRef.current = true;\n    scrollTimeoutRef.current = setTimeout(() => {\n      isScrollingRef.current = false;\n      if (feedContainerRef.current) {\n        const container = feedContainerRef.current;\n        const scrollTop = container.scrollTop;\n        const containerHeight = container.offsetHeight;\n        const index = Math.round(scrollTop / containerHeight);\n\n        if (index !== currentIndex) {\n          setCurrentIndex(index);\n          container.scrollTo({\n            top: index * containerHeight,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }, 150);\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prev => prev.filter(meme => meme._id !== deletedMemeId));\n\n    if (memes[currentIndex]?._id === deletedMemeId) {\n      const newIndex = Math.min(currentIndex, memes.length - 2);\n      setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n    }\n  };\n\n  useEffect(() => {\n    const container = feedContainerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, [currentIndex, commentOpen, handleNavbarVisibility]);\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      setCommentOpen(false);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <LoadingIndicator>Carregando...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <ErrorMessage>\n          {error}\n          <button onClick={fetchMemes}>\n            <FiRefreshCw /> Tentar novamente\n          </button>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer ref={feedContainerRef}>\n      <FeedGrid>\n        {memes.length === 0 ? (\n          <EmptyFeed>\n            <h3>Nenhum meme encontrado</h3>\n            <p>Seja o primeiro a compartilhar sua criação!</p>\n            <UploadButton size=\"large\" />\n          </EmptyFeed>\n        ) : (\n          memes.map((meme, index) => (\n            <MemeWrapper key={meme._id}>\n              <StyledMemeCard isActive={index === currentIndex}>\n                <MemeCard\n                  meme={meme}\n                  onDelete={handleMemeDeleted}\n                  onCommentCountChange={(newCount) => {\n                    setMemes(prev =>\n                      prev.map(m =>\n                        m._id === meme._id ? { ...m, commentCount: newCount } : m\n                      )\n                    );\n                  }}\n                  isSquareView={false}\n                  isActive={index === currentIndex}\n                  setCommentOpen={setCommentOpen}\n                  navbarVisible={navbarVisible}\n                />\n              </StyledMemeCard>\n            </MemeWrapper>\n          ))\n        )}\n      </FeedGrid>\n    </FeedContainer>\n  );\n};\n\nexport default FeedPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}