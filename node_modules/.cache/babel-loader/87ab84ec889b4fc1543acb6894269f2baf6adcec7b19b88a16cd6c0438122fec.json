{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import api from'../../services/api';import{useParams}from'react-router-dom';import MemeCard from'../MemeCard';import{PulseLoader}from'react-spinners';// Adicione esta dependência\nimport{FaSadTear,FaSmileWink}from'react-icons/fa';// Adicione esta dependência\nimport{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 20px;\n`;const MemeGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 30px;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 20px;\n  }\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;const StatusMessage=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  text-align: center;\n  padding: 40px;\n  background: ${_ref=>{let{theme}=_ref;return theme.cardBg||'#f8f9fa';}};\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  color: ${_ref2=>{let{theme}=_ref2;return theme.text||'#333';}};\n\n  svg {\n    font-size: 3rem;\n    margin-bottom: 20px;\n    color: ${_ref3=>{let{theme}=_ref3;return theme.primary||'#6c5ce7';}};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    opacity: 0.8;\n  }\n`;const Title=styled.h2`\n  font-size: 2rem;\n  color: ${_ref4=>{let{theme}=_ref4;return theme.text||'#333';}};\n  margin-bottom: 20px;\n  padding-left: 20px;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 70%;\n    width: 5px;\n    background: ${_ref5=>{let{theme}=_ref5;return theme.primary||'#6c5ce7';}};\n    border-radius: 5px;\n  }\n`;const UserMemes=()=>{const{userId}=useParams();const{user:currentUser}=useAuth();const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const handleDeleteMeme=deletedMemeId=>{setMemes(memes.filter(meme=>meme._id!==deletedMemeId));};useEffect(()=>{const fetchUserMemes=async()=>{try{setLoading(true);const{data}=await api.get(`/users/${userId}/memes`);setMemes(data);}catch(err){setError('Falha ao carregar memes');console.error('Erro ao buscar memes:',err);}finally{setLoading(false);}};fetchUserMemes();},[userId]);if(loading)return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(StatusMessage,{children:[/*#__PURE__*/_jsx(PulseLoader,{color:\"#6c5ce7\",size:15}),/*#__PURE__*/_jsx(\"h3\",{children:\"Carregando memes...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparando as melhores piadas pra voc\\xEA\"})]})});if(error)return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(StatusMessage,{children:[/*#__PURE__*/_jsx(FaSadTear,{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Oops! Algo deu errado\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"p\",{children:\"Tente recarregar a p\\xE1gina\"})]})});if(memes.length===0)return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(StatusMessage,{children:[/*#__PURE__*/_jsx(FaSmileWink,{}),/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Parece que este usu\\xE1rio ainda n\\xE3o criou memes\"})]})});return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Post\"}),/*#__PURE__*/_jsx(MemeGrid,{children:memes.map(meme=>/*#__PURE__*/_jsx(MemeCard,{meme:meme,isOwner:(currentUser===null||currentUser===void 0?void 0:currentUser._id)===meme.user._id,onDelete:handleDeleteMeme},meme._id))})]});};export default UserMemes;","map":{"version":3,"names":["React","useState","useEffect","styled","api","useParams","MemeCard","PulseLoader","FaSadTear","FaSmileWink","useAuth","jsx","_jsx","jsxs","_jsxs","Container","div","MemeGrid","StatusMessage","_ref","theme","cardBg","_ref2","text","_ref3","primary","Title","h2","_ref4","_ref5","UserMemes","userId","user","currentUser","memes","setMemes","loading","setLoading","error","setError","handleDeleteMeme","deletedMemeId","filter","meme","_id","fetchUserMemes","data","get","err","console","children","color","size","length","map","isOwner","onDelete"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/components/profile/UserMemes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport api from '../../services/api';\nimport { useParams } from 'react-router-dom';\nimport MemeCard from '../MemeCard';\nimport { PulseLoader } from 'react-spinners'; // Adicione esta dependência\nimport { FaSadTear, FaSmileWink } from 'react-icons/fa'; // Adicione esta dependência\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst Container = styled.div`\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nconst MemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 30px;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 20px;\n  }\n\n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst StatusMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 300px;\n  text-align: center;\n  padding: 40px;\n  background: ${({ theme }) => theme.cardBg || '#f8f9fa'};\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n  color: ${({ theme }) => theme.text || '#333'};\n\n  svg {\n    font-size: 3rem;\n    margin-bottom: 20px;\n    color: ${({ theme }) => theme.primary || '#6c5ce7'};\n  }\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-size: 1rem;\n    opacity: 0.8;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.text || '#333'};\n  margin-bottom: 20px;\n  padding-left: 20px;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 70%;\n    width: 5px;\n    background: ${({ theme }) => theme.primary || '#6c5ce7'};\n    border-radius: 5px;\n  }\n`;\n\nconst UserMemes = () => {\n  const { userId } = useParams();\n  const { user: currentUser } = useAuth();\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const handleDeleteMeme = (deletedMemeId) => {\n    setMemes(memes.filter(meme => meme._id !== deletedMemeId));\n  };\n\n  useEffect(() => {\n    const fetchUserMemes = async () => {\n      try {\n        setLoading(true);\n        const { data } = await api.get(`/users/${userId}/memes`);\n        setMemes(data);\n      } catch (err) {\n        setError('Falha ao carregar memes');\n        console.error('Erro ao buscar memes:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUserMemes();\n  }, [userId]);\n\n  if (loading) return (\n    <Container>\n      <StatusMessage>\n        <PulseLoader color=\"#6c5ce7\" size={15} />\n        <h3>Carregando memes...</h3>\n        <p>Preparando as melhores piadas pra você</p>\n      </StatusMessage>\n    </Container>\n  );\n\n  if (error) return (\n    <Container>\n      <StatusMessage>\n        <FaSadTear />\n        <h3>Oops! Algo deu errado</h3>\n        <p>{error}</p>\n        <p>Tente recarregar a página</p>\n      </StatusMessage>\n    </Container>\n  );\n\n  if (memes.length === 0) return (\n    <Container>\n      <StatusMessage>\n        <FaSmileWink />\n        <h3>Nenhum meme encontrado</h3>\n        <p>Parece que este usuário ainda não criou memes</p>\n      </StatusMessage>\n    </Container>\n  );\n\n  return (\n    <Container>\n      <Title>Post</Title>\n      <MemeGrid>\n        {memes.map(meme => (\n          <MemeCard \n            key={meme._id} \n            meme={meme} \n            isOwner={currentUser?._id === meme.user._id}\n            onDelete={handleDeleteMeme}\n          />\n        ))}\n      </MemeGrid>\n    </Container>\n  );\n};\n\nexport default UserMemes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}