{"ast":null,"code":"import api from './api';\nexport const register = async userData => {\n  try {\n    const {\n      data\n    } = await api.post('/auth/register', userData);\n    return data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('[register] Erro:', error);\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 409) {\n      throw {\n        type: 'CONFLICT',\n        message: error.response.data.message,\n        conflicts: error.response.data.conflicts\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro ao registrar usuário'\n    };\n  }\n};\nexport const login = async credentials => {\n  try {\n    const {\n      data\n    } = await api.post('/auth/login', credentials);\n    return data;\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response4$data;\n    console.error('[login] Erro:', error);\n    if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n      throw {\n        type: 'AUTH_ERROR',\n        message: 'Credenciais inválidas'\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erro ao fazer login'\n    };\n  }\n};\nexport const checkAuth = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) throw new Error('No token found');\n    const {\n      data\n    } = await api.get('/auth/check', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    var _error$response5, _error$response6, _error$response6$data;\n    console.error('[checkAuth] Erro:', error);\n    if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n      localStorage.removeItem('token');\n      throw {\n        type: 'AUTH_ERROR',\n        message: 'Sessão expirada'\n      };\n    }\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Erro ao verificar autenticação'\n    };\n  }\n};\nexport const logout = async () => {\n  try {\n    localStorage.removeItem('token');\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('[logout] Erro:', error);\n    throw {\n      type: 'UNKNOWN_ERROR',\n      message: 'Erro ao fazer logout'\n    };\n  }\n};","map":{"version":3,"names":["api","register","userData","data","post","error","_error$response","_error$response2","_error$response2$data","console","response","status","type","message","conflicts","login","credentials","_error$response3","_error$response4","_error$response4$data","checkAuth","token","localStorage","getItem","Error","get","headers","Authorization","_error$response5","_error$response6","_error$response6$data","removeItem","logout","success"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/services/auth.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const { data } = await api.post('/auth/register', userData);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[register] Erro:', error);\r\n    if (error.response?.status === 409) {\r\n      throw { \r\n        type: 'CONFLICT',\r\n        message: error.response.data.message,\r\n        conflicts: error.response.data.conflicts\r\n      };\r\n    }\r\n    throw {\r\n      type: 'UNKNOWN_ERROR',\r\n      message: error.response?.data?.message || 'Erro ao registrar usuário'\r\n    };\r\n  }\r\n};\r\n\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const { data } = await api.post('/auth/login', credentials);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[login] Erro:', error);\r\n    if (error.response?.status === 401) {\r\n      throw { type: 'AUTH_ERROR', message: 'Credenciais inválidas' };\r\n    }\r\n    throw { \r\n      type: 'UNKNOWN_ERROR', \r\n      message: error.response?.data?.message || 'Erro ao fazer login' \r\n    };\r\n  }\r\n};\r\n\r\nexport const checkAuth = async () => {\r\n  try {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) throw new Error('No token found');\r\n    \r\n    const { data } = await api.get('/auth/check', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.error('[checkAuth] Erro:', error);\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      throw { type: 'AUTH_ERROR', message: 'Sessão expirada' };\r\n    }\r\n    throw { \r\n      type: 'UNKNOWN_ERROR', \r\n      message: error.response?.data?.message || 'Erro ao verificar autenticação' \r\n    };\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    localStorage.removeItem('token');\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error('[logout] Erro:', error);\r\n    throw { type: 'UNKNOWN_ERROR', message: 'Erro ao fazer logout' };\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}