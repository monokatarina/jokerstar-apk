{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-x: hidden;\n  overflow-y: hidden;\n  touch-action: pan-x;\n`;const FeedGrid=styled.div`\n  display: flex;\n  height: 100%;\n`;const MemeWrapper=styled.div`\n  position: relative;\n  width: 100vw;\n  height: 115vh;\n  flex: 0 0 auto;\n  overflow: hidden;\n  border-radius: 12px;\n  background: var(--card-bg);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n\n  &:not(.active) {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n\n  &.active {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;const EmptyFeed=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100vw;\n  text-align: center;\n  color: var(--text);\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;const LoadingIndicator=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  color: var(--text-light);\n  background: var(--card-bg);\n  border-radius: 12px;\n`;const ErrorMessage=styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  color: var(--danger);\n  padding: 20px;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const feedContainerRef=useRef(null);const{logout}=useAuth();const navigate=useNavigate();const touchStartX=useRef(0);const touchEndX=useRef(0);const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleMemeDeleted=deletedMemeId=>{setMemes(prev=>prev.filter(meme=>meme._id!==deletedMemeId));};const scrollToIndex=index=>{if(feedContainerRef.current){feedContainerRef.current.scrollTo({left:index*window.innerWidth,behavior:'smooth'});}};const handleTouchStart=e=>{touchStartX.current=e.touches[0].clientX;};const handleTouchMove=e=>{touchEndX.current=e.touches[0].clientX;};const handleTouchEnd=()=>{const delta=touchStartX.current-touchEndX.current;const swipeThreshold=50;if(delta>swipeThreshold&&currentIndex<memes.length-1){const nextIndex=currentIndex+1;setCurrentIndex(nextIndex);scrollToIndex(nextIndex);}else if(delta<-swipeThreshold&&currentIndex>0){const prevIndex=currentIndex-1;setCurrentIndex(prevIndex);scrollToIndex(prevIndex);}else{scrollToIndex(currentIndex);// Volta pro atual\n}};useEffect(()=>{fetchMemes();},[]);if(loading){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,children:/*#__PURE__*/_jsx(FeedGrid,{children:memes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Seja o primeiro a compartilhar sua cria\\xE7\\xE3o!\"}),/*#__PURE__*/_jsx(UploadButton,{size:\"large\"})]}):memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeWrapper,{className:index===currentIndex?'active':'',children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,onDelete:handleMemeDeleted,onCommentCountChange:newCount=>{setMemes(prev=>prev.map(m=>m._id===meme._id?{...m,commentCount:newCount}:m));},isSquareView:false,isActive:index===currentIndex,style:{width:'100%',height:'100%'}})},meme._id))})});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","api","MemeCard","UploadButton","useNavigate","useAuth","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedGrid","MemeWrapper","EmptyFeed","LoadingIndicator","ErrorMessage","FeedPage","memes","setMemes","loading","setLoading","error","setError","currentIndex","setCurrentIndex","feedContainerRef","logout","navigate","touchStartX","touchEndX","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleMemeDeleted","deletedMemeId","prev","_id","scrollToIndex","index","current","scrollTo","left","window","innerWidth","behavior","handleTouchStart","e","touches","clientX","handleTouchMove","handleTouchEnd","delta","swipeThreshold","length","nextIndex","prevIndex","ref","children","onClick","onTouchStart","onTouchMove","onTouchEnd","size","map","className","onDelete","onCommentCountChange","newCount","m","commentCount","isSquareView","isActive","style","width","height"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport UploadButton from '../components/UploadButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-x: hidden;\n  overflow-y: hidden;\n  touch-action: pan-x;\n`;\n\nconst FeedGrid = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst MemeWrapper = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 115vh;\n  flex: 0 0 auto;\n  overflow: hidden;\n  border-radius: 12px;\n  background: var(--card-bg);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n\n  &:not(.active) {\n    opacity: 0.9;\n    transform: scale(0.98);\n  }\n\n  &.active {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst EmptyFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100vw;\n  text-align: center;\n  color: var(--text);\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  color: var(--text-light);\n  background: var(--card-bg);\n  border-radius: 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  color: var(--danger);\n  padding: 20px;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const feedContainerRef = useRef(null);\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n\n  const touchStartX = useRef(0);\n  const touchEndX = useRef(0);\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n\n      const validMemes = Array.isArray(data?.data)\n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n\n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prev => prev.filter(meme => meme._id !== deletedMemeId));\n  };\n\n  const scrollToIndex = (index) => {\n    if (feedContainerRef.current) {\n      feedContainerRef.current.scrollTo({\n        left: index * window.innerWidth,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const handleTouchStart = (e) => {\n    touchStartX.current = e.touches[0].clientX;\n  };\n\n  const handleTouchMove = (e) => {\n    touchEndX.current = e.touches[0].clientX;\n  };\n\n  const handleTouchEnd = () => {\n    const delta = touchStartX.current - touchEndX.current;\n    const swipeThreshold = 50;\n\n    if (delta > swipeThreshold && currentIndex < memes.length - 1) {\n      const nextIndex = currentIndex + 1;\n      setCurrentIndex(nextIndex);\n      scrollToIndex(nextIndex);\n    } else if (delta < -swipeThreshold && currentIndex > 0) {\n      const prevIndex = currentIndex - 1;\n      setCurrentIndex(prevIndex);\n      scrollToIndex(prevIndex);\n    } else {\n      scrollToIndex(currentIndex); // Volta pro atual\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <LoadingIndicator>Carregando...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <ErrorMessage>\n          {error}\n          <button onClick={fetchMemes}>\n            <FiRefreshCw /> Tentar novamente\n          </button>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer\n      ref={feedContainerRef}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <FeedGrid>\n        {memes.length === 0 ? (\n          <EmptyFeed>\n            <h3>Nenhum meme encontrado</h3>\n            <p>Seja o primeiro a compartilhar sua criação!</p>\n            <UploadButton size=\"large\" />\n          </EmptyFeed>\n        ) : (\n          memes.map((meme, index) => (\n            <MemeWrapper\n              key={meme._id}\n              className={index === currentIndex ? 'active' : ''}\n            >\n              <MemeCard\n                meme={meme}\n                onDelete={handleMemeDeleted}\n                onCommentCountChange={(newCount) => {\n                  setMemes(prev =>\n                    prev.map(m =>\n                      m._id === meme._id ? { ...m, commentCount: newCount } : m\n                    )\n                  );\n                }}\n                isSquareView={false}\n                isActive={index === currentIndex}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                }}\n              />\n            </MemeWrapper>\n          ))\n        )}\n      </FeedGrid>\n    </FeedContainer>\n  );\n};\n\nexport default FeedPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}