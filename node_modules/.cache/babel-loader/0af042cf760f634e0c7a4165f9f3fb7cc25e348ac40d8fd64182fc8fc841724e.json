{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\client2\\\\src\\\\pages\\\\TrendingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport UploadButton from '../components/UploadButton';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: var(--background);\n`;\n_c = FeedContainer;\nconst FeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c2 = FeedHeader;\nconst FeedTitle = styled.h1`\n  font-size: 24px;\n  color: var(--text);\n`;\n_c3 = FeedTitle;\nconst RefreshButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n_c4 = RefreshButton;\nconst RepostButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n_c5 = RepostButton;\nconst EmptyFeed = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow);\n  color: var(--text);\n`;\n_c6 = EmptyFeed;\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;\n_c7 = LoadingIndicator;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: var(--radius-md);\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;\n_c8 = ErrorMessage;\nconst Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n_c9 = Filters;\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: var(--radius-lg);\n  border: none;\n  background: ${({\n  $active\n}) => $active ? 'var(--primary)' : 'var(--card-bg)'};\n  color: ${({\n  $active\n}) => $active ? 'var(--text-inverse)' : 'var(--text)'};\n  cursor: pointer;\n  transition: var(--transition);\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n\n  &:hover {\n    background: ${({\n  $active\n}) => $active ? 'var(--primary-hover)' : 'var(--border-light)'};\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n_c10 = FilterButton;\nconst LoadingMoreIndicator = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;\n_c11 = LoadingMoreIndicator;\nconst TrendingPage = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const fetchTrendingMemes = useCallback(async (pageNum = 1, isRefreshing = false) => {\n    try {\n      if (pageNum === 1) setLoading(true);else setLoadingMore(true);\n      setError(null);\n      const {\n        data\n      } = await api.get(`/feed/trending?page=${pageNum}&limit=10`);\n      if (isRefreshing) {\n        setMemes(data.data);\n      } else {\n        setMemes(prev => pageNum === 1 ? data.data : [...prev, ...data.data]);\n      }\n      setHasMore(data.data.length >= 10);\n      setPage(pageNum);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching trending memes:', error);\n      setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  }, [logout, navigate]);\n  const handleLoadMore = useCallback(() => {\n    if (!loading && !loadingMore && hasMore) {\n      fetchTrendingMemes(page + 1);\n    }\n  }, [fetchTrendingMemes, hasMore, loading, loadingMore, page]);\n  const [infiniteScrollRef] = useInfiniteScroll({\n    loading,\n    hasMore,\n    onLoadMore: handleLoadMore\n  });\n  const handleRefresh = useCallback(() => {\n    fetchTrendingMemes(1, true);\n  }, [fetchTrendingMemes]);\n  const handleRepost = async memeId => {\n    try {\n      await api.post(`/memes/${memeId}/repost`);\n      handleRefresh(); // Atualiza a lista apÃ³s repostar\n    } catch (error) {\n      var _error$response2;\n      console.error('Erro ao repostar:', error);\n      setError('Erro ao repostar');\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        await logout();\n        navigate('/login');\n      }\n    }\n  };\n  useEffect(() => {\n    fetchTrendingMemes();\n  }, [fetchTrendingMemes]);\n  const filteredMemes = memes.filter(meme => {\n    if (filter === 'all') return true;\n    if (filter === 'images') return meme.mediaType === 'image';\n    if (filter === 'videos') return meme.mediaType === 'video';\n    return true;\n  });\n  if (loading && page === 1) {\n    return /*#__PURE__*/_jsxDEV(FeedContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n        children: \"Carregando memes em destaque...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(FeedContainer, {\n      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [error, /*#__PURE__*/_jsxDEV(RefreshButton, {\n          onClick: handleRefresh,\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), \" Tentar novamente\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(FeedContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FeedHeader, {\n      children: [/*#__PURE__*/_jsxDEV(FeedTitle, {\n        children: \"Destaques - Os memes mais populares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {\n          onClick: handleRefresh,\n          children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), \" Atualizar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n        $active: filter === 'all',\n        onClick: () => setFilter('all'),\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        $active: filter === 'images',\n        onClick: () => setFilter('images'),\n        children: \"Imagens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        $active: filter === 'videos',\n        onClick: () => setFilter('videos'),\n        children: \"V\\xEDdeos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), filteredMemes.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyFeed, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Nenhum meme em destaque encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Que tal criar o primeiro?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-list\",\n      children: [filteredMemes.map((meme, index) => {\n        var _meme$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '24px'\n          },\n          ref: index === filteredMemes.length - 1 ? infiniteScrollRef : null,\n          children: [/*#__PURE__*/_jsxDEV(MemeCard, {\n            meme: meme,\n            commentCount: meme.commentCount || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), user && user._id !== ((_meme$author = meme.author) === null || _meme$author === void 0 ? void 0 : _meme$author._id) && /*#__PURE__*/_jsxDEV(RepostButton, {\n            onClick: () => handleRepost(meme._id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDD01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), \" Repostar (\", meme.repostCount || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)]\n        }, `${meme._id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this);\n      }), loadingMore && /*#__PURE__*/_jsxDEV(LoadingMoreIndicator, {\n        children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {\n          className: \"spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this), \" Carregando mais memes...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this), !hasMore && filteredMemes.length > 0 && /*#__PURE__*/_jsxDEV(LoadingMoreIndicator, {\n        children: \"Voc\\xEA chegou ao fim dos memes em destaque!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(TrendingPage, \"HXPA4O/X2DfW+4xeDXknuNPCaj8=\", false, function () {\n  return [useAuth, useNavigate, useInfiniteScroll];\n});\n_c12 = TrendingPage;\nexport default TrendingPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"FeedContainer\");\n$RefreshReg$(_c2, \"FeedHeader\");\n$RefreshReg$(_c3, \"FeedTitle\");\n$RefreshReg$(_c4, \"RefreshButton\");\n$RefreshReg$(_c5, \"RepostButton\");\n$RefreshReg$(_c6, \"EmptyFeed\");\n$RefreshReg$(_c7, \"LoadingIndicator\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"Filters\");\n$RefreshReg$(_c10, \"FilterButton\");\n$RefreshReg$(_c11, \"LoadingMoreIndicator\");\n$RefreshReg$(_c12, \"TrendingPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","api","MemeCard","useNavigate","useAuth","FiRefreshCw","UploadButton","useInfiniteScroll","jsxDEV","_jsxDEV","FeedContainer","div","_c","FeedHeader","_c2","FeedTitle","h1","_c3","RefreshButton","button","_c4","RepostButton","_c5","EmptyFeed","_c6","LoadingIndicator","_c7","ErrorMessage","_c8","Filters","_c9","FilterButton","$active","_c10","LoadingMoreIndicator","_c11","TrendingPage","_s","memes","setMemes","loading","setLoading","loadingMore","setLoadingMore","error","setError","filter","setFilter","page","setPage","hasMore","setHasMore","user","logout","navigate","fetchTrendingMemes","pageNum","isRefreshing","data","get","prev","length","_error$response","console","response","status","handleLoadMore","infiniteScrollRef","onLoadMore","handleRefresh","handleRepost","memeId","post","_error$response2","filteredMemes","meme","mediaType","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","className","map","index","_meme$author","marginBottom","ref","commentCount","_id","author","repostCount","_c12","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Ãrea de Trabalho/client2/src/pages/TrendingPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport UploadButton from '../components/UploadButton';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\n\nconst FeedContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: var(--background);\n`;\n\nconst FeedHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FeedTitle = styled.h1`\n  font-size: 24px;\n  color: var(--text);\n`;\n\nconst RefreshButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst RepostButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 8px 16px;\n  border-radius: var(--radius-lg);\n  cursor: pointer;\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-size: 14px;\n  color: var(--text);\n  transition: var(--transition);\n  \n  &:hover {\n    background: var(--border-light);\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst EmptyFeed = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow);\n  color: var(--text);\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: var(--radius-md);\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: var(--radius-lg);\n  border: none;\n  background: ${({ $active }) => $active ? 'var(--primary)' : 'var(--card-bg)'};\n  color: ${({ $active }) => $active ? 'var(--text-inverse)' : 'var(--text)'};\n  cursor: pointer;\n  transition: var(--transition);\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n\n  &:hover {\n    background: ${({ $active }) => $active ? 'var(--primary-hover)' : 'var(--border-light)'};\n    box-shadow: var(--shadow-hover);\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst LoadingMoreIndicator = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;\n\nconst TrendingPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchTrendingMemes = useCallback(async (pageNum = 1, isRefreshing = false) => {\n    try {\n      if (pageNum === 1) setLoading(true);\n      else setLoadingMore(true);\n      \n      setError(null);\n      const { data } = await api.get(`/feed/trending?page=${pageNum}&limit=10`);\n      \n      if (isRefreshing) {\n        setMemes(data.data);\n      } else {\n        setMemes(prev => pageNum === 1 ? data.data : [...prev, ...data.data]);\n      }\n      \n      setHasMore(data.data.length >= 10);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error fetching trending memes:', error);\n      setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  }, [logout, navigate]);\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && !loadingMore && hasMore) {\n      fetchTrendingMemes(page + 1);\n    }\n  }, [fetchTrendingMemes, hasMore, loading, loadingMore, page]);\n\n  const [infiniteScrollRef] = useInfiniteScroll({\n    loading,\n    hasMore,\n    onLoadMore: handleLoadMore,\n  });\n\n  const handleRefresh = useCallback(() => {\n    fetchTrendingMemes(1, true);\n  }, [fetchTrendingMemes]);\n\n  const handleRepost = async (memeId) => {\n    try {\n      await api.post(`/memes/${memeId}/repost`);\n      handleRefresh(); // Atualiza a lista apÃ³s repostar\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n      setError('Erro ao repostar');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTrendingMemes();\n  }, [fetchTrendingMemes]);\n\n  const filteredMemes = memes.filter(meme => {\n    if (filter === 'all') return true;\n    if (filter === 'images') return meme.mediaType === 'image';\n    if (filter === 'videos') return meme.mediaType === 'video';\n    return true;\n  });\n\n  if (loading && page === 1) {\n    return (\n      <FeedContainer>\n        <LoadingIndicator>Carregando memes em destaque...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer>\n        <ErrorMessage>\n          {error}\n          <RefreshButton onClick={handleRefresh}>\n            <FiRefreshCw /> Tentar novamente\n          </RefreshButton>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer>\n      <FeedHeader>\n        <FeedTitle>Destaques - Os memes mais populares</FeedTitle>\n        <div>\n          <UploadButton />\n          <RefreshButton onClick={handleRefresh}>\n            <FiRefreshCw /> Atualizar\n          </RefreshButton>\n        </div>\n      </FeedHeader>\n\n      <Filters>\n        <FilterButton \n          $active={filter === 'all'}\n          onClick={() => setFilter('all')}\n        >\n          Todos\n        </FilterButton>\n        <FilterButton \n          $active={filter === 'images'}\n          onClick={() => setFilter('images')}\n        >\n          Imagens\n        </FilterButton>\n        <FilterButton \n          $active={filter === 'videos'}\n          onClick={() => setFilter('videos')}\n        >\n          VÃ­deos\n        </FilterButton>\n      </Filters>\n      \n      {filteredMemes.length === 0 ? (\n        <EmptyFeed>\n          <h3>Nenhum meme em destaque encontrado</h3>\n          <p>Que tal criar o primeiro?</p>\n          <UploadButton style={{ marginTop: '20px' }} />\n        </EmptyFeed>\n      ) : (\n        <div className=\"feed-list\">\n          {filteredMemes.map((meme, index) => (\n            <div \n              key={`${meme._id}-${index}`} \n              style={{ marginBottom: '24px' }}\n              ref={index === filteredMemes.length - 1 ? infiniteScrollRef : null}\n            >\n              <MemeCard   meme={meme} commentCount={meme.commentCount || 0}/>\n              {user && user._id !== meme.author?._id && (\n                <RepostButton onClick={() => handleRepost(meme._id)}>\n                  <span>ð</span> Repostar ({meme.repostCount || 0})\n                </RepostButton>\n              )}\n            </div>\n          ))}\n          \n          {loadingMore && (\n            <LoadingMoreIndicator>\n              <FiRefreshCw className=\"spin\" /> Carregando mais memes...\n            </LoadingMoreIndicator>\n          )}\n          \n          {!hasMore && filteredMemes.length > 0 && (\n            <LoadingMoreIndicator>\n              VocÃª chegou ao fim dos memes em destaque!\n            </LoadingMoreIndicator>\n          )}\n        </div>\n      )}\n    </FeedContainer>\n  );\n};\n\nexport default TrendingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}