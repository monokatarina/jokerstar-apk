{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-x: auto;\n  overflow-y: hidden;\n  scroll-snap-type: x proximity;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  touch-action: pan-x;\n  overscroll-behavior-x: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;const FeedGrid=styled.div`\n  display: inline-flex;\n  height: 100%;\n  padding-left: 8px; /* Espaço inicial */\n`;const MemeWrapper=styled.div`\n  position: relative;\n  width: calc(100vw - 32px); /* Largura menos o espaçamento */\n  height: calc(100vh - 32px); /* Altura menos o espaçamento */\n  margin: 16px 8px; /* Espaçamento entre posts */\n  scroll-snap-align: center; /* Alinhar no centro para melhor snap */\n  flex: 0 0 auto;\n  overflow: hidden;\n  border-radius: 12px;\n  background: var(--card-bg);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n\n  /* Efeito visual durante o scroll */\n  &:not(.active) {\n    opacity: 0.85;\n    transform: scale(0.95);\n  }\n\n  &.active {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;const EmptyFeed=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;const LoadingIndicator=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  color: var(--text-light);\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n`;const ErrorMessage=styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const feedContainerRef=useRef(null);const{user,logout}=useAuth();const navigate=useNavigate();const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleMemeDeleted=deletedMemeId=>{setMemes(prevMemes=>prevMemes.filter(meme=>meme._id!==deletedMemeId));};const handleScroll=()=>{if(feedContainerRef.current){const container=feedContainerRef.current;const scrollLeft=container.scrollLeft;const width=container.offsetWidth;const newIndex=Math.round(scrollLeft/width);// Adicionando resistência - só atualiza o índice se estiver perto o suficiente\nconst scrollProgress=scrollLeft%width/width;const threshold=0.3;// 30% de threshold (aumente para mais resistência)\nif(scrollProgress>1-threshold||scrollProgress<threshold){setCurrentIndex(newIndex);// Snap programático para garantir alinhamento\nif(Math.abs(scrollProgress-0.5)>threshold){container.scrollTo({left:width*newIndex,behavior:'smooth'});}}}};const scrollToIndex=index=>{if(feedContainerRef.current){const width=feedContainerRef.current.offsetWidth;feedContainerRef.current.scrollTo({left:width*index,behavior:'smooth'});}};const handleTouchMove=e=>{if(feedContainerRef.current){// Reduzindo a velocidade do scroll\ne.preventDefault();const container=feedContainerRef.current;const touch=e.touches[0];const moveX=touch.clientX;if(container.startX===undefined){container.startX=touch.clientX;container.scrollLeftStart=container.scrollLeft;}const deltaX=container.startX-moveX;container.scrollLeft=container.scrollLeftStart+deltaX*0.7;// Fator de redução (0.7 = 30% mais lento)\n}};const handleTouchStart=e=>{if(feedContainerRef.current){const container=feedContainerRef.current;container.startX=e.touches[0].clientX;container.scrollLeftStart=container.scrollLeft;}};useEffect(()=>{const container=feedContainerRef.current;if(container){container.addEventListener('scroll',handleScroll);container.addEventListener('touchmove',handleTouchMove,{passive:false});container.addEventListener('touchstart',handleTouchStart);return()=>{container.removeEventListener('scroll',handleScroll);container.removeEventListener('touchmove',handleTouchMove);container.removeEventListener('touchstart',handleTouchStart);};}},[]);useEffect(()=>{fetchMemes();},[]);if(loading){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando...\"})});}if(error){return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})});}return/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(FeedGrid,{children:memes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Seja o primeiro a compartilhar sua cria\\xE7\\xE3o!\"}),/*#__PURE__*/_jsx(UploadButton,{size:\"large\"})]}):memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeWrapper,{className:index===currentIndex?'active':'',children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,onDelete:handleMemeDeleted,onCommentCountChange:newCount=>{setMemes(prevMemes=>prevMemes.map(m=>m._id===meme._id?{...m,commentCount:newCount}:m));},isSquareView:false,isActive:index===currentIndex,style:{width:'100%',height:'90%'}})},meme._id))})});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","api","MemeCard","UploadButton","useNavigate","useAuth","FiRefreshCw","jsx","_jsx","jsxs","_jsxs","FeedContainer","div","FeedGrid","MemeWrapper","EmptyFeed","LoadingIndicator","ErrorMessage","FeedPage","memes","setMemes","loading","setLoading","error","setError","currentIndex","setCurrentIndex","feedContainerRef","user","logout","navigate","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleMemeDeleted","deletedMemeId","prevMemes","_id","handleScroll","current","container","scrollLeft","width","offsetWidth","newIndex","Math","round","scrollProgress","threshold","abs","scrollTo","left","behavior","scrollToIndex","index","handleTouchMove","e","preventDefault","touch","touches","moveX","clientX","startX","undefined","scrollLeftStart","deltaX","handleTouchStart","addEventListener","passive","removeEventListener","ref","children","onClick","length","size","map","className","onDelete","onCommentCountChange","newCount","m","commentCount","isSquareView","isActive","style","height"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport UploadButton from '../components/UploadButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-x: auto;\n  overflow-y: hidden;\n  scroll-snap-type: x proximity;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n  touch-action: pan-x;\n  overscroll-behavior-x: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst FeedGrid = styled.div`\n  display: inline-flex;\n  height: 100%;\n  padding-left: 8px; /* Espaço inicial */\n`;\n\nconst MemeWrapper = styled.div`\n  position: relative;\n  width: calc(100vw - 32px); /* Largura menos o espaçamento */\n  height: calc(100vh - 32px); /* Altura menos o espaçamento */\n  margin: 16px 8px; /* Espaçamento entre posts */\n  scroll-snap-align: center; /* Alinhar no centro para melhor snap */\n  flex: 0 0 auto;\n  overflow: hidden;\n  border-radius: 12px;\n  background: var(--card-bg);\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  transition: transform 0.2s ease;\n\n  /* Efeito visual durante o scroll */\n  &:not(.active) {\n    opacity: 0.85;\n    transform: scale(0.95);\n  }\n\n  &.active {\n    opacity: 1;\n    transform: scale(1);\n  }\n`;\n\nconst EmptyFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  color: var(--text-light);\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: calc(100vw - 16px);\n  margin: 0 8px;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: center;\n  background: var(--card-bg);\n  border-radius: 12px;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const feedContainerRef = useRef(null);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n      \n      const validMemes = Array.isArray(data?.data) \n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n      \n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prevMemes => prevMemes.filter(meme => meme._id !== deletedMemeId));\n  };\n\n  const handleScroll = () => {\n    if (feedContainerRef.current) {\n      const container = feedContainerRef.current;\n      const scrollLeft = container.scrollLeft;\n      const width = container.offsetWidth;\n      const newIndex = Math.round(scrollLeft / width);\n      \n      // Adicionando resistência - só atualiza o índice se estiver perto o suficiente\n      const scrollProgress = (scrollLeft % width) / width;\n      const threshold = 0.3; // 30% de threshold (aumente para mais resistência)\n      \n      if (scrollProgress > 1 - threshold || scrollProgress < threshold) {\n        setCurrentIndex(newIndex);\n        \n        // Snap programático para garantir alinhamento\n        if (Math.abs(scrollProgress - 0.5) > threshold) {\n          container.scrollTo({\n            left: width * newIndex,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }\n  };\n\n  const scrollToIndex = (index) => {\n    if (feedContainerRef.current) {\n      const width = feedContainerRef.current.offsetWidth;\n      feedContainerRef.current.scrollTo({\n        left: width * index,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n\n  const handleTouchMove = (e) => {\n    if (feedContainerRef.current) {\n      // Reduzindo a velocidade do scroll\n      e.preventDefault();\n      const container = feedContainerRef.current;\n      const touch = e.touches[0];\n      const moveX = touch.clientX;\n      \n      if (container.startX === undefined) {\n        container.startX = touch.clientX;\n        container.scrollLeftStart = container.scrollLeft;\n      }\n      \n      const deltaX = container.startX - moveX;\n      container.scrollLeft = container.scrollLeftStart + deltaX * 0.7; // Fator de redução (0.7 = 30% mais lento)\n    }\n  };\n\n  const handleTouchStart = (e) => {\n    if (feedContainerRef.current) {\n      const container = feedContainerRef.current;\n      container.startX = e.touches[0].clientX;\n      container.scrollLeftStart = container.scrollLeft;\n    }\n  };\n\n  useEffect(() => {\n    const container = feedContainerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n      container.addEventListener('touchmove', handleTouchMove, { passive: false });\n      container.addEventListener('touchstart', handleTouchStart);\n      \n      return () => {\n        container.removeEventListener('scroll', handleScroll);\n        container.removeEventListener('touchmove', handleTouchMove);\n        container.removeEventListener('touchstart', handleTouchStart);\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <LoadingIndicator>Carregando...</LoadingIndicator>\n      </FeedContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <FeedContainer ref={feedContainerRef}>\n        <ErrorMessage>\n          {error}\n          <button onClick={fetchMemes}>\n            <FiRefreshCw /> Tentar novamente\n          </button>\n        </ErrorMessage>\n      </FeedContainer>\n    );\n  }\n\n  return (\n    <FeedContainer ref={feedContainerRef}>\n      <FeedGrid>\n        {memes.length === 0 ? (\n          <EmptyFeed>\n            <h3>Nenhum meme encontrado</h3>\n            <p>Seja o primeiro a compartilhar sua criação!</p>\n            <UploadButton size=\"large\" />\n          </EmptyFeed>\n        ) : (\n          memes.map((meme, index) => (\n            <MemeWrapper \n              key={meme._id}\n              className={index === currentIndex ? 'active' : ''}\n            >\n              <MemeCard \n                meme={meme}\n                onDelete={handleMemeDeleted}\n                onCommentCountChange={(newCount) => {\n                  setMemes(prevMemes => prevMemes.map(m => \n                    m._id === meme._id ? { ...m, commentCount: newCount } : m\n                  ))}\n                }\n                isSquareView={false}\n                isActive={index === currentIndex}\n                style={{\n                  width: '100%',\n                  height: '90%',\n                }}\n              />\n            </MemeWrapper>\n          ))\n        )}\n      </FeedGrid>\n    </FeedContainer>\n  );\n};\n\nexport default FeedPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,OAASC,WAAW,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,aAAa,CAAGX,MAAM,CAACY,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAGb,MAAM,CAACY,GAAG;AAC3B;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGd,MAAM,CAACY,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAG,SAAS,CAAGf,MAAM,CAACY,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAGhB,MAAM,CAACY,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAK,YAAY,CAAGjB,MAAM,CAACY,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAM,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}