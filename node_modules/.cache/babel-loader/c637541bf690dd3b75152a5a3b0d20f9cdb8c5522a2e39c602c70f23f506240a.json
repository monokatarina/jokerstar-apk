{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import UploadButton from'../components/UploadButton';import useInfiniteScroll from'../hooks/useInfiniteScroll';import Navbar from'../components/Navbar/Navbar';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  min-height: 100vh;\n  padding: 16px;\n  padding-top: calc(60px + env(safe-area-inset-top)); // Ajuste para navbar e status bar\n  padding-bottom: calc(20px + env(safe-area-inset-bottom));\n  background-color: var(--background);\n`;const FeedHeader=styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;const FeedTitle=styled.h1`\n  font-size: 1.5rem;\n  color: var(--text);\n  margin: 0;\n`;const ActionButtons=styled.div`\n  display: flex;\n  gap: 12px;\n`;const RefreshButton=styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 10px 16px;\n  border-radius: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: all 0.2s ease;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n    background: var(--border-light);\n  }\n`;const RepostButton=styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 10px 16px;\n  border-radius: 24px;\n  cursor: pointer;\n  margin-top: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: all 0.2s ease;\n  width: 100%;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n    background: var(--border-light);\n  }\n`;const EmptyFeed=styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: 12px;\n  box-shadow: var(--shadow);\n  color: var(--text);\n  margin-top: 20px;\n`;const LoadingIndicator=styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;const ErrorMessage=styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: 12px;\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;const Filters=styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 20px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;const FilterButton=styled.button`\n  padding: 10px 16px;\n  border-radius: 24px;\n  border: none;\n  background: ${_ref=>{let{$active}=_ref;return $active?'var(--primary)':'var(--card-bg)';}};\n  color: ${_ref2=>{let{$active}=_ref2;return $active?'var(--text-inverse)':'var(--text)';}};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n  white-space: nowrap;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n`;const LoadingMoreIndicator=styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;const MemeList=styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 20px;\n`;const TrendingPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[loadingMore,setLoadingMore]=useState(false);const[error,setError]=useState(null);const[filter,setFilter]=useState('all');const[page,setPage]=useState(1);const[hasMore,setHasMore]=useState(true);const{user,logout}=useAuth();const navigate=useNavigate();const fetchTrendingMemes=useCallback(async function(){let pageNum=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let isRefreshing=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;try{if(pageNum===1)setLoading(true);else setLoadingMore(true);setError(null);const{data}=await api.get(`/feed/trending?page=${pageNum}&limit=10`);if(isRefreshing){setMemes(data.data);}else{setMemes(prev=>pageNum===1?data.data:[...prev,...data.data]);}setHasMore(data.data.length>=10);setPage(pageNum);}catch(error){var _error$response;console.error('Error fetching trending memes:',error);setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);setLoadingMore(false);}},[logout,navigate]);const handleLoadMore=useCallback(()=>{if(!loading&&!loadingMore&&hasMore){fetchTrendingMemes(page+1);}},[fetchTrendingMemes,hasMore,loading,loadingMore,page]);const[infiniteScrollRef]=useInfiniteScroll({loading,hasMore,onLoadMore:handleLoadMore,threshold:200});const handleRefresh=useCallback(()=>{fetchTrendingMemes(1,true);},[fetchTrendingMemes]);const handleRepost=async memeId=>{try{await api.post(`/memes/${memeId}/repost`);handleRefresh();}catch(error){var _error$response2;console.error('Erro ao repostar:',error);setError('Erro ao repostar');if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){await logout();navigate('/login');}}};useEffect(()=>{fetchTrendingMemes();},[fetchTrendingMemes]);const filteredMemes=memes.filter(meme=>{if(filter==='all')return true;if(filter==='images')return meme.mediaType==='image';if(filter==='videos')return meme.mediaType==='video';return true;});if(loading&&page===1){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando memes em destaque...\"})})]});}if(error){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(FeedContainer,{children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(RefreshButton,{onClick:handleRefresh,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(FeedContainer,{children:[/*#__PURE__*/_jsxs(FeedHeader,{children:[/*#__PURE__*/_jsx(FeedTitle,{children:\"Destaques - Os memes mais populares\"}),/*#__PURE__*/_jsxs(ActionButtons,{children:[/*#__PURE__*/_jsx(UploadButton,{}),/*#__PURE__*/_jsx(RefreshButton,{onClick:handleRefresh,children:/*#__PURE__*/_jsx(FiRefreshCw,{size:18})})]})]}),/*#__PURE__*/_jsxs(Filters,{children:[/*#__PURE__*/_jsx(FilterButton,{$active:filter==='all',onClick:()=>setFilter('all'),children:\"Todos\"}),/*#__PURE__*/_jsx(FilterButton,{$active:filter==='images',onClick:()=>setFilter('images'),children:\"Imagens\"}),/*#__PURE__*/_jsx(FilterButton,{$active:filter==='videos',onClick:()=>setFilter('videos'),children:\"V\\xEDdeos\"})]}),filteredMemes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme em destaque encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Que tal criar o primeiro?\"}),/*#__PURE__*/_jsx(UploadButton,{style:{marginTop:'20px'}})]}):/*#__PURE__*/_jsxs(MemeList,{children:[filteredMemes.map((meme,index)=>{var _meme$author;return/*#__PURE__*/_jsxs(\"div\",{ref:index===filteredMemes.length-1?infiniteScrollRef:null,children:[/*#__PURE__*/_jsx(MemeCard,{meme:meme,commentCount:meme.commentCount||0}),user&&user._id!==((_meme$author=meme.author)===null||_meme$author===void 0?void 0:_meme$author._id)&&/*#__PURE__*/_jsxs(RepostButton,{onClick:()=>handleRepost(meme._id),children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDD01\"}),\" Repostar (\",meme.repostCount||0,\")\"]})]},`${meme._id}-${index}`);}),loadingMore&&/*#__PURE__*/_jsxs(LoadingMoreIndicator,{children:[/*#__PURE__*/_jsx(FiRefreshCw,{className:\"spin\"}),\" Carregando mais memes...\"]}),!hasMore&&filteredMemes.length>0&&/*#__PURE__*/_jsx(LoadingMoreIndicator,{children:\"Voc\\xEA chegou ao fim dos memes em destaque!\"})]})]})]});};export default TrendingPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","api","MemeCard","useNavigate","useAuth","FiRefreshCw","UploadButton","useInfiniteScroll","Navbar","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FeedContainer","div","FeedHeader","FeedTitle","h1","ActionButtons","RefreshButton","button","RepostButton","EmptyFeed","LoadingIndicator","ErrorMessage","Filters","FilterButton","_ref","$active","_ref2","LoadingMoreIndicator","MemeList","TrendingPage","memes","setMemes","loading","setLoading","loadingMore","setLoadingMore","error","setError","filter","setFilter","page","setPage","hasMore","setHasMore","user","logout","navigate","fetchTrendingMemes","pageNum","arguments","length","undefined","isRefreshing","data","get","prev","_error$response","console","response","status","handleLoadMore","infiniteScrollRef","onLoadMore","threshold","handleRefresh","handleRepost","memeId","post","_error$response2","filteredMemes","meme","mediaType","children","onClick","size","style","marginTop","map","index","_meme$author","ref","commentCount","_id","author","repostCount","className"],"sources":["C:/Users/drrod/OneDrive/√Årea de Trabalho/jokersta_apk/src/pages/TrendingPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport UploadButton from '../components/UploadButton';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport Navbar from '../components/Navbar/Navbar';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  padding: 16px;\n  padding-top: calc(60px + env(safe-area-inset-top)); // Ajuste para navbar e status bar\n  padding-bottom: calc(20px + env(safe-area-inset-bottom));\n  background-color: var(--background);\n`;\n\nconst FeedHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nconst FeedTitle = styled.h1`\n  font-size: 1.5rem;\n  color: var(--text);\n  margin: 0;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 12px;\n`;\n\nconst RefreshButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 10px 16px;\n  border-radius: 24px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: all 0.2s ease;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n    background: var(--border-light);\n  }\n`;\n\nconst RepostButton = styled.button`\n  background: var(--card-bg);\n  border: 1px solid var(--border-light);\n  padding: 10px 16px;\n  border-radius: 24px;\n  cursor: pointer;\n  margin-top: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-size: 14px;\n  color: var(--text);\n  transition: all 0.2s ease;\n  width: 100%;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n    background: var(--border-light);\n  }\n`;\n\nconst EmptyFeed = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  background: var(--card-bg);\n  border-radius: 12px;\n  box-shadow: var(--shadow);\n  color: var(--text);\n  margin-top: 20px;\n`;\n\nconst LoadingIndicator = styled.div`\n  text-align: center;\n  padding: 40px;\n  font-size: 18px;\n  color: var(--text-light);\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  background: var(--card-bg);\n  color: var(--dislike-color);\n  border-radius: 12px;\n  margin: 20px 0;\n  box-shadow: var(--shadow);\n  border: 1px solid var(--border-light);\n`;\n\nconst Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 20px;\n  overflow-x: auto;\n  padding-bottom: 8px;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst FilterButton = styled.button`\n  padding: 10px 16px;\n  border-radius: 24px;\n  border: none;\n  background: ${({ $active }) => $active ? 'var(--primary)' : 'var(--card-bg)'};\n  color: ${({ $active }) => $active ? 'var(--text-inverse)' : 'var(--text)'};\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 1px solid var(--border-light);\n  font-weight: 500;\n  white-space: nowrap;\n  touch-action: manipulation;\n  \n  &:active {\n    transform: scale(0.95);\n  }\n`;\n\nconst LoadingMoreIndicator = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: var(--text-light);\n`;\n\nconst MemeList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 20px;\n`;\n\nconst TrendingPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [error, setError] = useState(null);\n  const [filter, setFilter] = useState('all');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const fetchTrendingMemes = useCallback(async (pageNum = 1, isRefreshing = false) => {\n    try {\n      if (pageNum === 1) setLoading(true);\n      else setLoadingMore(true);\n      \n      setError(null);\n      const { data } = await api.get(`/feed/trending?page=${pageNum}&limit=10`);\n      \n      if (isRefreshing) {\n        setMemes(data.data);\n      } else {\n        setMemes(prev => pageNum === 1 ? data.data : [...prev, ...data.data]);\n      }\n      \n      setHasMore(data.data.length >= 10);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error fetching trending memes:', error);\n      setError('Erro ao carregar os memes em destaque. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  }, [logout, navigate]);\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && !loadingMore && hasMore) {\n      fetchTrendingMemes(page + 1);\n    }\n  }, [fetchTrendingMemes, hasMore, loading, loadingMore, page]);\n\n  const [infiniteScrollRef] = useInfiniteScroll({\n    loading,\n    hasMore,\n    onLoadMore: handleLoadMore,\n    threshold: 200,\n  });\n\n  const handleRefresh = useCallback(() => {\n    fetchTrendingMemes(1, true);\n  }, [fetchTrendingMemes]);\n\n  const handleRepost = async (memeId) => {\n    try {\n      await api.post(`/memes/${memeId}/repost`);\n      handleRefresh();\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n      setError('Erro ao repostar');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchTrendingMemes();\n  }, [fetchTrendingMemes]);\n\n  const filteredMemes = memes.filter(meme => {\n    if (filter === 'all') return true;\n    if (filter === 'images') return meme.mediaType === 'image';\n    if (filter === 'videos') return meme.mediaType === 'video';\n    return true;\n  });\n\n  if (loading && page === 1) {\n    return (\n      <>\n        <Navbar />\n        <FeedContainer>\n          <LoadingIndicator>Carregando memes em destaque...</LoadingIndicator>\n        </FeedContainer>\n      </>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <Navbar />\n        <FeedContainer>\n          <ErrorMessage>\n            {error}\n            <RefreshButton onClick={handleRefresh}>\n              <FiRefreshCw /> Tentar novamente\n            </RefreshButton>\n          </ErrorMessage>\n        </FeedContainer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navbar />\n      <FeedContainer>\n        <FeedHeader>\n          <FeedTitle>Destaques - Os memes mais populares</FeedTitle>\n          <ActionButtons>\n            <UploadButton />\n            <RefreshButton onClick={handleRefresh}>\n              <FiRefreshCw size={18} />\n            </RefreshButton>\n          </ActionButtons>\n        </FeedHeader>\n\n        <Filters>\n          <FilterButton \n            $active={filter === 'all'}\n            onClick={() => setFilter('all')}\n          >\n            Todos\n          </FilterButton>\n          <FilterButton \n            $active={filter === 'images'}\n            onClick={() => setFilter('images')}\n          >\n            Imagens\n          </FilterButton>\n          <FilterButton \n            $active={filter === 'videos'}\n            onClick={() => setFilter('videos')}\n          >\n            V√≠deos\n          </FilterButton>\n        </Filters>\n        \n        {filteredMemes.length === 0 ? (\n          <EmptyFeed>\n            <h3>Nenhum meme em destaque encontrado</h3>\n            <p>Que tal criar o primeiro?</p>\n            <UploadButton style={{ marginTop: '20px' }} />\n          </EmptyFeed>\n        ) : (\n          <MemeList>\n            {filteredMemes.map((meme, index) => (\n              <div \n                key={`${meme._id}-${index}`}\n                ref={index === filteredMemes.length - 1 ? infiniteScrollRef : null}\n              >\n                <MemeCard meme={meme} commentCount={meme.commentCount || 0} />\n                {user && user._id !== meme.author?._id && (\n                  <RepostButton onClick={() => handleRepost(meme._id)}>\n                    <span>üîÅ</span> Repostar ({meme.repostCount || 0})\n                  </RepostButton>\n                )}\n              </div>\n            ))}\n            \n            {loadingMore && (\n              <LoadingMoreIndicator>\n                <FiRefreshCw className=\"spin\" /> Carregando mais memes...\n              </LoadingMoreIndicator>\n            )}\n            \n            {!hasMore && filteredMemes.length > 0 && (\n              <LoadingMoreIndicator>\n                Voc√™ chegou ao fim dos memes em destaque!\n              </LoadingMoreIndicator>\n            )}\n          </MemeList>\n        )}\n      </FeedContainer>\n    </>\n  );\n};\n\nexport default TrendingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}