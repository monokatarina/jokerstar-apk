{"ast":null,"code":"import{LocalNotifications}from'@capacitor/local-notifications';import{Capacitor}from'@capacitor/core';export const initNotifications=async()=>{if(!Capacitor.isNativePlatform()){// Configuração para web\nif('Notification'in window&&Notification.permission!=='denied'){await Notification.requestPermission();}return;}// Configuração para mobile\nconst permissionStatus=await LocalNotifications.requestPermissions();if(permissionStatus.display!=='granted'){throw new Error('Permissão negada para notificações');}// Configura listeners para notificações locais\nLocalNotifications.addListener('localNotificationActionPerformed',notification=>{var _notification$notific;console.log('Notificação local clicada:',notification);// Navegação baseada nos dados extras\nif((_notification$notific=notification.notification.extra)!==null&&_notification$notific!==void 0&&_notification$notific.memeId){window.location.href=`/memes/${notification.notification.extra.memeId}`;}});};export const showLocalNotification=async function(title,body){let data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(Capacitor.isNativePlatform()){await LocalNotifications.schedule({notifications:[{title,body,id:new Date().getTime(),extra:data,smallIcon:'ic_stat_icon',// Nome do ícone (deve estar nos recursos Android)\niconColor:'#121212'// Cor do ícone\n}]});}else if('Notification'in window&&Notification.permission==='granted'){// Fallback para web\nconst notification=new Notification(title,{body,data,icon:'/logo192.png'});notification.onclick=()=>{if(data.memeId){window.location.href=`/memes/${data.memeId}`;}};}};","map":{"version":3,"names":["LocalNotifications","Capacitor","initNotifications","isNativePlatform","window","Notification","permission","requestPermission","permissionStatus","requestPermissions","display","Error","addListener","notification","_notification$notific","console","log","extra","memeId","location","href","showLocalNotification","title","body","data","arguments","length","undefined","schedule","notifications","id","Date","getTime","smallIcon","iconColor","icon","onclick"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/utils/notifications.js"],"sourcesContent":["import { LocalNotifications } from '@capacitor/local-notifications';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nexport const initNotifications = async () => {\r\n  if (!Capacitor.isNativePlatform()) {\r\n    // Configuração para web\r\n    if ('Notification' in window && Notification.permission !== 'denied') {\r\n      await Notification.requestPermission();\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Configuração para mobile\r\n  const permissionStatus = await LocalNotifications.requestPermissions();\r\n  \r\n  if (permissionStatus.display !== 'granted') {\r\n    throw new Error('Permissão negada para notificações');\r\n  }\r\n\r\n  // Configura listeners para notificações locais\r\n  LocalNotifications.addListener('localNotificationActionPerformed', (notification) => {\r\n    console.log('Notificação local clicada:', notification);\r\n    // Navegação baseada nos dados extras\r\n    if (notification.notification.extra?.memeId) {\r\n      window.location.href = `/memes/${notification.notification.extra.memeId}`;\r\n    }\r\n  });\r\n};\r\n\r\nexport const showLocalNotification = async (title, body, data = {}) => {\r\n  if (Capacitor.isNativePlatform()) {\r\n    await LocalNotifications.schedule({\r\n      notifications: [{\r\n        title,\r\n        body,\r\n        id: new Date().getTime(),\r\n        extra: data,\r\n        smallIcon: 'ic_stat_icon', // Nome do ícone (deve estar nos recursos Android)\r\n        iconColor: '#121212' // Cor do ícone\r\n      }]\r\n    });\r\n  } else if ('Notification' in window && Notification.permission === 'granted') {\r\n    // Fallback para web\r\n    const notification = new Notification(title, {\r\n      body,\r\n      data,\r\n      icon: '/logo192.png'\r\n    });\r\n    \r\n    notification.onclick = () => {\r\n      if (data.memeId) {\r\n        window.location.href = `/memes/${data.memeId}`;\r\n      }\r\n    };\r\n  }\r\n};"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,gCAAgC,CACnE,OAASC,SAAS,KAAQ,iBAAiB,CAE3C,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CAACD,SAAS,CAACE,gBAAgB,CAAC,CAAC,CAAE,CACjC;AACA,GAAI,cAAc,EAAI,CAAAC,MAAM,EAAIC,YAAY,CAACC,UAAU,GAAK,QAAQ,CAAE,CACpE,KAAM,CAAAD,YAAY,CAACE,iBAAiB,CAAC,CAAC,CACxC,CACA,OACF,CAEA;AACA,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAR,kBAAkB,CAACS,kBAAkB,CAAC,CAAC,CAEtE,GAAID,gBAAgB,CAACE,OAAO,GAAK,SAAS,CAAE,CAC1C,KAAM,IAAI,CAAAC,KAAK,CAAC,oCAAoC,CAAC,CACvD,CAEA;AACAX,kBAAkB,CAACY,WAAW,CAAC,kCAAkC,CAAGC,YAAY,EAAK,KAAAC,qBAAA,CACnFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEH,YAAY,CAAC,CACvD;AACA,IAAAC,qBAAA,CAAID,YAAY,CAACA,YAAY,CAACI,KAAK,UAAAH,qBAAA,WAA/BA,qBAAA,CAAiCI,MAAM,CAAE,CAC3Cd,MAAM,CAACe,QAAQ,CAACC,IAAI,CAAG,UAAUP,YAAY,CAACA,YAAY,CAACI,KAAK,CAACC,MAAM,EAAE,CAC3E,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAG,qBAAqB,CAAG,cAAAA,CAAOC,KAAK,CAAEC,IAAI,CAAgB,IAAd,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAChE,GAAIxB,SAAS,CAACE,gBAAgB,CAAC,CAAC,CAAE,CAChC,KAAM,CAAAH,kBAAkB,CAAC4B,QAAQ,CAAC,CAChCC,aAAa,CAAE,CAAC,CACdP,KAAK,CACLC,IAAI,CACJO,EAAE,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CACxBf,KAAK,CAAEO,IAAI,CACXS,SAAS,CAAE,cAAc,CAAE;AAC3BC,SAAS,CAAE,SAAU;AACvB,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI,cAAc,EAAI,CAAA9B,MAAM,EAAIC,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CAC5E;AACA,KAAM,CAAAO,YAAY,CAAG,GAAI,CAAAR,YAAY,CAACiB,KAAK,CAAE,CAC3CC,IAAI,CACJC,IAAI,CACJW,IAAI,CAAE,cACR,CAAC,CAAC,CAEFtB,YAAY,CAACuB,OAAO,CAAG,IAAM,CAC3B,GAAIZ,IAAI,CAACN,MAAM,CAAE,CACfd,MAAM,CAACe,QAAQ,CAACC,IAAI,CAAG,UAAUI,IAAI,CAACN,MAAM,EAAE,CAChD,CACF,CAAC,CACH,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}