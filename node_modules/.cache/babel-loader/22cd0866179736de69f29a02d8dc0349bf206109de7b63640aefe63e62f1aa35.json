{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeThumbnail.jsx\";\n// Substitua o conteúdo do arquivo por:\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaPlay } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThumbnailContainer = styled(Link)`\n  display: block;\n  border-radius: 8px;\n  overflow: hidden;\n  position: relative;\n  aspect-ratio: 1;\n  background: #f5f5f5;\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\n  }\n`;\n_c = ThumbnailContainer;\nconst ThumbnailImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s;\n`;\n_c2 = ThumbnailImage;\nconst VideoOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  transition: opacity 0.3s;\n  \n  ${ThumbnailContainer}:hover & {\n    opacity: 1;\n  }\n`;\n_c3 = VideoOverlay;\nconst PlayIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  background: rgba(255, 69, 0, 0.9);\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n`;\n_c4 = PlayIcon;\nconst RepostBadge = styled.div`\n  position: absolute;\n  top: 5px;\n  left: 5px;\n  background: rgba(0,0,0,0.7);\n  color: white;\n  padding: 3px 6px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  z-index: 1;\n`;\n_c5 = RepostBadge;\nconst MemeThumbnail = ({\n  meme\n}) => {\n  const getMediaUrl = () => {\n    if (!meme.mediaUrl) return 'https://placehold.co/600x400?text=Imagem+não+carregada';\n    if (meme.mediaUrl.startsWith('http')) return meme.mediaUrl;\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`;\n  };\n  return /*#__PURE__*/_jsxDEV(ThumbnailContainer, {\n    to: `/memes/${meme._id}`,\n    children: [/*#__PURE__*/_jsxDEV(ThumbnailImage, {\n      src: getMediaUrl(),\n      alt: meme.caption || 'Meme thumbnail',\n      crossOrigin: \"anonymous\",\n      onError: e => {\n        e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n        e.target.onerror = null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), meme.mediaType === 'video' && /*#__PURE__*/_jsxDEV(VideoOverlay, {\n      children: /*#__PURE__*/_jsxDEV(PlayIcon, {\n        children: /*#__PURE__*/_jsxDEV(FaPlay, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), meme.isRepost && /*#__PURE__*/_jsxDEV(RepostBadge, {\n      children: \"Repost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c6 = MemeThumbnail;\nexport default MemeThumbnail;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ThumbnailContainer\");\n$RefreshReg$(_c2, \"ThumbnailImage\");\n$RefreshReg$(_c3, \"VideoOverlay\");\n$RefreshReg$(_c4, \"PlayIcon\");\n$RefreshReg$(_c5, \"RepostBadge\");\n$RefreshReg$(_c6, \"MemeThumbnail\");","map":{"version":3,"names":["styled","Link","FaPlay","jsxDEV","_jsxDEV","ThumbnailContainer","_c","ThumbnailImage","img","_c2","VideoOverlay","div","_c3","PlayIcon","_c4","RepostBadge","_c5","MemeThumbnail","meme","getMediaUrl","mediaUrl","startsWith","process","env","REACT_APP_API_URL","to","_id","children","src","alt","caption","crossOrigin","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","mediaType","size","isRepost","_c6","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeThumbnail.jsx"],"sourcesContent":["// Substitua o conteúdo do arquivo por:\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlay } from 'react-icons/fa';\r\n\r\nconst ThumbnailContainer = styled(Link)`\r\n  display: block;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  aspect-ratio: 1;\r\n  background: #f5f5f5;\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  \r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 20px rgba(0,0,0,0.15);\r\n  }\r\n`;\r\n\r\nconst ThumbnailImage = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.3s;\r\n`;\r\n\r\nconst VideoOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0,0,0,0.3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n  \r\n  ${ThumbnailContainer}:hover & {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst PlayIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: rgba(255, 69, 0, 0.9);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst RepostBadge = styled.div`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  background: rgba(0,0,0,0.7);\r\n  color: white;\r\n  padding: 3px 6px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  z-index: 1;\r\n`;\r\n\r\nconst MemeThumbnail = ({ meme }) => {\r\n  const getMediaUrl = () => {\r\n    if (!meme.mediaUrl) return 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n    if (meme.mediaUrl.startsWith('http')) return meme.mediaUrl;\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${meme.mediaUrl}`;\r\n  };\r\n\r\n  return (\r\n    <ThumbnailContainer to={`/memes/${meme._id}`}>\r\n      <ThumbnailImage \r\n        src={getMediaUrl()}\r\n        alt={meme.caption || 'Meme thumbnail'}\r\n        crossOrigin=\"anonymous\"\r\n        onError={(e) => {\r\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n          e.target.onerror = null;\r\n        }}\r\n      />\r\n      \r\n      {meme.mediaType === 'video' && (\r\n        <VideoOverlay>\r\n          <PlayIcon>\r\n            <FaPlay size={12} />\r\n          </PlayIcon>\r\n        </VideoOverlay>\r\n      )}\r\n      \r\n      {meme.isRepost && (\r\n        <RepostBadge>Repost</RepostBadge>\r\n      )}\r\n    </ThumbnailContainer>\r\n  );\r\n};\r\n\r\nexport default MemeThumbnail;"],"mappings":";AAAA;AACA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,kBAAkB,GAAGL,MAAM,CAACC,IAAI,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,EAAA,GAbID,kBAAkB;AAexB,MAAME,cAAc,GAAGP,MAAM,CAACQ,GAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,cAAc;AAOpB,MAAMG,YAAY,GAAGV,MAAM,CAACW,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIN,kBAAkB;AACtB;AACA;AACA,CAAC;AAACO,GAAA,GAhBIF,YAAY;AAkBlB,MAAMG,QAAQ,GAAGb,MAAM,CAACW,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,QAAQ;AAWd,MAAME,WAAW,GAAGf,MAAM,CAACW,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAVID,WAAW;AAYjB,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACD,IAAI,CAACE,QAAQ,EAAE,OAAO,wDAAwD;IACnF,IAAIF,IAAI,CAACE,QAAQ,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOH,IAAI,CAACE,QAAQ;IAC1D,OAAO,GAAGE,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,GAAGN,IAAI,CAACE,QAAQ,EAAE;EACtF,CAAC;EAED,oBACEhB,OAAA,CAACC,kBAAkB;IAACoB,EAAE,EAAE,UAAUP,IAAI,CAACQ,GAAG,EAAG;IAAAC,QAAA,gBAC3CvB,OAAA,CAACG,cAAc;MACbqB,GAAG,EAAET,WAAW,CAAC,CAAE;MACnBU,GAAG,EAAEX,IAAI,CAACY,OAAO,IAAI,gBAAiB;MACtCC,WAAW,EAAC,WAAW;MACvBC,OAAO,EAAGC,CAAC,IAAK;QACdA,CAAC,CAACC,MAAM,CAACN,GAAG,GAAG,wDAAwD;QACvEK,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;MACzB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEDrB,IAAI,CAACsB,SAAS,KAAK,OAAO,iBACzBpC,OAAA,CAACM,YAAY;MAAAiB,QAAA,eACXvB,OAAA,CAACS,QAAQ;QAAAc,QAAA,eACPvB,OAAA,CAACF,MAAM;UAACuC,IAAI,EAAE;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACf,EAEArB,IAAI,CAACwB,QAAQ,iBACZtC,OAAA,CAACW,WAAW;MAAAY,QAAA,EAAC;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEzB,CAAC;AAACI,GAAA,GAhCI1B,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAX,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAAtC,EAAA;AAAAsC,YAAA,CAAAnC,GAAA;AAAAmC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}