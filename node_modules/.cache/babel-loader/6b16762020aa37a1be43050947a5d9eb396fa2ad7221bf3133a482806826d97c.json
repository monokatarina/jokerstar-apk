{"ast":null,"code":"// src/components/profile/UserLikes.jsx\nimport{useState,useEffect}from'react';import styled from'styled-components';import api from'../../services/api';import MemeThumbnail from'../MemeThumbnail';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const MemeGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n`;const EmptyMessage=styled.div`\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 40px;\n  color: var(--text-light);\n  font-size: 1.1rem;\n`;const UserLikes=_ref=>{let{userId}=_ref;const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const{user}=useAuth();useEffect(()=>{const fetchLikedMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get(`/users/${userId}/liked-memes`);// Filtro no frontend como camada adicional de segurança\nconst validMemes=Array.isArray(data)?data.filter(meme=>{// Verifica se o meme existe e não está deletado\nconst isNotDeleted=!meme.isDeleted;// Verifica se o autor não deletou sua conta\nconst hasValidAuthor=meme.author&&!meme.author.isDeleted;return isNotDeleted&&hasValidAuthor;}):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Error fetching liked memes:',error);setError('Failed to load liked memes');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Tratamento para token inválido/não autorizado\n}}finally{setLoading(false);}};fetchLikedMemes();},[userId,user]);// Adicionei user como dependência para recarregar se o usuário mudar\nconst handleMemeDeleted=deletedMemeId=>{// Atualização otimista - remove o meme da lista imediatamente\nsetMemes(prev=>prev.filter(m=>m._id!==deletedMemeId));};if(loading)return/*#__PURE__*/_jsx(EmptyMessage,{children:\"Loading liked memes...\"});if(error)return/*#__PURE__*/_jsx(EmptyMessage,{children:error});return/*#__PURE__*/_jsx(_Fragment,{children:memes.length===0?/*#__PURE__*/_jsx(EmptyMessage,{children:userId===(user===null||user===void 0?void 0:user._id)?\"You haven't liked any memes yet\":\"This user hasn't liked any memes\"}):/*#__PURE__*/_jsx(MemeGrid,{children:memes.map(meme=>/*#__PURE__*/_jsx(MemeThumbnail,{meme:meme,onDelete:handleMemeDeleted// Passa a função de deleção\n},meme._id))})});};export default UserLikes;","map":{"version":3,"names":["useState","useEffect","styled","api","MemeThumbnail","useAuth","jsx","_jsx","Fragment","_Fragment","MemeGrid","div","EmptyMessage","UserLikes","_ref","userId","memes","setMemes","loading","setLoading","error","setError","user","fetchLikedMemes","data","get","validMemes","Array","isArray","filter","meme","isNotDeleted","isDeleted","hasValidAuthor","author","_error$response","console","response","status","handleMemeDeleted","deletedMemeId","prev","m","_id","children","length","map","onDelete"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/client2/src/components/profile/UserLikes.jsx"],"sourcesContent":["// src/components/profile/UserLikes.jsx\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport api from '../../services/api';\nimport MemeThumbnail from '../MemeThumbnail';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst MemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nconst EmptyMessage = styled.div`\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 40px;\n  color: var(--text-light);\n  font-size: 1.1rem;\n`;\n\nconst UserLikes = ({ userId }) => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { user } = useAuth();\n\n  useEffect(() => {\n    const fetchLikedMemes = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const { data } = await api.get(`/users/${userId}/liked-memes`);\n        \n        // Filtro no frontend como camada adicional de segurança\n        const validMemes = Array.isArray(data) \n          ? data.filter(meme => {\n              // Verifica se o meme existe e não está deletado\n              const isNotDeleted = !meme.isDeleted;\n              // Verifica se o autor não deletou sua conta\n              const hasValidAuthor = meme.author && !meme.author.isDeleted;\n              return isNotDeleted && hasValidAuthor;\n            })\n          : [];\n        \n        setMemes(validMemes);\n      } catch (error) {\n        console.error('Error fetching liked memes:', error);\n        setError('Failed to load liked memes');\n        if (error.response?.status === 401) {\n          // Tratamento para token inválido/não autorizado\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchLikedMemes();\n  }, [userId, user]); // Adicionei user como dependência para recarregar se o usuário mudar\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    // Atualização otimista - remove o meme da lista imediatamente\n    setMemes(prev => prev.filter(m => m._id !== deletedMemeId));\n  };\n\n  if (loading) return <EmptyMessage>Loading liked memes...</EmptyMessage>;\n  if (error) return <EmptyMessage>{error}</EmptyMessage>;\n\n  return (\n    <>\n      {memes.length === 0 ? (\n        <EmptyMessage>\n          {userId === user?._id \n            ? \"You haven't liked any memes yet\" \n            : \"This user hasn't liked any memes\"}\n        </EmptyMessage>\n      ) : (\n        <MemeGrid>\n          {memes.map(meme => (\n            <MemeThumbnail \n              key={meme._id} \n              meme={meme}\n              onDelete={handleMemeDeleted} // Passa a função de deleção\n            />\n          ))}\n        </MemeGrid>\n      )}\n    </>\n  );\n};\n\nexport default UserLikes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}