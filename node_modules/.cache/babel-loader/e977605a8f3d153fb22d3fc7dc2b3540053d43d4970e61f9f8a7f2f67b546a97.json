{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\pages\\\\TrendingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport MemeCard from '../components/MemeCard';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Title = styled.h1`\n  color: #333;\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  text-align: center;\n`;\n_c2 = Title;\nconst MemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 1.5rem;\n  margin-top: 2rem;\n`;\n_c3 = MemeGrid;\nconst Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 2rem;\n`;\n_c4 = Filters;\nconst FilterButton = styled.button`\n  padding: 0.5rem 1rem;\n  border-radius: 20px;\n  border: none;\n  background: ${({\n  $active\n}) => $active ? '#ff4500' : '#f0f0f0'};\n  color: ${({\n  $active\n}) => $active ? 'white' : '#333'};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: ${({\n  $active\n}) => $active ? '#e03d00' : '#e0e0e0'};\n  }\n`;\n_c5 = FilterButton;\nconst TrendingPage = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all'); // 'all', 'images', 'videos'\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTrendingMemes = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await axios.get(`${API_BASE_URL}/api/feed/trending`);\n        setMemes(data.data);\n      } catch (error) {\n        console.error('Error fetching trending memes:', error);\n        navigate('/error', {\n          state: {\n            message: 'Failed to load trending memes'\n          }\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMemes();\n  }, [navigate]);\n  const filteredMemes = memes.filter(meme => {\n    if (filter === 'all') return true;\n    if (filter === 'images') return meme.mediaType === 'image';\n    if (filter === 'videos') return meme.mediaType === 'video';\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Destaques - Os memes mais populares\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n        active: filter === 'all',\n        onClick: () => setFilter('all'),\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        active: filter === 'images',\n        onClick: () => setFilter('images'),\n        children: \"Imagens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n        active: filter === 'videos',\n        onClick: () => setFilter('videos'),\n        children: \"V\\xEDdeos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Carregando memes em destaque...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MemeGrid, {\n      children: filteredMemes.map(meme => /*#__PURE__*/_jsxDEV(MemeCard, {\n        meme: meme,\n        showAuthor: true,\n        showMetrics: true\n      }, meme._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TrendingPage, \"YWT/A6ECCSWs+nAbRl+D1d97pso=\", false, function () {\n  return [useNavigate];\n});\n_c6 = TrendingPage;\nexport default TrendingPage;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"MemeGrid\");\n$RefreshReg$(_c4, \"Filters\");\n$RefreshReg$(_c5, \"FilterButton\");\n$RefreshReg$(_c6, \"TrendingPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","axios","MemeCard","useNavigate","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","Container","div","_c","Title","h1","_c2","MemeGrid","_c3","Filters","_c4","FilterButton","button","$active","_c5","TrendingPage","_s","memes","setMemes","loading","setLoading","filter","setFilter","navigate","fetchTrendingMemes","data","get","error","console","state","message","filteredMemes","meme","mediaType","children","fileName","_jsxFileName","lineNumber","columnNumber","active","onClick","style","textAlign","map","showAuthor","showMetrics","_id","_c6","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/pages/TrendingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport MemeCard from '../components/MemeCard';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nconst Container = styled.div`\r\n  padding: 2rem;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #333;\r\n  margin-bottom: 2rem;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst MemeGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 20px;\r\n  border: none;\r\n  background: ${({ $active }) => $active ? '#ff4500' : '#f0f0f0'};\r\n  color: ${({ $active }) => $active ? 'white' : '#333'};\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: ${({ $active }) => $active ? '#e03d00' : '#e0e0e0'};\r\n  }\r\n`;\r\n\r\nconst TrendingPage = () => {\r\n  const [memes, setMemes] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState('all'); // 'all', 'images', 'videos'\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTrendingMemes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const { data } = await axios.get(`${API_BASE_URL}/api/feed/trending`);\r\n        setMemes(data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching trending memes:', error);\r\n        navigate('/error', { state: { message: 'Failed to load trending memes' } });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTrendingMemes();\r\n  }, [navigate]);\r\n\r\n  const filteredMemes = memes.filter(meme => {\r\n    if (filter === 'all') return true;\r\n    if (filter === 'images') return meme.mediaType === 'image';\r\n    if (filter === 'videos') return meme.mediaType === 'video';\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Destaques - Os memes mais populares</Title>\r\n      \r\n      <Filters>\r\n        <FilterButton \r\n          active={filter === 'all'}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          Todos\r\n        </FilterButton>\r\n        <FilterButton \r\n          active={filter === 'images'}\r\n          onClick={() => setFilter('images')}\r\n        >\r\n          Imagens\r\n        </FilterButton>\r\n        <FilterButton \r\n          active={filter === 'videos'}\r\n          onClick={() => setFilter('videos')}\r\n        >\r\n          Vídeos\r\n        </FilterButton>\r\n      </Filters>\r\n\r\n      {loading ? (\r\n        <div style={{ textAlign: 'center' }}>Carregando memes em destaque...</div>\r\n      ) : (\r\n        <MemeGrid>\r\n          {filteredMemes.map(meme => (\r\n            <MemeCard \r\n              key={meme._id} \r\n              meme={meme} \r\n              showAuthor \r\n              showMetrics\r\n            />\r\n          ))}\r\n        </MemeGrid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TrendingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}