{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import api from'../services/api';import MemeCard from'../components/MemeCard';import UploadButton from'../components/UploadButton';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import{FiRefreshCw}from'react-icons/fi';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FeedContainer=styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  scroll-snap-type: y mandatory;\n  scroll-behavior: smooth;\n  overscroll-behavior-y: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  padding-top: calc(60px + env(safe-area-inset-top)); // Ajuste para navbar e status bar\n`;const FeedGrid=styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;const MemeWrapper=styled.div`\n  width: 100%;\n  height: calc(100vh - 60px - env(safe-area-inset-top)); // Altura total menos navbar\n  scroll-snap-align: start;\n  position: relative;\n`;const EmptyFeed=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: start;\n  background: var(--card-bg);\n  padding: 16px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;const LoadingIndicator=styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--text-light);\n  scroll-snap-align: start;\n`;const ErrorMessage=styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: start;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;const FeedPage=()=>{const[memes,setMemes]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[currentIndex,setCurrentIndex]=useState(0);const feedContainerRef=useRef(null);const scrollTimeoutRef=useRef(null);const{logout}=useAuth();const navigate=useNavigate();const[commentOpen,setCommentOpen]=useState(false);const lastScrollPosition=useRef(0);const fetchMemes=async()=>{try{setLoading(true);setError(null);const{data}=await api.get('/memes');const validMemes=Array.isArray(data===null||data===void 0?void 0:data.data)?data.data.filter(meme=>!meme.isDeleted):[];setMemes(validMemes);}catch(error){var _error$response;console.error('Erro ao carregar feed:',error);setError('Erro ao carregar o feed. Tente novamente mais tarde.');if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){await logout();navigate('/login');}}finally{setLoading(false);}};const handleScroll=()=>{if(commentOpen)return;// Lógica para snap mais preciso\nif(scrollTimeoutRef.current){clearTimeout(scrollTimeoutRef.current);}isScrollingRef.current=true;scrollTimeoutRef.current=setTimeout(()=>{isScrollingRef.current=false;if(feedContainerRef.current){const container=feedContainerRef.current;const scrollTop=container.scrollTop;const containerHeight=container.offsetHeight;const index=Math.round(scrollTop/containerHeight);if(index!==currentIndex){setCurrentIndex(index);container.scrollTo({top:index*containerHeight,behavior:'smooth'});}}},150);};const handleMemeDeleted=deletedMemeId=>{var _memes$currentIndex;setMemes(prev=>prev.filter(meme=>meme._id!==deletedMemeId));if(((_memes$currentIndex=memes[currentIndex])===null||_memes$currentIndex===void 0?void 0:_memes$currentIndex._id)===deletedMemeId){const newIndex=Math.min(currentIndex,memes.length-2);setCurrentIndex(newIndex>=0?newIndex:0);}};useEffect(()=>{const container=feedContainerRef.current;if(container){container.addEventListener('scroll',handleScroll);return()=>container.removeEventListener('scroll',handleScroll);}},[currentIndex,commentOpen]);useEffect(()=>{fetchMemes();},[]);useEffect(()=>{return()=>{setCommentOpen(false);};},[]);if(loading){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(LoadingIndicator,{children:\"Carregando...\"})})});}if(error){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsxs(ErrorMessage,{children:[error,/*#__PURE__*/_jsxs(\"button\",{onClick:fetchMemes,children:[/*#__PURE__*/_jsx(FiRefreshCw,{}),\" Tentar novamente\"]})]})})});}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(FeedContainer,{ref:feedContainerRef,children:/*#__PURE__*/_jsx(FeedGrid,{children:memes.length===0?/*#__PURE__*/_jsxs(EmptyFeed,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nenhum meme encontrado\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Seja o primeiro a compartilhar sua cria\\xE7\\xE3o!\"}),/*#__PURE__*/_jsx(UploadButton,{size:\"large\"})]}):memes.map((meme,index)=>/*#__PURE__*/_jsx(MemeWrapper,{children:/*#__PURE__*/_jsx(MemeCard,{meme:meme,onDelete:handleMemeDeleted,onCommentCountChange:newCount=>{setMemes(prev=>prev.map(m=>m._id===meme._id?{...m,commentCount:newCount}:m));},isSquareView:false,isActive:index===currentIndex,style:{width:'100%',height:'100%'},setCommentOpen:setCommentOpen})},meme._id))})})});};export default FeedPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","api","MemeCard","UploadButton","useNavigate","useAuth","FiRefreshCw","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FeedContainer","div","FeedGrid","MemeWrapper","EmptyFeed","LoadingIndicator","ErrorMessage","FeedPage","memes","setMemes","loading","setLoading","error","setError","currentIndex","setCurrentIndex","feedContainerRef","scrollTimeoutRef","logout","navigate","commentOpen","setCommentOpen","lastScrollPosition","fetchMemes","data","get","validMemes","Array","isArray","filter","meme","isDeleted","_error$response","console","response","status","handleScroll","current","clearTimeout","isScrollingRef","setTimeout","container","scrollTop","containerHeight","offsetHeight","index","Math","round","scrollTo","top","behavior","handleMemeDeleted","deletedMemeId","_memes$currentIndex","prev","_id","newIndex","min","length","addEventListener","removeEventListener","children","ref","onClick","size","map","onDelete","onCommentCountChange","newCount","m","commentCount","isSquareView","isActive","style","width","height"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport api from '../services/api';\nimport MemeCard from '../components/MemeCard';\nimport UploadButton from '../components/UploadButton';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { FiRefreshCw } from 'react-icons/fi';\n\nconst FeedContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: var(--background);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  scroll-snap-type: y mandatory;\n  scroll-behavior: smooth;\n  overscroll-behavior-y: contain;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  padding-top: calc(60px + env(safe-area-inset-top)); // Ajuste para navbar e status bar\n`;\n\nconst FeedGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst MemeWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 60px - env(safe-area-inset-top)); // Altura total menos navbar\n  scroll-snap-align: start;\n  position: relative;\n`;\n\nconst EmptyFeed = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  text-align: center;\n  color: var(--text);\n  scroll-snap-align: start;\n  background: var(--card-bg);\n  padding: 16px;\n\n  h3 {\n    font-size: 1.5rem;\n    margin-bottom: 16px;\n  }\n\n  p {\n    color: var(--text-light);\n    margin-bottom: 24px;\n  }\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--text-light);\n  scroll-snap-align: start;\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 60px - env(safe-area-inset-top));\n  width: 100%;\n  color: var(--danger);\n  padding: 20px;\n  scroll-snap-align: start;\n\n  button {\n    margin-top: 20px;\n    padding: 12px 24px;\n    border-radius: 24px;\n    background: var(--primary);\n    color: white;\n    border: none;\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    font-weight: 500;\n  }\n`;\n\nconst FeedPage = () => {\n  const [memes, setMemes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const feedContainerRef = useRef(null);\n  const scrollTimeoutRef = useRef(null);\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n  const [commentOpen, setCommentOpen] = useState(false);\n  const lastScrollPosition = useRef(0);\n\n  const fetchMemes = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const { data } = await api.get('/memes');\n      const validMemes = Array.isArray(data?.data)\n        ? data.data.filter(meme => !meme.isDeleted)\n        : [];\n      setMemes(validMemes);\n    } catch (error) {\n      console.error('Erro ao carregar feed:', error);\n      setError('Erro ao carregar o feed. Tente novamente mais tarde.');\n      if (error.response?.status === 401) {\n        await logout();\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleScroll = () => {\n    if (commentOpen) return;\n\n    // Lógica para snap mais preciso\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n\n    isScrollingRef.current = true;\n    scrollTimeoutRef.current = setTimeout(() => {\n      isScrollingRef.current = false;\n      if (feedContainerRef.current) {\n        const container = feedContainerRef.current;\n        const scrollTop = container.scrollTop;\n        const containerHeight = container.offsetHeight;\n        const index = Math.round(scrollTop / containerHeight);\n        \n        if (index !== currentIndex) {\n          setCurrentIndex(index);\n          container.scrollTo({\n            top: index * containerHeight,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }, 150);\n  };\n\n  const handleMemeDeleted = (deletedMemeId) => {\n    setMemes(prev => prev.filter(meme => meme._id !== deletedMemeId));\n    \n    if (memes[currentIndex]?._id === deletedMemeId) {\n      const newIndex = Math.min(currentIndex, memes.length - 2);\n      setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n    }\n  };\n\n  useEffect(() => {\n    const container = feedContainerRef.current;\n    if (container) {\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, [currentIndex, commentOpen]);\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      setCommentOpen(false);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <>\n        <FeedContainer ref={feedContainerRef}>\n          <LoadingIndicator>Carregando...</LoadingIndicator>\n        </FeedContainer>\n      </>\n    );\n  }\n\n  if (error) {\n    return (\n      <>\n        <FeedContainer ref={feedContainerRef}>\n          <ErrorMessage>\n            {error}\n            <button onClick={fetchMemes}>\n              <FiRefreshCw /> Tentar novamente\n            </button>\n          </ErrorMessage>\n        </FeedContainer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <FeedContainer ref={feedContainerRef}>\n        <FeedGrid>\n          {memes.length === 0 ? (\n            <EmptyFeed>\n              <h3>Nenhum meme encontrado</h3>\n              <p>Seja o primeiro a compartilhar sua criação!</p>\n              <UploadButton size=\"large\" />\n            </EmptyFeed>\n          ) : (\n            memes.map((meme, index) => (\n              <MemeWrapper key={meme._id}>\n                <MemeCard\n                  meme={meme}\n                  onDelete={handleMemeDeleted}\n                  onCommentCountChange={(newCount) => {\n                    setMemes(prev =>\n                      prev.map(m =>\n                        m._id === meme._id ? { ...m, commentCount: newCount } : m\n                      )\n                    );\n                  }}\n                  isSquareView={false}\n                  isActive={index === currentIndex}\n                  style={{ width: '100%', height: '100%' }}\n                  setCommentOpen={setCommentOpen}\n                />\n              </MemeWrapper>\n            ))\n          )}\n        </FeedGrid>\n      </FeedContainer>\n    </>\n  );\n};\n\nexport default FeedPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}