{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import styled from'styled-components';import GlobalStyles from'./styles/GlobalStyles';import{AuthProvider}from'./contexts/AuthContext';import{ThemeProvider}from'./styles/ThemeContext';import{NotificationProvider}from'./contexts/NotificationContext';import PrivateRoute from'./components/PrivateRoute';import Navbar from'./components/Navbar/Navbar';import{StatusBar}from'@capacitor/status-bar';import{Keyboard}from'@capacitor/keyboard';import{Capacitor}from'@capacitor/core';import{App as CapacitorApp}from'@capacitor/app';import{LocalNotifications}from'@capacitor/local-notifications';import{BackgroundFetch}from'@transistorsoft/capacitor-background-fetch';// Importações de páginas (mantidas as mesmas)\nimport HomePage from'./pages/HomePage';import LoginPage from'./pages/LoginPage';import RegisterPage from'./pages/RegisterPage';import FeedPage from'./pages/FeedPage';import UploadPage from'./pages/UploadPage';import ProfilePage from'./pages/ProfilePage';import TrendingPage from'./pages/TrendingPage';import MemeDetailPage from'./pages/MemeDetailPage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background: var(--background);\n  padding-top: ${Capacitor.isNativePlatform()?'20px':'env(safe-area-inset-top)'};\n  padding-bottom: env(safe-area-inset-bottom);\n`;const MainContent=styled.main`\n  flex: 1;\n  overflow-y: auto;\n  padding: 60px 0 72px;\n  -webkit-overflow-scrolling: touch;\n  \n  @media (max-width: 768px) {\n    padding-bottom: 64px;\n  }\n`;const KeyboardSpacer=styled.div`\n  height: var(--keyboard-height, 0px);\n  transition: height 0.3s ease;\n`;const NavbarWrapper=styled.div`\n  position: fixed;\n  top: env(safe-area-inset-top);\n  width: 100%;\n  z-index: 1000;\n`;function App(){const checkForNotifications=async()=>{try{// Simulação - substitua por sua chamada real à API\nconst response=await api.get('/notifications/unread-count');if(response.data.count>0){await LocalNotifications.schedule({notifications:[{title:'Novas notificações',body:`Você tem ${response.data.count} novas notificações`,id:new Date().getTime(),extra:{type:'unread-notifications'},smallIcon:'ic_stat_icon',iconColor:'#121212'}]});}}catch(error){console.error('Error checking notifications:',error);}};useEffect(()=>{if(Capacitor.isNativePlatform()){// Configuração da StatusBar\nStatusBar.setOverlaysWebView({overlay:false});StatusBar.setBackgroundColor({color:'#121212'});StatusBar.setStyle({style:'dark'});// Configuração do teclado\nKeyboard.setAccessoryBarVisible({isVisible:true});Keyboard.addListener('keyboardWillShow',info=>{document.documentElement.style.setProperty('--keyboard-height',`${info.keyboardHeight}px`);});Keyboard.addListener('keyboardWillHide',()=>{document.documentElement.style.setProperty('--keyboard-height','0px');});// Configuração de notificações em segundo plano\nconst setupBackgroundTasks=async()=>{// 1. Verifica notificações quando o app é aberto\nawait checkForNotifications();// 2. Configura o Background Fetch (para iOS/Android)\ntry{await BackgroundFetch.configure({minimumFetchInterval:15,// mínimo 15 minutos entre execuções\nstopOnTerminate:false,// continuar mesmo quando app é fechado\nstartOnBoot:true// iniciar quando dispositivo é ligado\n},async taskId=>{console.log('BackgroundFetch executado',taskId);await checkForNotifications();BackgroundFetch.finish({taskId});});}catch(error){console.log('BackgroundFetch não suportado ou configurado',error);}// 3. Listener para quando o app volta ao foreground\nCapacitorApp.addListener('appStateChange',_ref=>{let{isActive}=_ref;if(isActive){checkForNotifications();}});};setupBackgroundTasks();}// Configuração inicial de notificações (para web também)\nconst init=async()=>{if('Notification'in window&&Notification.permission!=='denied'){await Notification.requestPermission();}};init();return()=>{// Limpeza dos listeners\nKeyboard.removeAllListeners();CapacitorApp.removeAllListeners();};},[]);return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(NotificationProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(ThemeProvider,{children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsxs(AppContainer,{children:[/*#__PURE__*/_jsx(NavbarWrapper,{children:/*#__PURE__*/_jsx(Navbar,{})}),/*#__PURE__*/_jsx(MainContent,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/memes/:id\",element:/*#__PURE__*/_jsx(MemeDetailPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(RegisterPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/users/:userId\",element:/*#__PURE__*/_jsx(ProfilePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/trending\",element:/*#__PURE__*/_jsx(TrendingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/feed\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(FeedPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/upload\",element:/*#__PURE__*/_jsx(PrivateRoute,{children:/*#__PURE__*/_jsx(UploadPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})}),/*#__PURE__*/_jsx(KeyboardSpacer,{})]})]})})})});}export default App;","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Routes","Route","Navigate","styled","GlobalStyles","AuthProvider","ThemeProvider","NotificationProvider","PrivateRoute","Navbar","StatusBar","Keyboard","Capacitor","App","CapacitorApp","LocalNotifications","BackgroundFetch","HomePage","LoginPage","RegisterPage","FeedPage","UploadPage","ProfilePage","TrendingPage","MemeDetailPage","jsx","_jsx","jsxs","_jsxs","AppContainer","div","isNativePlatform","MainContent","main","KeyboardSpacer","NavbarWrapper","checkForNotifications","response","api","get","data","count","schedule","notifications","title","body","id","Date","getTime","extra","type","smallIcon","iconColor","error","console","setOverlaysWebView","overlay","setBackgroundColor","color","setStyle","style","setAccessoryBarVisible","isVisible","addListener","info","document","documentElement","setProperty","keyboardHeight","setupBackgroundTasks","configure","minimumFetchInterval","stopOnTerminate","startOnBoot","taskId","log","finish","_ref","isActive","init","window","Notification","permission","requestPermission","removeAllListeners","children","path","element","to"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/jokersta_apk/src/App.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { ThemeProvider } from './styles/ThemeContext';\nimport { NotificationProvider } from './contexts/NotificationContext';\nimport PrivateRoute from './components/PrivateRoute';\nimport Navbar from './components/Navbar/Navbar';\nimport { StatusBar } from '@capacitor/status-bar';\nimport { Keyboard } from '@capacitor/keyboard';\nimport { Capacitor } from '@capacitor/core';\nimport { App as CapacitorApp } from '@capacitor/app';\nimport { LocalNotifications } from '@capacitor/local-notifications';\nimport { BackgroundFetch } from '@transistorsoft/capacitor-background-fetch';\n\n// Importações de páginas (mantidas as mesmas)\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport FeedPage from './pages/FeedPage';\nimport UploadPage from './pages/UploadPage';\nimport ProfilePage from './pages/ProfilePage';\nimport TrendingPage from './pages/TrendingPage';\nimport MemeDetailPage from './pages/MemeDetailPage';\n\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background: var(--background);\n  padding-top: ${Capacitor.isNativePlatform() ? '20px' : 'env(safe-area-inset-top)'};\n  padding-bottom: env(safe-area-inset-bottom);\n`;\n\nconst MainContent = styled.main`\n  flex: 1;\n  overflow-y: auto;\n  padding: 60px 0 72px;\n  -webkit-overflow-scrolling: touch;\n  \n  @media (max-width: 768px) {\n    padding-bottom: 64px;\n  }\n`;\n\nconst KeyboardSpacer = styled.div`\n  height: var(--keyboard-height, 0px);\n  transition: height 0.3s ease;\n`;\n\nconst NavbarWrapper = styled.div`\n  position: fixed;\n  top: env(safe-area-inset-top);\n  width: 100%;\n  z-index: 1000;\n`;\n\nfunction App() {\n  const checkForNotifications = async () => {\n    try {\n      // Simulação - substitua por sua chamada real à API\n      const response = await api.get('/notifications/unread-count');\n      if (response.data.count > 0) {\n        await LocalNotifications.schedule({\n          notifications: [{\n            title: 'Novas notificações',\n            body: `Você tem ${response.data.count} novas notificações`,\n            id: new Date().getTime(),\n            extra: { type: 'unread-notifications' },\n            smallIcon: 'ic_stat_icon',\n            iconColor: '#121212'\n          }]\n        });\n      }\n    } catch (error) {\n      console.error('Error checking notifications:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (Capacitor.isNativePlatform()) {\n      // Configuração da StatusBar\n      StatusBar.setOverlaysWebView({ overlay: false });\n      StatusBar.setBackgroundColor({ color: '#121212' });\n      StatusBar.setStyle({ style: 'dark' });\n      \n      // Configuração do teclado\n      Keyboard.setAccessoryBarVisible({ isVisible: true });\n      Keyboard.addListener('keyboardWillShow', (info) => {\n        document.documentElement.style.setProperty('--keyboard-height', `${info.keyboardHeight}px`);\n      });\n      Keyboard.addListener('keyboardWillHide', () => {\n        document.documentElement.style.setProperty('--keyboard-height', '0px');\n      });\n\n      // Configuração de notificações em segundo plano\n      const setupBackgroundTasks = async () => {\n        // 1. Verifica notificações quando o app é aberto\n        await checkForNotifications();\n\n        // 2. Configura o Background Fetch (para iOS/Android)\n        try {\n          await BackgroundFetch.configure({\n            minimumFetchInterval: 15, // mínimo 15 minutos entre execuções\n            stopOnTerminate: false,  // continuar mesmo quando app é fechado\n            startOnBoot: true        // iniciar quando dispositivo é ligado\n          }, async (taskId) => {\n            console.log('BackgroundFetch executado', taskId);\n            await checkForNotifications();\n            BackgroundFetch.finish({ taskId });\n          });\n        } catch (error) {\n          console.log('BackgroundFetch não suportado ou configurado', error);\n        }\n\n        // 3. Listener para quando o app volta ao foreground\n        CapacitorApp.addListener('appStateChange', ({ isActive }) => {\n          if (isActive) {\n            checkForNotifications();\n          }\n        });\n      };\n\n      setupBackgroundTasks();\n    }\n\n    // Configuração inicial de notificações (para web também)\n    const init = async () => {\n      if ('Notification' in window && Notification.permission !== 'denied') {\n        await Notification.requestPermission();\n      }\n    };\n    init();\n\n    return () => {\n      // Limpeza dos listeners\n      Keyboard.removeAllListeners();\n      CapacitorApp.removeAllListeners();\n    };\n  }, []);\n\n  return (\n    <AuthProvider>\n      <NotificationProvider>\n        <Router>\n          <ThemeProvider>\n            <GlobalStyles />\n            <AppContainer>\n              <NavbarWrapper>\n                <Navbar />\n              </NavbarWrapper>\n            \n              <MainContent>\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"/memes/:id\" element={<MemeDetailPage />} />\n                  <Route path=\"/login\" element={<LoginPage />} />\n                  <Route path=\"/register\" element={<RegisterPage />} />\n                  <Route path=\"/users/:userId\" element={<ProfilePage />} />\n                  <Route path=\"/trending\" element={<TrendingPage />} />\n                  <Route path=\"/feed\" element={<PrivateRoute><FeedPage /></PrivateRoute>} />\n                  <Route path=\"/upload\" element={<PrivateRoute><UploadPage /></PrivateRoute>} />\n                  <Route path=\"*\" element={<Navigate to=\"/\" />} />\n                </Routes>\n              </MainContent>\n\n              <KeyboardSpacer />\n            </AppContainer>\n          </ThemeProvider>\n        </Router>\n      </NotificationProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}