{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FiMessageSquare, FiShare2, FiRepeat } from 'react-icons/fi';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport CommentSection from './CommentSection';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Animações\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bounce = keyframes`\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.3); }\n`;\nconst shake = keyframes`\n  0% { transform: rotate(0deg); }\n  25% { transform: rotate(-10deg); }\n  50% { transform: rotate(10deg); }\n  75% { transform: rotate(-10deg); }\n  100% { transform: rotate(0deg); }\n`;\n\n// Estilos\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  overflow: hidden;\n`;\n_c = Card;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n`;\n_c2 = Header;\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 12px;\n  object-fit: cover;\n`;\n_c3 = Avatar;\nconst Username = styled.span`\n  font-weight: 600;\n  &:hover {\n    text-decoration: underline;\n    color: #ff4500;\n  }\n`;\n_c4 = Username;\nconst MediaContainer = styled.div`\n  width: 100%;\n  min-height: 300px;\n  background: #f5f5f5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  img, video {\n    max-width: 100%;\n    max-height: 500px;\n    display: block;\n    object-fit: contain;\n  }\n`;\n_c5 = MediaContainer;\nconst Caption = styled.p`\n  padding: 12px 16px;\n  margin: 0;\n`;\n_c6 = Caption;\nconst Tags = styled.div`\n  padding: 0 16px 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n_c7 = Tags;\nconst Tag = styled.span`\n  color: #ff4500;\n  font-size: 0.9rem;\n`;\n_c8 = Tag;\nconst Actions = styled.div`\n  display: flex;\n  padding: 8px 16px;\n  border-top: 1px solid #f0f0f0;\n`;\n_c9 = Actions;\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.9rem;\n  \n  svg {\n    margin-right: 6px;\n    font-size: 1.2rem;\n  }\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n_c10 = ActionButton;\nconst EmojiButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  margin-right: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  \n  span {\n    margin-right: 6px;\n    display: inline-block;\n    animation: ${props => props.$animate ? bounce : 'none'} 0.5s ease;\n  }\n\n  &:hover span {\n    animation: ${props => props.$animate ? bounce : shake} 0.5s ease;\n  }\n`;\n_c11 = EmojiButton;\nconst MemeCard = ({\n  meme\n}) => {\n  _s();\n  var _meme$likes, _meme$dislikes, _meme$author, _meme$author$profile, _meme$author2, _meme$author3, _meme$tags;\n  // Verificação inicial de segurança\n  if (!meme || !meme._id) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          color: '#999',\n          textAlign: 'center'\n        },\n        children: \"Conte\\xFAdo n\\xE3o dispon\\xEDvel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [reaction, setReaction] = useState(null);\n  const [likeCount, setLikeCount] = useState((meme === null || meme === void 0 ? void 0 : (_meme$likes = meme.likes) === null || _meme$likes === void 0 ? void 0 : _meme$likes.length) || 0);\n  const [dislikeCount, setDislikeCount] = useState((meme === null || meme === void 0 ? void 0 : (_meme$dislikes = meme.dislikes) === null || _meme$dislikes === void 0 ? void 0 : _meme$dislikes.length) || 0);\n  const [showComments, setShowComments] = useState(false);\n  const [commentCount, setCommentCount] = useState((meme === null || meme === void 0 ? void 0 : meme.commentCount) || 0);\n  const [isReposted, setIsReposted] = useState(false);\n  const [repostCount, setRepostCount] = useState((meme === null || meme === void 0 ? void 0 : meme.repostCount) || 0);\n  const [animateLike, setAnimateLike] = useState(false);\n  const [animateDislike, setAnimateDislike] = useState(false);\n  useEffect(() => {\n    var _meme$likes2, _meme$dislikes2;\n    if (user && meme !== null && meme !== void 0 && meme.likes && meme !== null && meme !== void 0 && meme.dislikes) {\n      const userLiked = meme.likes.some(like => like.toString() === user._id);\n      const userDisliked = meme.dislikes.some(dislike => dislike.toString() === user._id);\n      setReaction(userLiked ? 'like' : userDisliked ? 'dislike' : null);\n    }\n    setLikeCount((meme === null || meme === void 0 ? void 0 : (_meme$likes2 = meme.likes) === null || _meme$likes2 === void 0 ? void 0 : _meme$likes2.length) || 0);\n    setDislikeCount((meme === null || meme === void 0 ? void 0 : (_meme$dislikes2 = meme.dislikes) === null || _meme$dislikes2 === void 0 ? void 0 : _meme$dislikes2.length) || 0);\n    setCommentCount((meme === null || meme === void 0 ? void 0 : meme.commentCount) || 0);\n    setRepostCount((meme === null || meme === void 0 ? void 0 : meme.repostCount) || 0);\n  }, [meme, user]);\n  const checkIfReposted = async () => {\n    try {\n      const response = await api.get(`/memes/${meme._id}/repost-status`);\n      setIsReposted(response.data.isReposted);\n    } catch (error) {\n      console.error('Erro ao verificar repost:', error);\n    }\n  };\n  const handleReaction = async type => {\n    if (!user) return;\n    try {\n      // Verifica se a rota existe - pode ser /like ou /reaction\n      let endpoint = `/memes/${meme._id}/like`;\n\n      // Tenta primeiro o endpoint /like\n      let response;\n      try {\n        if (reaction === type) {\n          // Remove a reação\n          response = await api.delete(endpoint);\n        } else {\n          // Adiciona/atualiza a reação\n          response = await api.post(endpoint, {\n            type\n          });\n        }\n      } catch (apiError) {\n        // Se falhar, tenta o endpoint /reaction\n        endpoint = `/memes/${meme._id}/reaction`;\n        if (reaction === type) {\n          response = await api.post(endpoint, {\n            type: 'remove'\n          });\n        } else {\n          response = await api.post(endpoint, {\n            type\n          });\n        }\n      }\n\n      // Atualiza os estados com a resposta\n      setReaction(response.data.userReaction || null);\n      setLikeCount(response.data.likes || 0);\n      setDislikeCount(response.data.dislikes || 0);\n\n      // Trigger animations\n      if (type === 'like') {\n        setAnimateLike(true);\n        setTimeout(() => setAnimateLike(false), 500);\n      } else {\n        setAnimateDislike(true);\n        setTimeout(() => setAnimateDislike(false), 500);\n      }\n    } catch (error) {\n      console.error('Erro ao reagir:', error);\n      alert('Ocorreu um erro ao processar sua reação. Por favor, tente novamente.');\n    }\n  };\n  const handleRepost = async () => {\n    if (!user) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/repost`);\n      setIsReposted(response.data.isReposted);\n      setRepostCount(response.data.repostCount || 0);\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n      alert('Ocorreu um erro ao repostar. Por favor, tente novamente.');\n    }\n  };\n  const handleCommentSubmit = async text => {\n    try {\n      await api.post(`/memes/${meme._id}/comments`, {\n        text\n      });\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\n      setCommentCount(updatedMeme.data.commentCount || 0);\n      setShowComments(true);\n    } catch (error) {\n      console.error('Erro ao comentar:', error);\n      throw error;\n    }\n  };\n  const buildUrl = url => {\n    if (!url) return '';\n    if (url.startsWith('http')) return url;\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: (_meme$author = meme.author) !== null && _meme$author !== void 0 && (_meme$author$profile = _meme$author.profile) !== null && _meme$author$profile !== void 0 && _meme$author$profile.avatar ? buildUrl(meme.author.profile.avatar) : 'https://i.pravatar.cc/150?img=3',\n        alt: (_meme$author2 = meme.author) === null || _meme$author2 === void 0 ? void 0 : _meme$author2.username,\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        style: {\n          cursor: 'pointer'\n        },\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://i.pravatar.cc/150?img=3';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Username, {\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"@\", ((_meme$author3 = meme.author) === null || _meme$author3 === void 0 ? void 0 : _meme$author3.username) || 'usuário desconhecido']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaContainer, {\n      children: meme.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: buildUrl(meme.mediaUrl),\n        alt: meme.caption || 'Meme image',\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: buildUrl(meme.mediaUrl),\n        controls: true,\n        crossOrigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), meme.caption && /*#__PURE__*/_jsxDEV(Caption, {\n      children: meme.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 24\n    }, this), ((_meme$tags = meme.tags) === null || _meme$tags === void 0 ? void 0 : _meme$tags.length) > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n      children: meme.tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"#\", tag]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      children: [/*#__PURE__*/_jsxDEV(EmojiButton, {\n        onClick: () => handleReaction('like'),\n        $animate: animateLike,\n        $active: reaction === 'like',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: reaction === 'like' ? '😍' : '😊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), \" \", likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmojiButton, {\n        onClick: () => handleReaction('dislike'),\n        $animate: animateDislike,\n        $active: reaction === 'dislike',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: reaction === 'dislike' ? '😠' : '🙁'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), \" \", dislikeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => setShowComments(!showComments),\n        $active: showComments,\n        children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), \" \", commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleRepost,\n        $active: isReposted,\n        children: [/*#__PURE__*/_jsxDEV(FiRepeat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), \" \", repostCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [/*#__PURE__*/_jsxDEV(FiShare2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), \" Compartilhar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentSection, {\n      memeId: meme._id,\n      onCommentSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeCard, \"HS2O6QU4dRgpxSnybx22icdIims=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c12 = MemeCard;\nMemeCard.propTypes = {\n  meme: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    author: PropTypes.shape({\n      _id: PropTypes.string,\n      username: PropTypes.string,\n      profile: PropTypes.shape({\n        avatar: PropTypes.string\n      })\n    }),\n    likes: PropTypes.array,\n    dislikes: PropTypes.array,\n    commentCount: PropTypes.number,\n    repostCount: PropTypes.number,\n    mediaType: PropTypes.oneOf(['image', 'video']),\n    mediaUrl: PropTypes.string,\n    caption: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string)\n  })\n};\nexport default MemeCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Username\");\n$RefreshReg$(_c5, \"MediaContainer\");\n$RefreshReg$(_c6, \"Caption\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"Tag\");\n$RefreshReg$(_c9, \"Actions\");\n$RefreshReg$(_c10, \"ActionButton\");\n$RefreshReg$(_c11, \"EmojiButton\");\n$RefreshReg$(_c12, \"MemeCard\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","FiMessageSquare","FiShare2","FiRepeat","api","useAuth","CommentSection","useNavigate","PropTypes","jsxDEV","_jsxDEV","bounce","shake","Card","div","_c","Header","_c2","Avatar","img","_c3","Username","span","_c4","MediaContainer","_c5","Caption","p","_c6","Tags","_c7","Tag","_c8","Actions","_c9","ActionButton","button","props","$active","_c10","EmojiButton","$animate","_c11","MemeCard","meme","_s","_meme$likes","_meme$dislikes","_meme$author","_meme$author$profile","_meme$author2","_meme$author3","_meme$tags","_id","children","style","padding","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","navigate","user","reaction","setReaction","likeCount","setLikeCount","likes","length","dislikeCount","setDislikeCount","dislikes","showComments","setShowComments","commentCount","setCommentCount","isReposted","setIsReposted","repostCount","setRepostCount","animateLike","setAnimateLike","animateDislike","setAnimateDislike","_meme$likes2","_meme$dislikes2","userLiked","some","like","toString","userDisliked","dislike","checkIfReposted","response","get","data","error","console","handleReaction","type","endpoint","delete","post","apiError","userReaction","setTimeout","alert","handleRepost","handleCommentSubmit","text","updatedMeme","buildUrl","url","startsWith","process","env","REACT_APP_API_URL","src","author","profile","avatar","alt","username","onClick","cursor","crossOrigin","onError","e","target","onerror","mediaType","mediaUrl","caption","controls","tags","map","tag","memeId","onCommentSubmit","_c12","propTypes","shape","string","isRequired","array","number","oneOf","arrayOf","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { FiMessageSquare, FiShare2, FiRepeat } from 'react-icons/fi';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport CommentSection from './CommentSection';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Animações\r\nconst bounce = keyframes`\r\n  0%, 100% { transform: scale(1); }\r\n  50% { transform: scale(1.3); }\r\n`;\r\n\r\nconst shake = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  25% { transform: rotate(-10deg); }\r\n  50% { transform: rotate(10deg); }\r\n  75% { transform: rotate(-10deg); }\r\n  100% { transform: rotate(0deg); }\r\n`;\r\n\r\n// Estilos\r\nconst Card = styled.div`\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 12px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-weight: 600;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst MediaContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  background: #f5f5f5;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  img, video {\r\n    max-width: 100%;\r\n    max-height: 500px;\r\n    display: block;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst Caption = styled.p`\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  padding: 0 16px 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  color: #ff4500;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  padding: 8px 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  \r\n  svg {\r\n    margin-right: 6px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst EmojiButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  margin-right: 24px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  span {\r\n    margin-right: 6px;\r\n    display: inline-block;\r\n    animation: ${props => props.$animate ? bounce : 'none'} 0.5s ease;\r\n  }\r\n\r\n  &:hover span {\r\n    animation: ${props => props.$animate ? bounce : shake} 0.5s ease;\r\n  }\r\n`;\r\n\r\nconst MemeCard = ({ meme }) => {\r\n  // Verificação inicial de segurança\r\n  if (!meme || !meme._id) {\r\n    return (\r\n      <Card>\r\n        <div style={{ padding: '20px', color: '#999', textAlign: 'center' }}>\r\n          Conteúdo não disponível\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [reaction, setReaction] = useState(null);\r\n  const [likeCount, setLikeCount] = useState(meme?.likes?.length || 0);\r\n  const [dislikeCount, setDislikeCount] = useState(meme?.dislikes?.length || 0);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(meme?.commentCount || 0);\r\n  const [isReposted, setIsReposted] = useState(false);\r\n  const [repostCount, setRepostCount] = useState(meme?.repostCount || 0);\r\n  const [animateLike, setAnimateLike] = useState(false);\r\n  const [animateDislike, setAnimateDislike] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && meme?.likes && meme?.dislikes) {\r\n      const userLiked = meme.likes.some(like => like.toString() === user._id);\r\n      const userDisliked = meme.dislikes.some(dislike => dislike.toString() === user._id);\r\n      setReaction(userLiked ? 'like' : userDisliked ? 'dislike' : null);\r\n    }\r\n    setLikeCount(meme?.likes?.length || 0);\r\n    setDislikeCount(meme?.dislikes?.length || 0);\r\n    setCommentCount(meme?.commentCount || 0);\r\n    setRepostCount(meme?.repostCount || 0);\r\n  }, [meme, user]);\r\n\r\n  const checkIfReposted = async () => {\r\n    try {\r\n      const response = await api.get(`/memes/${meme._id}/repost-status`);\r\n      setIsReposted(response.data.isReposted);\r\n    } catch (error) {\r\n      console.error('Erro ao verificar repost:', error);\r\n    }\r\n  };\r\n\r\n  const handleReaction = async (type) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      // Verifica se a rota existe - pode ser /like ou /reaction\r\n      let endpoint = `/memes/${meme._id}/like`;\r\n      \r\n      // Tenta primeiro o endpoint /like\r\n      let response;\r\n      try {\r\n        if (reaction === type) {\r\n          // Remove a reação\r\n          response = await api.delete(endpoint);\r\n        } else {\r\n          // Adiciona/atualiza a reação\r\n          response = await api.post(endpoint, { type });\r\n        }\r\n      } catch (apiError) {\r\n        // Se falhar, tenta o endpoint /reaction\r\n        endpoint = `/memes/${meme._id}/reaction`;\r\n        if (reaction === type) {\r\n          response = await api.post(endpoint, { type: 'remove' });\r\n        } else {\r\n          response = await api.post(endpoint, { type });\r\n        }\r\n      }\r\n\r\n      // Atualiza os estados com a resposta\r\n      setReaction(response.data.userReaction || null);\r\n      setLikeCount(response.data.likes || 0);\r\n      setDislikeCount(response.data.dislikes || 0);\r\n\r\n      // Trigger animations\r\n      if (type === 'like') {\r\n        setAnimateLike(true);\r\n        setTimeout(() => setAnimateLike(false), 500);\r\n      } else {\r\n        setAnimateDislike(true);\r\n        setTimeout(() => setAnimateDislike(false), 500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao reagir:', error);\r\n      alert('Ocorreu um erro ao processar sua reação. Por favor, tente novamente.');\r\n    }\r\n  };\r\n\r\n  const handleRepost = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/repost`);\r\n      setIsReposted(response.data.isReposted);\r\n      setRepostCount(response.data.repostCount || 0);\r\n    } catch (error) {\r\n      console.error('Erro ao repostar:', error);\r\n      alert('Ocorreu um erro ao repostar. Por favor, tente novamente.');\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (text) => {\r\n    try {\r\n      await api.post(`/memes/${meme._id}/comments`, { text });\r\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\r\n      setCommentCount(updatedMeme.data.commentCount || 0);\r\n      setShowComments(true);\r\n    } catch (error) {\r\n      console.error('Erro ao comentar:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const buildUrl = (url) => {\r\n    if (!url) return '';\r\n    if (url.startsWith('http')) return url;\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Header>\r\n        <Avatar \r\n          src={\r\n            meme.author?.profile?.avatar\r\n              ? buildUrl(meme.author.profile.avatar)\r\n              : 'https://i.pravatar.cc/150?img=3'\r\n          }\r\n          alt={meme.author?.username}\r\n          onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}\r\n          style={{ cursor: 'pointer' }}\r\n          crossOrigin=\"anonymous\"\r\n          onError={(e) => {\r\n            e.target.src = 'https://i.pravatar.cc/150?img=3';\r\n            e.target.onerror = null;\r\n          }}\r\n        />\r\n        <Username \r\n          onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          @{meme.author?.username || 'usuário desconhecido'}\r\n        </Username>\r\n      </Header>\r\n      \r\n      <MediaContainer>\r\n        {meme.mediaType === 'image' ? (\r\n          <img \r\n            src={buildUrl(meme.mediaUrl)}\r\n            alt={meme.caption || 'Meme image'}\r\n            crossOrigin=\"anonymous\"\r\n            onError={(e) => {\r\n              e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n              e.target.onerror = null;\r\n            }}\r\n          />\r\n        ) : (\r\n          <video \r\n            src={buildUrl(meme.mediaUrl)}\r\n            controls \r\n            crossOrigin=\"anonymous\"\r\n          />\r\n        )}\r\n      </MediaContainer>\r\n\r\n      {meme.caption && <Caption>{meme.caption}</Caption>}\r\n      \r\n      {meme.tags?.length > 0 && (\r\n        <Tags>\r\n          {meme.tags.map(tag => (\r\n            <Tag key={tag}>#{tag}</Tag>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n\r\n      <Actions>\r\n        <EmojiButton\r\n          onClick={() => handleReaction('like')}\r\n          $animate={animateLike}\r\n          $active={reaction === 'like'}\r\n        >\r\n          <span>{reaction === 'like' ? '😍' : '😊'}</span> {likeCount}\r\n        </EmojiButton>\r\n        \r\n        <EmojiButton\r\n          onClick={() => handleReaction('dislike')}\r\n          $animate={animateDislike}\r\n          $active={reaction === 'dislike'}\r\n        >\r\n          <span>{reaction === 'dislike' ? '😠' : '🙁'}</span> {dislikeCount}\r\n        </EmojiButton>\r\n        \r\n        <ActionButton \r\n          onClick={() => setShowComments(!showComments)}\r\n          $active={showComments}\r\n        >\r\n          <FiMessageSquare /> {commentCount}\r\n        </ActionButton>\r\n        \r\n        <ActionButton\r\n          onClick={handleRepost}\r\n          $active={isReposted}\r\n        >\r\n          <FiRepeat /> {repostCount}\r\n        </ActionButton>\r\n        \r\n        <ActionButton>\r\n          <FiShare2 /> Compartilhar\r\n        </ActionButton>\r\n      </Actions>\r\n\r\n      {showComments && (\r\n        <CommentSection \r\n          memeId={meme._id}\r\n          onCommentSubmit={handleCommentSubmit}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nMemeCard.propTypes = {\r\n  meme: PropTypes.shape({\r\n    _id: PropTypes.string.isRequired,\r\n    author: PropTypes.shape({\r\n      _id: PropTypes.string,\r\n      username: PropTypes.string,\r\n      profile: PropTypes.shape({\r\n        avatar: PropTypes.string\r\n      })\r\n    }),\r\n    likes: PropTypes.array,\r\n    dislikes: PropTypes.array,\r\n    commentCount: PropTypes.number,\r\n    repostCount: PropTypes.number,\r\n    mediaType: PropTypes.oneOf(['image', 'video']),\r\n    mediaUrl: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    tags: PropTypes.arrayOf(PropTypes.string)\r\n  })\r\n};\r\n\r\nexport default MemeCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}