{"ast":null,"code":"// src/contexts/AuthContext.js\nimport React,{createContext,useState,useEffect,useCallback,useContext}from'react';import{checkAuth,logout as apiLogout}from'../services/auth';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[initialCheckDone,setInitialCheckDone]=useState(false);const verifyAuth=useCallback(async()=>{const token=localStorage.getItem('token');if(!token){setLoading(false);setInitialCheckDone(true);return;}try{setLoading(true);const response=await checkAuth();setUser((response===null||response===void 0?void 0:response.user)||null);}catch(error){console.error('Auth verification failed:',error);localStorage.removeItem('token');setUser(null);}finally{setLoading(false);setInitialCheckDone(true);}},[]);const logout=useCallback(async()=>{try{await apiLogout();}finally{localStorage.removeItem('token');setUser(null);}},[]);/**\n   * Atualiza os dados do usuário autenticado\n   * @param {Object} updates - Objeto com as propriedades a serem atualizadas\n   * @param {boolean} [shouldRevalidate=true] - Se deve verificar a autenticação após atualizar\n   */const updateUser=useCallback(async function(updates){let shouldRevalidate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;try{// Otimista: atualiza o estado local primeiro\nsetUser(prev=>({...prev,...updates}));if(shouldRevalidate){// Se necessário, faz uma nova verificação no servidor\nawait verifyAuth();}}catch(error){console.error('Failed to update user:',error);throw error;}},[verifyAuth]);/**\n   * Atualiza a foto de perfil do usuário\n   * @param {File} avatarFile - Arquivo da imagem do avatar\n   */const updateAvatar=useCallback(async avatarFile=>{try{const formData=new FormData();formData.append('avatar',avatarFile);const{data}=await api.put('/users/profile',formData,{headers:{'Content-Type':'multipart/form-data'}});await updateUser(data);return data;}catch(error){console.error('Failed to update avatar:',error);throw error;}},[updateUser]);useEffect(()=>{verifyAuth();},[verifyAuth]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,initialCheckDone,verifyAuth,logout,updateUser,updateAvatar},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","checkAuth","logout","apiLogout","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","initialCheckDone","setInitialCheckDone","verifyAuth","token","localStorage","getItem","response","error","console","removeItem","updateUser","updates","shouldRevalidate","arguments","length","undefined","prev","updateAvatar","avatarFile","formData","FormData","append","data","put","headers","Provider","value","useAuth","context","Error"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny2/client/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport { checkAuth, logout as apiLogout } from '../services/auth';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [initialCheckDone, setInitialCheckDone] = useState(false);\n\n  const verifyAuth = useCallback(async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      setInitialCheckDone(true);\n      return;\n    }\n  \n    try {\n      setLoading(true);\n      const response = await checkAuth();\n      setUser(response?.user || null);\n    } catch (error) {\n      console.error('Auth verification failed:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n      setInitialCheckDone(true);\n    }\n  }, []);\n\n  const logout = useCallback(async () => {\n    try {\n      await apiLogout();\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n    }\n  }, []);\n\n  /**\n   * Atualiza os dados do usuário autenticado\n   * @param {Object} updates - Objeto com as propriedades a serem atualizadas\n   * @param {boolean} [shouldRevalidate=true] - Se deve verificar a autenticação após atualizar\n   */\n  const updateUser = useCallback(async (updates, shouldRevalidate = true) => {\n    try {\n      // Otimista: atualiza o estado local primeiro\n      setUser(prev => ({ ...prev, ...updates }));\n      \n      if (shouldRevalidate) {\n        // Se necessário, faz uma nova verificação no servidor\n        await verifyAuth();\n      }\n    } catch (error) {\n      console.error('Failed to update user:', error);\n      throw error;\n    }\n  }, [verifyAuth]);\n\n  /**\n   * Atualiza a foto de perfil do usuário\n   * @param {File} avatarFile - Arquivo da imagem do avatar\n   */\n  const updateAvatar = useCallback(async (avatarFile) => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', avatarFile);\n      \n      const { data } = await api.put('/users/profile', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      await updateUser(data);\n      return data;\n    } catch (error) {\n      console.error('Failed to update avatar:', error);\n      throw error;\n    }\n  }, [updateUser]);\n\n  useEffect(() => {\n    verifyAuth();\n  }, [verifyAuth]);\n\n  return (\n    <AuthContext.Provider value={{\n      user,\n      loading,\n      initialCheckDone,\n      verifyAuth,\n      logout,\n      updateUser,\n      updateAvatar\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}