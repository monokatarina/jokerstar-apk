{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drrod\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ifunny-clone\\\\client\\\\src\\\\components\\\\MemeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { FiMessageSquare, FiShare2, FiRepeat } from 'react-icons/fi';\nimport api from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport CommentSection from './CommentSection';\nimport { useNavigate } from 'react-router-dom';\n\n// Animações\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bounce = keyframes`\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.3); }\n`;\nconst shake = keyframes`\n  0% { transform: rotate(0deg); }\n  25% { transform: rotate(-10deg); }\n  50% { transform: rotate(10deg); }\n  75% { transform: rotate(-10deg); }\n  100% { transform: rotate(0deg); }\n`;\n\n// Estilos\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n  overflow: hidden;\n`;\n_c = Card;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n`;\n_c2 = Header;\nconst Avatar = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 12px;\n  object-fit: cover;\n`;\n_c3 = Avatar;\nconst Username = styled.span`\n  font-weight: 600;\n  &:hover {\n    text-decoration: underline;\n    color: #ff4500;\n  }\n`;\n_c4 = Username;\nconst MediaContainer = styled.div`\n  width: 100%;\n  min-height: 300px;\n  background: #f5f5f5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  img, video {\n    max-width: 100%;\n    max-height: 500px;\n    display: block;\n    object-fit: contain;\n  }\n`;\n_c5 = MediaContainer;\nconst Caption = styled.p`\n  padding: 12px 16px;\n  margin: 0;\n`;\n_c6 = Caption;\nconst Tags = styled.div`\n  padding: 0 16px 12px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n_c7 = Tags;\nconst Tag = styled.span`\n  color: #ff4500;\n  font-size: 0.9rem;\n`;\n_c8 = Tag;\nconst Actions = styled.div`\n  display: flex;\n  padding: 8px 16px;\n  border-top: 1px solid #f0f0f0;\n`;\n_c9 = Actions;\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  color: ${props => props.$active ? '#ff4500' : '#666'};\n  cursor: pointer;\n  font-size: 0.9rem;\n  \n  svg {\n    margin-right: 6px;\n    font-size: 1.2rem;\n  }\n\n  &:hover {\n    color: #ff4500;\n  }\n`;\n_c10 = ActionButton;\nconst EmojiButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.5rem;\n  margin-right: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  \n  span {\n    margin-right: 6px;\n    display: inline-block;\n    animation: ${props => props.$animate ? bounce : 'none'} 0.5s ease;\n  }\n\n  &:hover span {\n    animation: ${props => props.$animate ? bounce : shake} 0.5s ease;\n  }\n`;\n_c11 = EmojiButton;\nconst MemeCard = ({\n  meme\n}) => {\n  _s();\n  var _meme$likes, _meme$dislikes, _meme$author, _meme$author$profile, _meme$author2, _meme$author3, _meme$tags;\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [reaction, setReaction] = useState(null); // 'like', 'dislike' ou null\n  const [likeCount, setLikeCount] = useState(((_meme$likes = meme.likes) === null || _meme$likes === void 0 ? void 0 : _meme$likes.length) || 0);\n  const [dislikeCount, setDislikeCount] = useState(((_meme$dislikes = meme.dislikes) === null || _meme$dislikes === void 0 ? void 0 : _meme$dislikes.length) || 0);\n  const [showComments, setShowComments] = useState(false);\n  const [commentCount, setCommentCount] = useState(meme.commentCount || 0);\n  const [isReposted, setIsReposted] = useState(false);\n  const [repostCount, setRepostCount] = useState(meme.repostCount || 0);\n  const [animateLike, setAnimateLike] = useState(false);\n  const [animateDislike, setAnimateDislike] = useState(false);\n  useEffect(() => {\n    var _meme$likes2, _meme$dislikes2;\n    if (user) {\n      if (meme.likes) {\n        setReaction(meme.likes.some(like => like.toString() === user._id) ? 'like' : meme.dislikes.some(dislike => dislike.toString() === user._id) ? 'dislike' : null);\n      }\n      checkIfReposted();\n    }\n    setLikeCount(((_meme$likes2 = meme.likes) === null || _meme$likes2 === void 0 ? void 0 : _meme$likes2.length) || 0);\n    setDislikeCount(((_meme$dislikes2 = meme.dislikes) === null || _meme$dislikes2 === void 0 ? void 0 : _meme$dislikes2.length) || 0);\n    setCommentCount(meme.commentCount || 0);\n    setRepostCount(meme.repostCount || 0);\n  }, [meme, user]);\n  const checkIfReposted = async () => {\n    try {\n      const response = await api.get(`/memes/${meme._id}/reposted-by-me`);\n      setIsReposted(response.data.isReposted);\n    } catch (error) {\n      console.error('Erro ao verificar repost:', error);\n    }\n  };\n  const handleReaction = async type => {\n    if (!user) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/reaction`, {\n        type\n      });\n      setReaction(response.data.userReaction);\n      setLikeCount(response.data.likes);\n      setDislikeCount(response.data.dislikes);\n\n      // Trigger animations\n      if (type === 'like') {\n        setAnimateLike(true);\n        setTimeout(() => setAnimateLike(false), 500);\n      } else {\n        setAnimateDislike(true);\n        setTimeout(() => setAnimateDislike(false), 500);\n      }\n    } catch (error) {\n      console.error('Erro ao reagir:', error);\n    }\n  };\n  const handleRepost = async () => {\n    if (!user) return;\n    try {\n      const response = await api.post(`/memes/${meme._id}/repost`);\n      setIsReposted(response.data.isReposted);\n      setRepostCount(response.data.repostCount);\n    } catch (error) {\n      console.error('Erro ao repostar:', error);\n    }\n  };\n  const handleCommentSubmit = async text => {\n    try {\n      await api.post(`/memes/${meme._id}/comments`, {\n        text\n      });\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\n      setCommentCount(updatedMeme.data.commentCount || 0);\n      setShowComments(true);\n    } catch (error) {\n      console.error('Erro ao comentar:', error);\n      throw error;\n    }\n  };\n  const buildUrl = url => {\n    if (!url) return '';\n    if (url.startsWith('http')) return url;\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: (_meme$author = meme.author) !== null && _meme$author !== void 0 && (_meme$author$profile = _meme$author.profile) !== null && _meme$author$profile !== void 0 && _meme$author$profile.avatar ? buildUrl(meme.author.profile.avatar) : 'https://i.pravatar.cc/150?img=3',\n        alt: (_meme$author2 = meme.author) === null || _meme$author2 === void 0 ? void 0 : _meme$author2.username,\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        style: {\n          cursor: 'pointer'\n        },\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://i.pravatar.cc/150?img=3';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Username, {\n        onClick: () => meme.author && navigate(`/users/${meme.author._id}`),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [\"@\", ((_meme$author3 = meme.author) === null || _meme$author3 === void 0 ? void 0 : _meme$author3.username) || 'usuário desconhecido']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MediaContainer, {\n      children: meme.mediaType === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: buildUrl(meme.mediaUrl),\n        alt: meme.caption || 'Meme image',\n        crossOrigin: \"anonymous\",\n        onError: e => {\n          e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\n          e.target.onerror = null;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: buildUrl(meme.mediaUrl),\n        controls: true,\n        crossOrigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), meme.caption && /*#__PURE__*/_jsxDEV(Caption, {\n      children: meme.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 24\n    }, this), ((_meme$tags = meme.tags) === null || _meme$tags === void 0 ? void 0 : _meme$tags.length) > 0 && /*#__PURE__*/_jsxDEV(Tags, {\n      children: meme.tags.map(tag => /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"#\", tag]\n      }, tag, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Actions, {\n      children: [/*#__PURE__*/_jsxDEV(EmojiButton, {\n        onClick: () => handleReaction('like'),\n        $animate: animateLike,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: reaction === 'like' ? '😍' : '😊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), \" \", likeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmojiButton, {\n        onClick: () => handleReaction('dislike'),\n        $animate: animateDislike,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: reaction === 'dislike' ? '😠' : '🙁'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), \" \", dislikeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: () => setShowComments(!showComments),\n        $active: showComments,\n        children: [/*#__PURE__*/_jsxDEV(FiMessageSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), \" \", commentCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        onClick: handleRepost,\n        $active: isReposted,\n        children: [/*#__PURE__*/_jsxDEV(FiRepeat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), \" \", repostCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n        children: [/*#__PURE__*/_jsxDEV(FiShare2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), \" Compartilhar\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentSection, {\n      memeId: meme._id,\n      onCommentSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeCard, \"QjMREyGXK1OnnU8Izh1nVV2zXN0=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c12 = MemeCard;\nexport default MemeCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Username\");\n$RefreshReg$(_c5, \"MediaContainer\");\n$RefreshReg$(_c6, \"Caption\");\n$RefreshReg$(_c7, \"Tags\");\n$RefreshReg$(_c8, \"Tag\");\n$RefreshReg$(_c9, \"Actions\");\n$RefreshReg$(_c10, \"ActionButton\");\n$RefreshReg$(_c11, \"EmojiButton\");\n$RefreshReg$(_c12, \"MemeCard\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","FiMessageSquare","FiShare2","FiRepeat","api","useAuth","CommentSection","useNavigate","jsxDEV","_jsxDEV","bounce","shake","Card","div","_c","Header","_c2","Avatar","img","_c3","Username","span","_c4","MediaContainer","_c5","Caption","p","_c6","Tags","_c7","Tag","_c8","Actions","_c9","ActionButton","button","props","$active","_c10","EmojiButton","$animate","_c11","MemeCard","meme","_s","_meme$likes","_meme$dislikes","_meme$author","_meme$author$profile","_meme$author2","_meme$author3","_meme$tags","navigate","user","reaction","setReaction","likeCount","setLikeCount","likes","length","dislikeCount","setDislikeCount","dislikes","showComments","setShowComments","commentCount","setCommentCount","isReposted","setIsReposted","repostCount","setRepostCount","animateLike","setAnimateLike","animateDislike","setAnimateDislike","_meme$likes2","_meme$dislikes2","some","like","toString","_id","dislike","checkIfReposted","response","get","data","error","console","handleReaction","type","post","userReaction","setTimeout","handleRepost","handleCommentSubmit","text","updatedMeme","buildUrl","url","startsWith","process","env","REACT_APP_API_URL","children","src","author","profile","avatar","alt","username","onClick","style","cursor","crossOrigin","onError","e","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","mediaType","mediaUrl","caption","controls","tags","map","tag","memeId","onCommentSubmit","_c12","$RefreshReg$"],"sources":["C:/Users/drrod/OneDrive/Área de Trabalho/ifunny-clone/client/src/components/MemeCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { FiMessageSquare, FiShare2, FiRepeat } from 'react-icons/fi';\r\nimport api from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport CommentSection from './CommentSection';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Animações\r\nconst bounce = keyframes`\r\n  0%, 100% { transform: scale(1); }\r\n  50% { transform: scale(1.3); }\r\n`;\r\n\r\nconst shake = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  25% { transform: rotate(-10deg); }\r\n  50% { transform: rotate(10deg); }\r\n  75% { transform: rotate(-10deg); }\r\n  100% { transform: rotate(0deg); }\r\n`;\r\n\r\n// Estilos\r\nconst Card = styled.div`\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  margin-bottom: 24px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 12px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-weight: 600;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst MediaContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 300px;\r\n  background: #f5f5f5;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  img, video {\r\n    max-width: 100%;\r\n    max-height: 500px;\r\n    display: block;\r\n    object-fit: contain;\r\n  }\r\n`;\r\n\r\nconst Caption = styled.p`\r\n  padding: 12px 16px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  padding: 0 16px 12px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n  color: #ff4500;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  padding: 8px 16px;\r\n  border-top: 1px solid #f0f0f0;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 24px;\r\n  color: ${props => props.$active ? '#ff4500' : '#666'};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  \r\n  svg {\r\n    margin-right: 6px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #ff4500;\r\n  }\r\n`;\r\n\r\nconst EmojiButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.5rem;\r\n  margin-right: 24px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  span {\r\n    margin-right: 6px;\r\n    display: inline-block;\r\n    animation: ${props => props.$animate ? bounce : 'none'} 0.5s ease;\r\n  }\r\n\r\n  &:hover span {\r\n    animation: ${props => props.$animate ? bounce : shake} 0.5s ease;\r\n  }\r\n`;\r\n\r\nconst MemeCard = ({ meme }) => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [reaction, setReaction] = useState(null); // 'like', 'dislike' ou null\r\n  const [likeCount, setLikeCount] = useState(meme.likes?.length || 0);\r\n  const [dislikeCount, setDislikeCount] = useState(meme.dislikes?.length || 0);\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCount, setCommentCount] = useState(meme.commentCount || 0);\r\n  const [isReposted, setIsReposted] = useState(false);\r\n  const [repostCount, setRepostCount] = useState(meme.repostCount || 0);\r\n  const [animateLike, setAnimateLike] = useState(false);\r\n  const [animateDislike, setAnimateDislike] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (meme.likes) {\r\n        setReaction(meme.likes.some(like => like.toString() === user._id) ? 'like' : \r\n                  meme.dislikes.some(dislike => dislike.toString() === user._id) ? 'dislike' : null);\r\n      }\r\n      checkIfReposted();\r\n    }\r\n    setLikeCount(meme.likes?.length || 0);\r\n    setDislikeCount(meme.dislikes?.length || 0);\r\n    setCommentCount(meme.commentCount || 0);\r\n    setRepostCount(meme.repostCount || 0);\r\n  }, [meme, user]);\r\n\r\n  const checkIfReposted = async () => {\r\n    try {\r\n      const response = await api.get(`/memes/${meme._id}/reposted-by-me`);\r\n      setIsReposted(response.data.isReposted);\r\n    } catch (error) {\r\n      console.error('Erro ao verificar repost:', error);\r\n    }\r\n  };\r\n\r\n  const handleReaction = async (type) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/reaction`, { type });\r\n      \r\n      setReaction(response.data.userReaction);\r\n      setLikeCount(response.data.likes);\r\n      setDislikeCount(response.data.dislikes);\r\n      \r\n      // Trigger animations\r\n      if (type === 'like') {\r\n        setAnimateLike(true);\r\n        setTimeout(() => setAnimateLike(false), 500);\r\n      } else {\r\n        setAnimateDislike(true);\r\n        setTimeout(() => setAnimateDislike(false), 500);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao reagir:', error);\r\n    }\r\n  };\r\n\r\n  const handleRepost = async () => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      const response = await api.post(`/memes/${meme._id}/repost`);\r\n      setIsReposted(response.data.isReposted);\r\n      setRepostCount(response.data.repostCount);\r\n    } catch (error) {\r\n      console.error('Erro ao repostar:', error);\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (text) => {\r\n    try {\r\n      await api.post(`/memes/${meme._id}/comments`, { text });\r\n      \r\n      const updatedMeme = await api.get(`/memes/${meme._id}`);\r\n      setCommentCount(updatedMeme.data.commentCount || 0);\r\n      setShowComments(true);\r\n    } catch (error) {\r\n      console.error('Erro ao comentar:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const buildUrl = (url) => {\r\n    if (!url) return '';\r\n    if (url.startsWith('http')) return url;\r\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${url}`;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Header>\r\n        <Avatar \r\n          src={\r\n            meme.author?.profile?.avatar\r\n              ? buildUrl(meme.author.profile.avatar)\r\n              : 'https://i.pravatar.cc/150?img=3'\r\n          }\r\n          alt={meme.author?.username}\r\n          onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}\r\n          style={{ cursor: 'pointer' }}\r\n          crossOrigin=\"anonymous\"\r\n          onError={(e) => {\r\n            e.target.src = 'https://i.pravatar.cc/150?img=3';\r\n            e.target.onerror = null;\r\n          }}\r\n        />\r\n        <Username \r\n          onClick={() => meme.author && navigate(`/users/${meme.author._id}`)}\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          @{meme.author?.username || 'usuário desconhecido'}\r\n        </Username>\r\n      </Header>\r\n      \r\n      <MediaContainer>\r\n        {meme.mediaType === 'image' ? (\r\n          <img \r\n            src={buildUrl(meme.mediaUrl)}\r\n            alt={meme.caption || 'Meme image'}\r\n            crossOrigin=\"anonymous\"\r\n            onError={(e) => {\r\n              e.target.src = 'https://placehold.co/600x400?text=Imagem+não+carregada';\r\n              e.target.onerror = null;\r\n            }}\r\n          />\r\n        ) : (\r\n          <video \r\n            src={buildUrl(meme.mediaUrl)}\r\n            controls \r\n            crossOrigin=\"anonymous\"\r\n          />\r\n        )}\r\n      </MediaContainer>\r\n\r\n      {meme.caption && <Caption>{meme.caption}</Caption>}\r\n      \r\n      {meme.tags?.length > 0 && (\r\n        <Tags>\r\n          {meme.tags.map(tag => (\r\n            <Tag key={tag}>#{tag}</Tag>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n\r\n      <Actions>\r\n        <EmojiButton\r\n          onClick={() => handleReaction('like')}\r\n          $animate={animateLike}\r\n        >\r\n          <span>{reaction === 'like' ? '😍' : '😊'}</span> {likeCount}\r\n        </EmojiButton>\r\n        \r\n        <EmojiButton\r\n          onClick={() => handleReaction('dislike')}\r\n          $animate={animateDislike}\r\n        >\r\n          <span>{reaction === 'dislike' ? '😠' : '🙁'}</span> {dislikeCount}\r\n        </EmojiButton>\r\n        \r\n        <ActionButton \r\n          onClick={() => setShowComments(!showComments)}\r\n          $active={showComments}\r\n        >\r\n          <FiMessageSquare /> {commentCount}\r\n        </ActionButton>\r\n        \r\n        <ActionButton\r\n          onClick={handleRepost}\r\n          $active={isReposted}\r\n        >\r\n          <FiRepeat /> {repostCount}\r\n        </ActionButton>\r\n        \r\n        <ActionButton>\r\n          <FiShare2 /> Compartilhar\r\n        </ActionButton>\r\n      </Actions>\r\n\r\n      {showComments && (\r\n        <CommentSection \r\n          memeId={meme._id}\r\n          onCommentSubmit={handleCommentSubmit}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemeCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}